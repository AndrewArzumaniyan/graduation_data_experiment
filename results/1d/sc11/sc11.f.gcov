        -:    0:Source:results/1d/sc11/sc11.f
        -:    0:Graph:./results\1d\sc11\sc11.gcno
        -:    0:Data:./results\1d\sc11\sc11.gcda
        -:    0:Runs:1
function MAIN__ called 1 returned 100% blocks executed 100%
        1:    1:      program SC11
        -:    2:     
        -:    3:c    TESTING OF THE SHADOW DIRECTIVE AND THE SHADOW_COMPUTE CLAUSE       
        -:    4:c    DISTRIBUTED ARRAY A(N) IS TO HAVE DIFFERENT SHADOW WIDTH
        -:    5:c    ON BOTH SIDES 
        -:    6:
        1:    7:      print *,'===START OF SC11========================'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:    8:C --------------------------------------------------
        1:    9:      call sc1101
call    0 returned 100%
        -:   10:C --------------------------------------------------
        1:   11:      call sc1102
call    0 returned 100%
        -:   12:C --------------------------------------------------
        1:   13:      call sc1103
call    0 returned 100%
        -:   14:C -------------------------------------------------
        1:   15:      call sc1104
call    0 returned 100%
        -:   16:C -------------------------------------------------
        1:   17:      call sc1105
call    0 returned 100%
        -:   18:C -------------------------------------------------
        1:   19:      call sc1106
call    0 returned 100%
        -:   20:C --------------------------------------------------
        1:   21:      call sc1107
call    0 returned 100%
        -:   22:C --------------------------------------------------
        1:   23:      call sc1108
call    0 returned 100%
        -:   24:C --------------------------------------------------
        1:   25:      call sc1109
call    0 returned 100%
        -:   26:C -------------------------------------------------
        1:   27:      call sc1110
call    0 returned 100%
        -:   28:C -------------------------------------------------
        1:   29:      call sc1111
call    0 returned 100%
        -:   30:C -------------------------------------------------
        1:   31:      call sc1112
call    0 returned 100%
        -:   32:C ------------------------------------------------- 
        1:   33:      call sc1113
call    0 returned 100%
        -:   34:C --------------------------------------------------
        1:   35:      call sc1114
call    0 returned 100%
        -:   36:C --------------------------------------------------
        1:   37:      call sc1115
call    0 returned 100%
        -:   38:C -------------------------------------------------
        1:   39:      call sc1116
call    0 returned 100%
        -:   40:C -------------------------------------------------
        1:   41:      call sc1117
call    0 returned 100%
        -:   42:C -------------------------------------------------
        -:   43:
        -:   44:C
        -:   45:C
        1:   46:      print *,'=== END OF SC11 ========================= '    
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
function main called 1 returned 100% blocks executed 100%
        1:   47:      end
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   48:C ---------------------------------------------SC1101
function sc1101_ called 1 returned 100% blocks executed 76%
        1:   49:      subroutine SC1101
        -:   50:      integer, parameter :: N = 16,NL=1000
        -:   51:      character*6 tname 
        1:   52:      integer, allocatable :: A(:),B(:),C(:)
        -:   53:      integer nloop 
        -:   54:                      
        -:   55:!dvm$ distribute B(BLOCK)    
        -:   56:!dvm$ align (I) with B(I) ::A
        -:   57:
        1:   58:      tname='SC1101'
       1*:   59:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:   60:      NNL=NL    
       17:   61:      call serial1(C,N,NNL)
       17:   62:      nloop=NL
        -:   63:
        -:   64:!dvm$ actual(nloop)
        -:   65:!dvm$ region local(A,B)
        -:   66:!dvm$ parallel (i) on A(i),shadow_compute    
        -:   67:
       17:   68:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:   69:        A(i) = NL+i
        -:   70:      enddo
        -:   71:
        -:   72:!dvm$ parallel (i) on B(i)
       15:   73:      do i=2,N-1
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       15:   74:         B(i) = A(i-1)+A(i+1)
        -:   75:      enddo
        -:   76:  
        -:   77:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       15:   78:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      15*:   79:          if (B(i).ne.(C(i-1)+C(i+1))) nloop=min(nloop,i)
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:   80:      enddo
        -:   81:!dvm$ end region   
        -:   82:!dvm$ get_actual(nloop) 
        -:   83:      
        1:   84:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   85:          call ansyes(tname)
call    0 returned 100%
        -:   86:      else
    #####:   87:          call ansno(tname)
call    0 never executed
        -:   88:      endif 
       1*:   89:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:   90:      
        1:   91:      end
        -:   92:C ---------------------------------------------SC1102     
function sc1102_ called 1 returned 100% blocks executed 76%
        1:   93:      subroutine SC1102
        -:   94:      integer, parameter :: N = 16,NL=1000
        -:   95:      character*6 tname 
        1:   96:      integer, allocatable :: A(:),B(:),C(:)
        -:   97:      integer nloop 
        -:   98:                      
        -:   99:!dvm$ distribute B(BLOCK)    
        -:  100:!dvm$ align (I) with B(I) ::A
        -:  101:
        1:  102:      tname='SC1102'
       1*:  103:      allocate (B(N),A(N),C(N))     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  104:      NNL=NL    
       17:  105:      call serial1(C,N,NNL)
       17:  106:      nloop=NL
        -:  107:
        -:  108:!dvm$ actual(nloop)
        -:  109:!dvm$ region local(A,B)
        -:  110:!dvm$ parallel (i) on A(i),shadow_compute (A(1:1))
       17:  111:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  112:        A(i) = NL+i
        -:  113:      enddo
        -:  114:
        -:  115:!dvm$ parallel (i) on B(i)
       15:  116:      do i=2,N-1
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       15:  117:         B(i) = A(i-1)+A(i+1)
        -:  118:      enddo
        -:  119:  
        -:  120:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       15:  121:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      15*:  122:          if (B(i).ne.(C(i-1)+C(i+1))) nloop=min(nloop,i)
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  123:      enddo
        -:  124:!dvm$ end region   
        -:  125:!dvm$ get_actual(nloop) 
        -:  126:
        1:  127:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  128:          call ansyes(tname)
call    0 returned 100%
        -:  129:      else
    #####:  130:          call ansno(tname)
call    0 never executed
        -:  131:      endif 
       1*:  132:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  133:      
        1:  134:      end
        -:  135:C -----------------------------------------SC1103      
function sc1103_ called 1 returned 100% blocks executed 76%
        1:  136:      subroutine SC1103
        -:  137:      integer, parameter :: N = 16,NL=1000
        -:  138:      character*6 tname 
        1:  139:      integer, allocatable :: A(:),B(:),C(:)
        -:  140:      integer nloop 
        -:  141:                     
        -:  142:!dvm$ distribute B(BLOCK)    
        -:  143:!dvm$ align (I) with B(I) ::A
        -:  144:
        1:  145:      tname='SC1103'
       1*:  146:      allocate (B(N),A(N),C(N))            
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  147:      NNL=NL    
       17:  148:      call serial1(C,N,NNL)
       17:  149:      nloop=NL
        -:  150:
        -:  151:!dvm$ actual(nloop)
        -:  152:!dvm$ region local(A,B)
        -:  153:!dvm$ parallel (i) on A(i),shadow_compute(A(0:1))
       17:  154:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  155:        A(i) = NL+i
        -:  156:      enddo
        -:  157:
        -:  158:!dvm$ parallel (i) on B(i)
       15:  159:      do i=2,N-1
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       15:  160:         B(i) = A(i+1)
        -:  161:      enddo
        -:  162:  
        -:  163:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       15:  164:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      15*:  165:          if (B(i).ne.(C(i+1))) nloop=min(nloop,i)
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  166:      enddo
        -:  167:!dvm$ end region   
        -:  168:!dvm$ get_actual(nloop) 
        -:  169:
        1:  170:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  171:          call ansyes(tname)
call    0 returned 100%
        -:  172:      else
    #####:  173:          call ansno(tname)
call    0 never executed
        -:  174:      endif 
       1*:  175:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  176:     
        1:  177:      end
        -:  178:      
        -:  179:C ------------------------------------------SC1104   
function sc1104_ called 1 returned 100% blocks executed 76%
        1:  180:      subroutine SC1104
        -:  181:      integer, parameter :: N = 16,NL=1000
        -:  182:      character*6 tname 
        1:  183:      integer, allocatable :: A(:),B(:),C(:)
        -:  184:      integer nloop 
        -:  185:                    
        -:  186:!dvm$ distribute B(BLOCK)    
        -:  187:!dvm$ align (I) with B(I) ::A
        -:  188:
        1:  189:      tname='SC1104'
       1*:  190:      allocate (B(N),A(N),C(N))      
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  191:      NNL=NL    
       17:  192:      call serial1(C,N,NNL)
       17:  193:      nloop=NL
        -:  194:
        -:  195:!dvm$ actual(nloop)
        -:  196:!dvm$ region local(A,B)
        -:  197:!dvm$ parallel (i) on A(i),shadow_compute(A(1:0))
       17:  198:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  199:        A(i) = NL+i
        -:  200:      enddo
        -:  201:
        -:  202:!dvm$ parallel (i) on B(i)
       16:  203:      do i=2,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       16:  204:         B(i) = A(i-1)
        -:  205:      enddo
        -:  206:  
        -:  207:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       16:  208:      do i=2,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      16*:  209:          if (B(i).ne.C(i-1)) nloop=min(nloop,i)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:  210:      enddo
        -:  211:!dvm$ end region   
        -:  212:!dvm$ get_actual(nloop) 
        -:  213:
        1:  214:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  215:          call ansyes(tname)
call    0 returned 100%
        -:  216:      else
    #####:  217:          call ansno(tname)
call    0 never executed
        -:  218:      endif 
       1*:  219:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  220:         
        1:  221:      end
        -:  222:      
        -:  223:C ------------------------------------------SC1105   
function sc1105_ called 1 returned 100% blocks executed 76%
        1:  224:      subroutine SC1105
        -:  225:      integer, parameter :: N = 16,NL=1000
        -:  226:      character*6 tname 
        1:  227:      integer, allocatable :: A(:),B(:),C(:)
        -:  228:      integer nloop 
        -:  229:                     
        -:  230:!dvm$ distribute B(BLOCK)    
        -:  231:!dvm$ align (I) with B(I) ::A
        -:  232:!dvm$ shadow A(0:1)
        -:  233:
        1:  234:      tname='SC1105'     
       1*:  235:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  236:      NNL=NL    
       17:  237:      call serial1(C,N,NNL)
       17:  238:      nloop=NL
        -:  239:
        -:  240:!dvm$ actual(nloop)
        -:  241:!dvm$ region local(A,B)
        -:  242:!dvm$ parallel (i) on A(i),shadow_compute(A(0:1))
       17:  243:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  244:        A(i) = NL+i
        -:  245:      enddo
        -:  246:
        -:  247:!dvm$ parallel (i) on B(i)
       15:  248:      do i=2,N-1
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       15:  249:         B(i) = A(i+1)
        -:  250:      enddo
        -:  251:  
        -:  252:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       15:  253:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      15*:  254:          if (B(i).ne.C(i+1)) nloop=min(nloop,i)
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  255:      enddo
        -:  256:!dvm$ end region   
        -:  257:!dvm$ get_actual(nloop) 
        -:  258:
        1:  259:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  260:          call ansyes(tname)
call    0 returned 100%
        -:  261:      else
    #####:  262:          call ansno(tname)
call    0 never executed
        -:  263:      endif 
       1*:  264:      deallocate (A,B,C)  
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  265:    
        1:  266:      end
        -:  267:      
        -:  268:C --------------------------------------------SC1106  
        -:  269:         
function sc1106_ called 1 returned 100% blocks executed 76%
        1:  270:      subroutine SC1106
        -:  271:      integer, parameter :: N = 16,NL=1000
        -:  272:      character*6 tname 
        1:  273:      integer, allocatable :: A(:),B(:),C(:)
        -:  274:      integer nloop 
        -:  275:                     
        -:  276:!dvm$ distribute B(BLOCK)    
        -:  277:!dvm$ align (I) with B(I) ::A
        -:  278:!dvm$ shadow A(1:0)
        -:  279:
        1:  280:      tname='SC1106'
       1*:  281:      allocate (B(N),A(N),C(N))          
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  282:      NNL=NL    
       17:  283:      call serial1(C,N,NNL)
       17:  284:      nloop=NL
        -:  285:
        -:  286:!dvm$ actual(nloop)
        -:  287:!dvm$ region local(A,B)
        -:  288:!dvm$ parallel (i) on A(i),shadow_compute(A(1:0))
       17:  289:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  290:        A(i) = NL+i
        -:  291:      enddo
        -:  292:               
        -:  293:!dvm$ parallel (i) on B(i)
       16:  294:      do i=2,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       16:  295:         B(i) = A(i-1)
        -:  296:      enddo
        -:  297:  
        -:  298:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       16:  299:      do i=2,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      16*:  300:          if (B(i).ne.C(i-1)) nloop=min(nloop,i)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:  301:      enddo
        -:  302:!dvm$ end region   
        -:  303:!dvm$ get_actual(nloop) 
        -:  304:
        1:  305:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  306:          call ansyes(tname)
call    0 returned 100%
        -:  307:      else
    #####:  308:          call ansno(tname)
call    0 never executed
        -:  309:      endif 
       1*:  310:      deallocate (A,B,C)                
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  311:
        1:  312:      end
        -:  313:C -------------------------------------------SC1107   
        -:  314:         
function sc1107_ called 1 returned 100% blocks executed 76%
        1:  315:      subroutine SC1107
        -:  316:      integer, parameter :: N = 16,NL=1000
        -:  317:      character*6 tname 
        1:  318:      integer, allocatable :: A(:),B(:),C(:)
        -:  319:      integer nloop 
        -:  320:                    
        -:  321:!dvm$ distribute B(BLOCK)    
        -:  322:!dvm$ align (I) with B(I) ::A
        -:  323:!dvm$ shadow A(2:2)      
        -:  324:
        1:  325:      tname='SC1107'
       1*:  326:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  327:      NNL=NL    
       17:  328:      call serial1(C,N,NNL)
       17:  329:      nloop=NL
        -:  330:
        -:  331:!dvm$ actual(nloop)
        -:  332:!dvm$ region local(A,B)
        -:  333:!dvm$ parallel (i) on A(i) ,shadow_compute(A(2:2))
       17:  334:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  335:        A(i) = NL+i
        -:  336:      enddo
        -:  337:               
        -:  338:!dvm$ parallel (i) on B(i)
       13:  339:      do i=3,N-2
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
       13:  340:         B(i) = A(i-1)+A(i+1)+A(i+2)+A(i-2)
        -:  341:      enddo
        -:  342:  
        -:  343:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       13:  344:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      13*:  345:          if (B(i).ne.(C(i-1)+C(i+1)+C(i-2)+C(i+2))) nloop=min(nloop,i)
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  346:      enddo
        -:  347:!dvm$ end region   
        -:  348:!dvm$ get_actual(nloop) 
        -:  349:
        1:  350:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  351:          call ansyes(tname)
call    0 returned 100%
        -:  352:      else
    #####:  353:          call ansno(tname)
call    0 never executed
        -:  354:      endif       
       1*:  355:      deallocate (A,B,C)   
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  356:      
        1:  357:      end      
        -:  358:C -------------------------------------------SC1108   
        -:  359:         
function sc1108_ called 1 returned 100% blocks executed 76%
        1:  360:      subroutine SC1108
        -:  361:      integer, parameter :: N = 16,NL=1000
        -:  362:      character*6 tname 
        1:  363:      integer, allocatable :: A(:),B(:),C(:)
        -:  364:      integer nloop 
        -:  365:                    
        -:  366:!dvm$ distribute B(BLOCK)   
        -:  367:!dvm$ align (I) with B(I) ::A
        -:  368:!dvm$ shadow A(2:2)
        -:  369:
        1:  370:      tname='SC1108'      
       1*:  371:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  372:      NNL=NL    
       17:  373:      call serial1(C,N,NNL)
       17:  374:      nloop=NL
        -:  375:
        -:  376:!dvm$ actual(nloop)
        -:  377:!dvm$ region local(A,B)
        -:  378:!dvm$ parallel (i) on A(i),shadow_compute(A(0:2))
       17:  379:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  380:        A(i) = NL+i
        -:  381:      enddo               
        -:  382:
        -:  383:!dvm$ parallel (i) on B(i)
       14:  384:      do i=2,N-2
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       14:  385:         B(i) = A(i+1)+A(i+2)
        -:  386:      enddo
        -:  387:  
        -:  388:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       14:  389:      do i=2,N-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      14*:  390:          if (B(i).ne.(C(i+1)+C(i+2))) nloop=min(nloop,i)          
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  391:      enddo
        -:  392:!dvm$ end region   
        -:  393:!dvm$ get_actual(nloop) 
        -:  394:
        1:  395:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  396:          call ansyes(tname)
call    0 returned 100%
        -:  397:      else
    #####:  398:          call ansno(tname)
call    0 never executed
        -:  399:      endif  
       1*:  400:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  401:
        1:  402:      end   
        -:  403:      
        -:  404:C -------------------------------------------SC1109   
        -:  405:         
function sc1109_ called 1 returned 100% blocks executed 76%
        1:  406:      subroutine SC1109
        -:  407:      integer, parameter :: N = 16,NL=1000
        -:  408:      character*6 tname 
        1:  409:      integer, allocatable :: A(:),B(:),C(:)
        -:  410:      integer nloop                
        -:  411:
        -:  412:!dvm$ distribute B(BLOCK)     
        -:  413:!dvm$ align (I) with B(I) ::A
        -:  414:!dvm$ shadow A(2:2)
        -:  415:
        1:  416:      tname='SC1109'      
       1*:  417:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  418:      NNL=NL    
       17:  419:      call serial1(C,N,NNL)
       17:  420:      nloop=NL
        -:  421:
        -:  422:!dvm$ actual(nloop)
        -:  423:!dvm$ region local(A,B)
        -:  424:!dvm$ parallel (i) on A(i),shadow_compute(A(2:0))
       17:  425:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  426:        A(i) = NL+i
        -:  427:      enddo
        -:  428:               
        -:  429:!dvm$ parallel (i) on B(i)
       15:  430:      do i=3,N
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       15:  431:         B(i) = A(i-1)+A(i-2)
        -:  432:      enddo
        -:  433:  
        -:  434:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       15:  435:      do i=3,N
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      15*:  436:          if (B(i).ne.(C(i-1)+C(i-2))) nloop=min(nloop,i)          
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:  437:      enddo
        -:  438:!dvm$ end region   
        -:  439:!dvm$ get_actual(nloop) 
        -:  440:
        1:  441:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  442:          call ansyes(tname)
call    0 returned 100%
        -:  443:      else
    #####:  444:          call ansno(tname)
call    0 never executed
        -:  445:      endif 
       1*:  446:      deallocate (A,B,C)      
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  447:         
        1:  448:      end   
        -:  449:C -------------------------------------------SC1110   
        -:  450:         
function sc1110_ called 1 returned 100% blocks executed 76%
        1:  451:      subroutine SC1110
        -:  452:      integer, parameter :: N = 16,NL=1000
        -:  453:      character*6 tname 
        1:  454:      integer, allocatable :: A(:),B(:),C(:)
        -:  455:      integer nloop 
        -:  456:                     
        -:  457:!dvm$ distribute B(BLOCK)    
        -:  458:!dvm$ align (I) with B(I) ::A
        -:  459:!dvm$ shadow A(0:2)
        -:  460:
        1:  461:      tname='SC1110'      
       1*:  462:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  463:      NNL=NL    
       17:  464:      call serial1(C,N,NNL)
       17:  465:      nloop=NL
        -:  466:
        -:  467:!dvm$ actual(nloop)
        -:  468:!dvm$ region local(A,B)
        -:  469:!dvm$ parallel (i) on A(i),shadow_compute
       17:  470:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  471:        A(i) = NL+i
        -:  472:      enddo
        -:  473:               
        -:  474:!dvm$ parallel (i) on B(i)
       14:  475:      do i=2,N-2
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       14:  476:         B(i) = A(i+1)+A(i+2)
        -:  477:      enddo
        -:  478:  
        -:  479:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       14:  480:      do i=2,N-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      14*:  481:          if (B(i).ne.(C(i+1)+C(i+2))) nloop=min(nloop,i)          
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  482:      enddo
        -:  483:!dvm$ end region   
        -:  484:!dvm$ get_actual(nloop) 
        -:  485:
        1:  486:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  487:          call ansyes(tname)
call    0 returned 100%
        -:  488:      else
    #####:  489:          call ansno(tname)
call    0 never executed
        -:  490:      endif 
       1*:  491:      deallocate (A,B,C)      
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  492:   
        1:  493:      end 
        -:  494:C -------------------------------------------SC1111   
        -:  495:         
function sc1111_ called 1 returned 100% blocks executed 76%
        1:  496:      subroutine SC1111
        -:  497:      integer, parameter :: N = 16,NL=1000
        -:  498:      character*6 tname 
        1:  499:      integer, allocatable :: A(:),B(:),C(:)
        -:  500:      integer nloop 
        -:  501:                     
        -:  502:!dvm$ distribute B(BLOCK)     
        -:  503:!dvm$ align (I) with B(I) ::A
        -:  504:!dvm$ shadow A(2:0)
        -:  505:
        1:  506:      tname='SC1111'      
       1*:  507:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  508:      NNL=NL    
       17:  509:      call serial1(C,N,NNL)
       17:  510:      nloop=NL
        -:  511:
        -:  512:!dvm$ actual(nloop)
        -:  513:!dvm$ region local(A,B)
        -:  514:!dvm$ parallel (i) on A(i),shadow_compute
       17:  515:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  516:        A(i) = NL+i
        -:  517:      enddo
        -:  518:               
        -:  519:!dvm$ parallel (i) on B(i)
       15:  520:      do i=3,N
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       15:  521:         B(i) = A(i-1)+A(i-2)
        -:  522:      enddo
        -:  523:  
        -:  524:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       15:  525:      do i=3,N
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      15*:  526:          if (B(i).ne.(C(i-1)+C(i-2))) nloop=min(nloop,i)          
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:  527:      enddo
        -:  528:!dvm$ end region   
        -:  529:!dvm$ get_actual(nloop) 
        -:  530:      
        1:  531:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  532:          call ansyes(tname)
call    0 returned 100%
        -:  533:      else
    #####:  534:          call ansno(tname)
call    0 never executed
        -:  535:      endif 
       1*:  536:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  537:        
        1:  538:      end  
        -:  539:C -------------------------------------------SC1112   
        -:  540:         
function sc1112_ called 1 returned 100% blocks executed 76%
        1:  541:      subroutine SC1112
        -:  542:      integer, parameter :: N = 16,NL=1000
        -:  543:      character*6 tname 
        1:  544:      integer, allocatable :: A(:),B(:),C(:)
        -:  545:      integer nloop 
        -:  546:                     
        -:  547:!dvm$ distribute B(BLOCK)     
        -:  548:!dvm$ align (I) with B(I) ::A
        -:  549:!dvm$ shadow A(3:3)
        -:  550:
        1:  551:      tname='SC1112'      
       1*:  552:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  553:      NNL=NL    
       17:  554:      call serial1(C,N,NNL)
       17:  555:      nloop=NL
        -:  556:
        -:  557:!dvm$ actual(nloop)
        -:  558:!dvm$ region local(A,B)
        -:  559:!dvm$ parallel (i) on A(i),shadow_compute
       17:  560:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  561:        A(i) = NL+i
        -:  562:      enddo
        -:  563:               
        -:  564:!dvm$ parallel (i) on B(i)
       11:  565:      do i=4,N-3
branch  0 taken 9% (fallthrough)
branch  1 taken 91%
       11:  566:         B(i) = A(i-1)+A(i+1)+A(i+2)+A(i-2)+A(i-3)+A(i+3)
        -:  567:      enddo
        -:  568:  
        -:  569:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       11:  570:      do i=4,N-3
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
       11:  571:         if (B(i).ne.(C(i-1)+C(i+1)+C(i-2)+C(i+2)+C(i-3)+C(i+3))) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  572:            nloop=min(nloop,i)
        -:  573:         endif    
        -:  574:      enddo
        -:  575:!dvm$ end region   
        -:  576:!dvm$ get_actual(nloop) 
        -:  577:
        1:  578:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  579:          call ansyes(tname)
call    0 returned 100%
        -:  580:      else
    #####:  581:          call ansno(tname)
call    0 never executed
        -:  582:      endif 
       1*:  583:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  584:         
        1:  585:      end
        -:  586:C -------------------------------------------SC1113  
        -:  587:         
function sc1113_ called 1 returned 100% blocks executed 76%
        1:  588:      subroutine SC1113
        -:  589:      integer, parameter :: N = 16,NL=1000
        -:  590:      character*6 tname 
        1:  591:      integer, allocatable :: A(:),B(:),C(:)
        -:  592:      integer nloop 
        -:  593:                    
        -:  594:!dvm$ distribute B(BLOCK)     
        -:  595:!dvm$ align (I) with B(I) ::A
        -:  596:!dvm$ shadow A(3:3)
        -:  597:
        1:  598:      tname='SC1113'
       1*:  599:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  600:      NNL=NL    
       17:  601:      call serial1(C,N,NNL)
       17:  602:      nloop=NL
        -:  603:
        -:  604:!dvm$ actual(nloop)
        -:  605:!dvm$ region local(A,B)
        -:  606:!dvm$ parallel (i) on A(i),shadow_compute(A(0:3))
       17:  607:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  608:        A(i) = NL+i
        -:  609:      enddo
        -:  610:               
        -:  611:!dvm$ parallel (i) on B(i)
       13:  612:      do i=2,N-3
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
       13:  613:         B(i) = A(i+1)+A(i+2)+A(i+3)
        -:  614:      enddo
        -:  615:  
        -:  616:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       13:  617:      do i=2,N-3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      13*:  618:          if (B(i).ne.(C(i+1)+C(i+2)+C(i+3))) nloop=min(nloop,i)          
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  619:      enddo
        -:  620:!dvm$ end region   
        -:  621:!dvm$ get_actual(nloop) 
        -:  622:
        1:  623:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  624:          call ansyes(tname)
call    0 returned 100%
        -:  625:      else
    #####:  626:          call ansno(tname)
call    0 never executed
        -:  627:      endif 
       1*:  628:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  629:       
        1:  630:      end
        -:  631:C -------------------------------------------SC1114   
        -:  632:         
function sc1114_ called 1 returned 100% blocks executed 76%
        1:  633:      subroutine SC1114
        -:  634:      integer, parameter :: N = 16,NL=1000
        -:  635:      character*6 tname 
        1:  636:      integer, allocatable :: A(:),B(:),C(:)
        -:  637:      integer nloop 
        -:  638:                    
        -:  639:!dvm$ distribute B(BLOCK)     
        -:  640:!dvm$ align (I) with B(I) ::A
        -:  641:!dvm$ shadow A(3:3)
        -:  642:
        1:  643:      tname='SC1114'
       1*:  644:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  645:      NNL=NL    
       17:  646:      call serial1(C,N,NNL)
       17:  647:      nloop=NL
        -:  648:
        -:  649:!dvm$ actual(nloop)
        -:  650:!dvm$ region local(A,B)
        -:  651:!dvm$ parallel (i) on A(i),shadow_compute(A(3:0))
       17:  652:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  653:        A(i) = NL+i
        -:  654:      enddo
        -:  655:               
        -:  656:!dvm$ parallel (i) on B(i)
       14:  657:      do i=4,N
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       14:  658:         B(i) = A(i-1)+A(i-2)+A(i-3)
        -:  659:      enddo
        -:  660:  
        -:  661:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       14:  662:      do i=4,N
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      14*:  663:          if (B(i).ne.(C(i-1)+C(i-2)+C(i-3))) nloop=min(nloop,i)          
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:  664:      enddo
        -:  665:!dvm$ end region   
        -:  666:!dvm$ get_actual(nloop) 
        -:  667:
        1:  668:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  669:          call ansyes(tname)
call    0 returned 100%
        -:  670:      else
    #####:  671:          call ansno(tname)
call    0 never executed
        -:  672:      endif 
       1*:  673:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  674:        
        1:  675:      end 
        -:  676:C -------------------------------------------SC1115   
        -:  677:         
function sc1115_ called 1 returned 100% blocks executed 76%
        1:  678:      subroutine SC1115
        -:  679:      integer, parameter :: N = 16,NL=1000
        -:  680:      character*6 tname 
        1:  681:      integer, allocatable :: A(:),B(:),C(:)
        -:  682:      integer nloop 
        -:  683:                    
        -:  684:!dvm$ distribute B(BLOCK)    
        -:  685:!dvm$ align (I) with B(I) ::A
        -:  686:!dvm$ shadow A(3:0)
        -:  687:
        1:  688:      tname='SC1115'
       1*:  689:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  690:      NNL=NL    
       17:  691:      call serial1(C,N,NNL)
       17:  692:      nloop=NL
        -:  693:
        -:  694:!dvm$ actual(nloop)
        -:  695:!dvm$ region local(A,B)
        -:  696:!dvm$ parallel (i) on A(i),shadow_compute
       17:  697:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  698:        A(i) = NL+i
        -:  699:      enddo
        -:  700:               
        -:  701:!dvm$ parallel (i) on B(i)
       14:  702:      do i=4,N
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
       14:  703:         B(i) = A(i-1)+A(i-2)+A(i-3)
        -:  704:      enddo
        -:  705:  
        -:  706:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       14:  707:      do i=4,N
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      14*:  708:          if (B(i).ne.(C(i-1)+C(i-2)+C(i-3))) nloop=min(nloop,i)          
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:  709:      enddo
        -:  710:!dvm$ end region   
        -:  711:!dvm$ get_actual(nloop) 
        -:  712:
        1:  713:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  714:          call ansyes(tname)
call    0 returned 100%
        -:  715:      else
    #####:  716:          call ansno(tname)
call    0 never executed
        -:  717:      endif 
       1*:  718:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  719:        
        1:  720:      end 
        -:  721:C -------------------------------------------SC1116   
        -:  722:         
function sc1116_ called 1 returned 100% blocks executed 76%
        1:  723:      subroutine SC1116
        -:  724:      integer, parameter :: N = 16,NL=1000
        -:  725:      character*6 tname 
        1:  726:      integer, allocatable :: A(:),B(:),C(:)
        -:  727:      integer nloop 
        -:  728:                    
        -:  729:!dvm$ distribute B(BLOCK)     
        -:  730:!dvm$ align (I) with B(I) ::A
        -:  731:!dvm$ shadow A(0:3)
        -:  732:
        1:  733:      tname='SC1116'
       1*:  734:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  735:      NNL=NL    
       17:  736:      call serial1(C,N,NNL)
       17:  737:      nloop=NL
        -:  738:
        -:  739:!dvm$ actual(nloop)
        -:  740:!dvm$ region local(A,B)
        -:  741:!dvm$ parallel (i) on A(i),shadow_compute
       17:  742:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  743:        A(i) = NL+i
        -:  744:      enddo
        -:  745:               
        -:  746:!dvm$ parallel (i) on B(i)
       13:  747:      do i=2,N-3
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
       13:  748:         B(i) = A(i+1)+A(i+2)+A(i+3)
        -:  749:      enddo
        -:  750:  
        -:  751:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
       13:  752:      do i=2,N-3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      13*:  753:          if (B(i).ne.(C(i+1)+C(i+2)+C(i+3))) nloop=min(nloop,i)          
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  754:      enddo
        -:  755:!dvm$ end region   
        -:  756:!dvm$ get_actual(nloop) 
        -:  757:
        1:  758:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  759:          call ansyes(tname)
call    0 returned 100%
        -:  760:      else
    #####:  761:          call ansno(tname)
call    0 never executed
        -:  762:      endif 
       1*:  763:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  764:  
        1:  765:      end 
        -:  766:C --------------------------------------------SC1117  
        -:  767:         
function sc1117_ called 1 returned 100% blocks executed 76%
        1:  768:      subroutine SC1117
        -:  769:      integer, parameter :: N = 500,NL=1000
        -:  770:      character*6 tname 
        1:  771:      integer, allocatable :: A(:),B(:),C(:)
        -:  772:      integer nloop 
        -:  773:                     
        -:  774:!dvm$ distribute B(BLOCK)     
        -:  775:!dvm$ align (I) with B(I) ::A
        -:  776:!dvm$ shadow A(11:11)
        -:  777:
        1:  778:      tname='SC1117'      
       1*:  779:      allocate (B(N),A(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  780:      NNL=NL    
      501:  781:      call serial1(C,N,NNL)
      501:  782:      nloop=NL
        -:  783:
        -:  784:!dvm$ actual(nloop)
        -:  785:!dvm$ region local(A,B)
        -:  786:!dvm$ parallel (i) on A(i),shadow_compute
      501:  787:      do i=1,N
branch  0 taken 1% (fallthrough)
branch  1 taken 100%
      501:  788:        A(i) = NL+i
        -:  789:      enddo
        -:  790:               
        -:  791:!dvm$ parallel (i) on B(i)
      479:  792:      do i=12,N-11
branch  0 taken 1% (fallthrough)
branch  1 taken 100%
      479:  793:         B(i) = A(i-9)+A(i+9)+A(i+10)+A(i-10)+A(i-11)+A(i+11)
        -:  794:      enddo
        -:  795:  
        -:  796:!dvm$ parallel (i) on B(i), reduction( min( nloop ) )
      479:  797:      do i=12,N-11
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
      478:  798:        if (B(i).ne.(C(i-9)+C(i+9)+C(i-10)+C(i+10)+
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
       1*:  799:     *C(i-11)+C(i+11))) nloop=min(nloop,i)          
        -:  800:      enddo
        -:  801:!dvm$ end region   
        -:  802:!dvm$ get_actual(nloop) 
        -:  803:
        1:  804:      if (nloop .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  805:          call ansyes(tname)
call    0 returned 100%
        -:  806:      else
    #####:  807:          call ansno(tname)
call    0 never executed
        -:  808:      endif 
       1*:  809:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  810:     
        1:  811:      end
        -:  812:C -----------------------------------------------         
function serial1_ called 0 returned 0% blocks executed 0%
    #####:  813:      subroutine serial1(AR,N,NL)
        -:  814:      integer AR(N)
        -:  815:      integer NL 
     773*:  816:      do i=1,N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
branch  2 taken 6% (fallthrough)
branch  3 taken 94%
branch  4 taken 6% (fallthrough)
branch  5 taken 94%
branch  6 taken 6% (fallthrough)
branch  7 taken 94%
branch  8 taken 6% (fallthrough)
branch  9 taken 94%
branch 10 taken 6% (fallthrough)
branch 11 taken 94%
branch 12 taken 6% (fallthrough)
branch 13 taken 94%
branch 14 taken 6% (fallthrough)
branch 15 taken 94%
branch 16 taken 6% (fallthrough)
branch 17 taken 94%
branch 18 taken 6% (fallthrough)
branch 19 taken 94%
branch 20 taken 6% (fallthrough)
branch 21 taken 94%
branch 22 taken 6% (fallthrough)
branch 23 taken 94%
branch 24 taken 6% (fallthrough)
branch 25 taken 94%
branch 26 taken 6% (fallthrough)
branch 27 taken 94%
branch 28 taken 6% (fallthrough)
branch 29 taken 94%
branch 30 taken 6% (fallthrough)
branch 31 taken 94%
branch 32 never executed (fallthrough)
branch 33 never executed
branch 34 taken 1% (fallthrough)
branch 35 taken 100%
     773*:  817:        AR(i) = NL+i
        -:  818:      enddo
    #####:  819:      end 
        -:  820:
        -:  821:
function ansyes_ called 17 returned 100% blocks executed 100%
       17:  822:      subroutine ansyes(name)
        -:  823:      character*6 name
       17:  824:      print *,name,'  -  complete'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
       17:  825:      end
function ansno_ called 0 returned 0% blocks executed 0%
    #####:  826:      subroutine ansno(name)
        -:  827:      character*6 name
    #####:  828:      print *,name,'  -  ***error'
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:  829:      end

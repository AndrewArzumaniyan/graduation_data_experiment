        -:    0:Source:results/2d/d_sor2d/d_sor2d.f
        -:    0:Graph:./results\2d\d_sor2d\d_sor2d.gcno
        -:    0:Data:./results\2d\d_sor2d\d_sor2d.gcda
        -:    0:Runs:1
function MAIN__ called 1 returned 100% blocks executed 91%
        1:    1:        PROGRAM SOR2D_double
        -:    2:        PARAMETER (L=8000, ITMAX=100)
        -:    3:        DOUBLE PRECISION EPS, MAXEPS, A(L, L), W, S
        -:    4:        DOUBLE PRECISION STARTT, ENDT, dvtime
        -:    5:!DVM$   DISTRIBUTE(BLOCK, BLOCK) :: A
        -:    6:
        1:    7:        MAXEPS = 0.5
        1:    8:        W = 0.5
        -:    9:!DVM$   REGION
        -:   10:!DVM$   PARALLEL(J, I) ON A(I, J), CUDA_BLOCK(32, 8)
        -:   11:!        nest of two parallel loops, iteration (i, j) will be executed on
        -:   12:!        processor, which is owner of element A(i, j)
     8001:   13:          DO J = 1, L
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
 64008001:   14:            DO I = 1, L
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
 64008000:   15:              IF (I.EQ.1 .OR. J.EQ.1 .OR. I.EQ.L .OR. J.EQ.L ) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
branch  2 taken 1% (fallthrough)
branch  3 taken 100%
    31996:   16:                A(I, J) = 0.
        -:   17:              ELSE
 63968004:   18:                A(I, J) = (1. + I + J)
        -:   19:              ENDIF
        -:   20:            ENDDO
        -:   21:          ENDDO
        -:   22:!DVM$   END REGION
        -:   23:!DVM$   BARRIER
        1:   24:        STARTT = 0
       41:   25:        DO IT = 1, ITMAX
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
       41:   26:          EPS = 0.
        -:   27:!DVM$     ACTUAL(EPS)
        -:   28:!DVM$     REGION
        -:   29:
        -:   30:!DVM$ PARALLEL (J, I) ON A(I, J), ACROSS(A(1:1,1:1)),
        -:   31:!DVM$& REDUCTION(MAX(EPS)), PRIVATE(S)
   327959:   32:            DO J = 2, L - 1
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
2623016123:   33:              DO I = 2, L - 1
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
2622688164:   34:                S = A(I, J)
        -:   35:                A(I, J) = (W / 6. ) * 
        -:   36:     >            (A(I, J-1) + A(I-1, J) + A(I+1, J) + A(I, J+1))
2622688164:   37:     >          + (1 - W) * A(I, J)
2623016082:   38:                EPS = MAX(EPS, ABS(S - A(I, J)))
        -:   39:              ENDDO
        -:   40:            ENDDO
        -:   41:!DVM$     END REGION
        -:   42:!DVM$     GET_ACTUAL(EPS)
       41:   43:          PRINT 200, IT, EPS
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
        -:   44:200       FORMAT (' IT = ', I4, '   EPS = ', E23.16)
      41*:   45:          IF (EPS .LT. MAXEPS) EXIT
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
        -:   46:        ENDDO
        -:   47:!DVM$   BARRIER
        1:   48:        ENDT = 0
        -:   49:
        1:   50:        PRINT *, 'SOR2D_double Benchmark Completed.'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        1:   51:        PRINT 201, L, L
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
        -:   52:201     FORMAT (' Size            =    ', I6, ' x ', I6)
        1:   53:        PRINT 202, ITMAX
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   54:202     FORMAT (' Iterations      =       ', I12)
        1:   55:        PRINT 203, ENDT - STARTT
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   56:203     FORMAT (' Time in seconds =       ', F12.2)
        1:   57:        PRINT *, 'Operation type  =     floating point'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        1:   58:        IF (ABS(EPS - 0.424766850334810d0) .LT. 1.0E-7) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   59:          PRINT *, 'Verification    =         SUCCESSFUL'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   60:        ELSE
    #####:   61:          PRINT *, 'Verification    =       UNSUCCESSFUL'
call    0 never executed
call    1 never executed
call    2 never executed
        -:   62:        ENDIF
        -:   63:
        1:   64:        PRINT *, 'END OF SOR2D_double Benchmark'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
function main called 1 returned 100% blocks executed 100%
        1:   65:        END
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%

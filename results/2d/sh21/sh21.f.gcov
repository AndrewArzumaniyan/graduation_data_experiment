        -:    0:Source:results/2d/sh21/sh21.f
        -:    0:Graph:./results\2d\sh21\sh21.gcno
        -:    0:Data:./results\2d\sh21\sh21.gcda
        -:    0:Runs:1
function MAIN__ called 1 returned 100% blocks executed 100%
        1:    1:      program SH21
        -:    2:     
        -:    3:c    TESTING OF THE SHADOW DIRECTIVE AND THE SHADOW_RENEW CLAUSE'.       
        -:    4:c    DISTRIBUTED ARRAY A(N,M) IS TO HAVE DIFFERENT SHADOW WIDTH
        -:    5:c    ON BOTH SIDES 
        -:    6:
        1:    7:      print *,'===START OF SH21========================'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:    8:C --------------------------------------------------
        1:    9:      call sh2101
call    0 returned 100%
        -:   10:C --------------------------------------------------
        1:   11:      call sh2102
call    0 returned 100%
        -:   12:C --------------------------------------------------
        1:   13:      call sh2103
call    0 returned 100%
        -:   14:C -------------------------------------------------
        1:   15:      call sh2104
call    0 returned 100%
        -:   16:C -------------------------------------------------
        1:   17:      call sh2105
call    0 returned 100%
        -:   18:C -------------------------------------------------
        1:   19:      call sh2106
call    0 returned 100%
        -:   20:C --------------------------------------------------
        1:   21:      call sh2107
call    0 returned 100%
        -:   22:C --------------------------------------------------
        1:   23:      call sh2108
call    0 returned 100%
        -:   24:C----------------------------------------------------
        1:   25:      call sh2109
call    0 returned 100%
        -:   26:C -------------------------------------------------
        1:   27:      call sh2110
call    0 returned 100%
        -:   28:C -------------------------------------------------
        1:   29:      call sh2111
call    0 returned 100%
        -:   30:C -------------------------------------------------
        1:   31:      call sh2112
call    0 returned 100%
        -:   32:C ------------------------------------------------- 
        1:   33:      call sh2113
call    0 returned 100%
        -:   34:C --------------------------------------------------
        1:   35:      call sh2114
call    0 returned 100%
        -:   36:C --------------------------------------------------
        1:   37:      call sh2115
call    0 returned 100%
        -:   38:C -------------------------------------------------
        1:   39:      call sh2116
call    0 returned 100%
        -:   40:C -------------------------------------------------
        1:   41:      call sh2117
call    0 returned 100%
        -:   42:C -------------------------------------------------
        1:   43:      call sh2118
call    0 returned 100%
        -:   44:C -------------------------------------------------
        1:   45:      call sh2119
call    0 returned 100%
        -:   46:C -------------------------------------------------
        1:   47:      call sh2120
call    0 returned 100%
        -:   48:C -------------------------------------------------
        -:   49:   
        -:   50:C -------------------------------------------------
        -:   51:
        -:   52:C
        -:   53:C
        1:   54:      print *,'=== END OF SH21 ========================= '    
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
function main called 1 returned 100% blocks executed 100%
        1:   55:      end
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   56:C ---------------------------------------------SH2101
function sh2101_ called 1 returned 100% blocks executed 84%
        1:   57:      subroutine SH2101
        -:   58:      integer, parameter :: N = 16,M=8,NL=1000
        1:   59:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:   60:      integer nloopi,nloopj,isum
        -:   61:      character*6 tname 
        -:   62:!dvm$ distribute B(BLOCK,BLOCK)       
        -:   63:!dvm$ align (I,J) with B(I,J) ::A
        -:   64:
        1:   65:      tname='SH2101'     
       1*:   66:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:   67:      NNL=NL    
       17:   68:      call serial2(C,N,M,NNL)
       17:   69:      nloopi=NL
        -:   70:      nloopj=NL
        -:   71:
        -:   72:!dvm$ actual(nloopi,nloopj)
        -:   73:!dvm$ region local(A,B)
        -:   74:!dvm$ parallel (i,j) on A(i,j)
       17:   75:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      145:   76:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      144:   77:          A(i,j) = NL+i+j
        -:   78:        enddo
        -:   79:      enddo                                               
        -:   80: 
        -:   81:!dvm$ parallel (i,j) on B(i,j),shadow_renew(A(CORNER))
       15:   82:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:   83:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
        -:   84:          B(i,j) = A(i+1,j)+A(i,j+1)+A(i-1,j)+A(i,j-1)+
       98:   85:     *A(i-1,j-1)+ A(i+1,j+1)+A(i-1,j+1)+A(i+1,j-1)          
        -:   86:         enddo
        -:   87:      enddo
        -:   88:  
        -:   89:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:   90:!dvm$*,private(isum) 
       15:   91:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:   92:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
        -:   93:          isum = C(i+1,j)+C(i,j+1)+C(i-1,j)+C(i,j-1)+
       84:   94:     *C(i-1,j-1)+ C(i+1,j+1)+C(i-1,j+1)+C(i+1,j-1)       
       98:   95:          if (B(i,j).ne.isum) then         
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:   96:             nloopi=min(nloopi,i)
        -:   97:             nloopj=min(nloopj,j)
        -:   98:          endif
        -:   99:        enddo
        -:  100:      enddo
        -:  101:!dvm$ end region   
        -:  102:!dvm$ get_actual(nloopi,nloopj) 
        -:  103:
        1:  104:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  105:         call ansyes(tname)
call    0 returned 100%
        -:  106:      else
    #####:  107:         call ansno(tname)
call    0 never executed
        -:  108:      endif
       1*:  109:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  110:
        1:  111:      end
        -:  112:C ---------------------------------------------SH2102     
function sh2102_ called 1 returned 100% blocks executed 84%
        1:  113:      subroutine sh2102
        -:  114:      integer, parameter :: N = 16,M=8,NL=1000
        -:  115:      character*6 tname 
        1:  116:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  117:      integer nloopi,nloopj,isum 
        -:  118:
        -:  119:!dvm$ distribute B(BLOCK,BLOCK)       
        -:  120:!dvm$ align (I,J) with B(I,J) ::A
        -:  121:
        1:  122:      tname='SH2102'
       1*:  123:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  124:      NNL=NL    
       17:  125:      call serial2(C,N,M,NNL)
       17:  126:      nloopi=NL
        -:  127:      nloopj=NL
        -:  128:
        -:  129:!dvm$ actual(nloopi,nloopj)
        -:  130:!dvm$ region local(A,B)
        -:  131:!dvm$ parallel (i,j) on A(i,j)
       17:  132:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      145:  133:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      144:  134:          A(i,j) = NL+i+j
        -:  135:        enddo
        -:  136:      enddo                                                
        -:  137:
        -:  138:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:1,0:1)(CORNER))
       15:  139:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  140:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       98:  141:          B(i,j) = A(i+1,j)+A(i,j+1)+A(i+1,j+1)
        -:  142:        enddo
        -:  143:      enddo 
        -:  144:  
        -:  145:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  146:!dvm$*,private(isum) 
       15:  147:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  148:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       84:  149:          isum = C(i+1,j)+C(i,j+1)+C(i+1,j+1)
       98:  150:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  151:            nloopi=min(nloopi,i)
        -:  152:            nloopj=min(nloopj,j)
        -:  153:          endif
        -:  154:        enddo
        -:  155:      enddo
        -:  156:!dvm$ end region   
        -:  157:!dvm$ get_actual(nloopi,nloopj) 
        -:  158:      
        1:  159:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  160:          call ansyes(tname)
call    0 returned 100%
        -:  161:      else
    #####:  162:          call ansno(tname)
call    0 never executed
        -:  163:      endif
       1*:  164:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  165:         
        1:  166:      end
        -:  167:C -----------------------------------------SH2103      
function sh2103_ called 1 returned 100% blocks executed 84%
        1:  168:      subroutine sh2103
        -:  169:      integer, parameter :: N = 16,M=8,NL=1000
        -:  170:      character*6 tname 
        1:  171:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  172:      integer nloopi,nloopj,isum 
        -:  173:
        -:  174:!dvm$ distribute B(BLOCK,BLOCK)      
        -:  175:!dvm$ align (I,J) with B(I,J) ::A
        -:  176:
        1:  177:      tname='SH2103'
       1*:  178:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  179:      NNL=NL    
       17:  180:      call serial2(C,N,M,NNL)
       17:  181:      nloopi=NL
        -:  182:      nloopj=NL
        -:  183:
        -:  184:!dvm$ actual(nloopi,nloopj)
        -:  185:!dvm$ region local(A,B)
        -:  186:!dvm$ parallel (i,j) on A(i,j)
       17:  187:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      145:  188:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      144:  189:          A(i,j) = NL+i+j
        -:  190:        enddo
        -:  191:      enddo                                                
        -:  192:          
        -:  193:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(1:0,0:1))
       15:  194:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  195:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       98:  196:          B(i,j) = A(i-1,j)+A(i,j+1)
        -:  197:        enddo
        -:  198:      enddo 
        -:  199:  
        -:  200:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  201:!dvm$*,private(isum) 
       15:  202:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  203:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       84:  204:          isum = C(i-1,j)+C(i,j+1)
       98:  205:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  206:            nloopi=min(nloopi,i)
        -:  207:            nloopj=min(nloopj,j)
        -:  208:          endif
        -:  209:        enddo
        -:  210:      enddo
        -:  211:!dvm$ end region   
        -:  212:!dvm$ get_actual(nloopi,nloopj) 
        -:  213:
        1:  214:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  215:          call ansyes(tname)
call    0 returned 100%
        -:  216:      else
    #####:  217:          call ansno(tname)
call    0 never executed
        -:  218:      endif
       1*:  219:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  220:    
        1:  221:      end
        -:  222:      
        -:  223:C ------------------------------------------SH2104   
function sh2104_ called 1 returned 100% blocks executed 84%
        1:  224:      subroutine sh2104
        -:  225:      integer, parameter :: N = 16,M=8,NL=1000
        -:  226:      character*6 tname 
        1:  227:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  228:      integer nloopi,nloopj,isum 
        -:  229:
        -:  230:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  231:!dvm$ shadow(1:1,0:1) :: A 
        -:  232:!dvm$ align (I,J) with B(I,J) ::A
        -:  233:
        1:  234:      tname='SH2104'
       1*:  235:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  236:      NNL=NL    
       17:  237:      call serial2(C,N,M,NNL)
       17:  238:      nloopi=NL
        -:  239:      nloopj=NL
        -:  240:
        -:  241:!dvm$ actual(nloopi,nloopj)
        -:  242:!dvm$ region local(A,B)
        -:  243:!dvm$ parallel (i,j) on A(i,j)
       17:  244:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      145:  245:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      144:  246:          A(i,j) = NL+i+j
        -:  247:        enddo
        -:  248:      enddo                                                
        -:  249:          
        -:  250:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:1,0:1)(CORNER))
       15:  251:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  252:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       98:  253:          B(i,j) = A(i+1,j)+A(i,j+1)+A(i+1,j+1)
        -:  254:        enddo
        -:  255:      enddo 
        -:  256:  
        -:  257:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  258:!dvm$*,private(isum) 
       15:  259:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  260:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       84:  261:          isum = C(i+1,j)+C(i,j+1)+C(i+1,j+1)
       98:  262:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  263:            nloopi=min(nloopi,i)
        -:  264:            nloopj=min(nloopj,j)
        -:  265:          endif
        -:  266:        enddo
        -:  267:      enddo
        -:  268:!dvm$ end region   
        -:  269:!dvm$ get_actual(nloopi,nloopj) 
        -:  270:
        1:  271:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  272:          call ansyes(tname)
call    0 returned 100%
        -:  273:      else
    #####:  274:          call ansno(tname)
call    0 never executed
        -:  275:      endif
       1*:  276:      deallocate (A,B,C)        
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  277: 
        1:  278:      end
        -:  279:  
        -:  280:C ------------------------------------------SH2105   
function sh2105_ called 1 returned 100% blocks executed 84%
        1:  281:      subroutine sh2105
        -:  282:      integer, parameter :: N = 16,M=8,NL=1000
        -:  283:      character*6 tname 
        1:  284:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  285:      integer nloopi,nloopj,isum 
        -:  286:
        -:  287:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  288:!dvm$ shadow(0:1,1:1) :: A 
        -:  289:!dvm$ align (I,J) with B(I,J) ::A
        -:  290:
        1:  291:      tname='SH2105'
       1*:  292:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  293:      NNL=NL    
       17:  294:      call serial2(C,N,M,NNL)
       17:  295:      nloopi=NL
        -:  296:      nloopj=NL
        -:  297:
        -:  298:!dvm$ actual(nloopi,nloopj)
        -:  299:!dvm$ region local(A,B)
        -:  300:!dvm$ parallel (i,j) on A(i,j)
       17:  301:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      145:  302:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      144:  303:          A(i,j) = NL+i+j
        -:  304:        enddo
        -:  305:      enddo                                                
        -:  306:          
        -:  307:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:1,1:0)(CORNER))
       15:  308:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  309:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       98:  310:          B(i,j) = A(i,j-1)+A(i+1,j)+A(i+1,j-1)
        -:  311:        enddo
        -:  312:      enddo 
        -:  313:  
        -:  314:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  315:!dvm$*,private(isum) 
       15:  316:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  317:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       84:  318:          isum = C(i,j-1)+C(i+1,j)+C(i+1,j-1)
       98:  319:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  320:           nloopi=min(nloopi,i)
        -:  321:           nloopj=min(nloopj,j)
        -:  322:           endif
        -:  323:        enddo
        -:  324:      enddo
        -:  325:!dvm$ end region   
        -:  326:!dvm$ get_actual(nloopi,nloopj) 
        -:  327:
        1:  328:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  329:          call ansyes(tname)
call    0 returned 100%
        -:  330:      else
    #####:  331:          call ansno(tname)
call    0 never executed
        -:  332:      endif
       1*:  333:      deallocate (A,B,C)      
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  334: 
        1:  335:      end
        -:  336:      
        -:  337:C --------------------------------------------SH2106  
        -:  338:         
function sh2106_ called 1 returned 100% blocks executed 84%
        1:  339:      subroutine sh2106
        -:  340:      integer, parameter :: N = 16,M=8,NL=1000
        -:  341:      character*6 tname 
        1:  342:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  343:      integer nloopi,nloopj,isum 
        -:  344:
        -:  345:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  346:!dvm$ shadow(0:1,0:1) :: A 
        -:  347:!dvm$ align (I,J) with B(I,J) ::A
        -:  348:
        1:  349:      tname='SH2106'
       1*:  350:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  351:      NNL=NL    
       17:  352:      call serial2(C,N,M,NNL)
       17:  353:      nloopi=NL
        -:  354:      nloopj=NL
        -:  355:
        -:  356:!dvm$ actual(nloopi,nloopj)
        -:  357:!dvm$ region local(A,B)
        -:  358:!dvm$ parallel (i,j) on A(i,j)
       17:  359:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      145:  360:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      144:  361:          A(i,j) = NL+i+j
        -:  362:        enddo
        -:  363:      enddo                                                
        -:  364:          
        -:  365:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:1,0:0))
       15:  366:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  367:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       98:  368:          B(i,j) =A(i+1,j)
        -:  369:        enddo
        -:  370:      enddo 
        -:  371:  
        -:  372:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  373:!dvm$*,private(isum) 
       15:  374:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  375:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       84:  376:          isum = C(i+1,j)
       98:  377:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  378:            nloopi=min(nloopi,i)
        -:  379:            nloopj=min(nloopj,j)
        -:  380:          endif
        -:  381:        enddo
        -:  382:      enddo
        -:  383:!dvm$ end region   
        -:  384:!dvm$ get_actual(nloopi,nloopj) 
        -:  385:
        1:  386:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  387:          call ansyes(tname)
call    0 returned 100%
        -:  388:      else
    #####:  389:          call ansno(tname)
call    0 never executed
        -:  390:      endif
       1*:  391:      deallocate (A,B,C)          
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  392:  
        1:  393:      end
        -:  394:C -------------------------------------------SH2107   
        -:  395:         
function sh2107_ called 1 returned 100% blocks executed 84%
        1:  396:      subroutine sh2107
        -:  397:      integer, parameter :: N = 16,M=8,NL=1000
        -:  398:      character*6 tname 
        1:  399:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  400:      integer nloopi,nloopj,isum 
        -:  401:
        -:  402:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  403:!dvm$ shadow(1:0,1:0) :: A 
        -:  404:!dvm$ align (I,J) with B(I,J) ::A
        -:  405:
        1:  406:      tname='SH2107'
       1*:  407:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  408:      NNL=NL    
       17:  409:      call serial2(C,N,M,NNL)
       17:  410:      nloopi=NL
        -:  411:      nloopj=NL
        -:  412:
        -:  413:!dvm$ actual(nloopi,nloopj)
        -:  414:!dvm$ region local(A,B)
        -:  415:!dvm$ parallel (i,j) on A(i,j)
       17:  416:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      145:  417:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      144:  418:         A(i,j) = NL+i+j
        -:  419:        enddo
        -:  420:      enddo                                                
        -:  421:          
        -:  422:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:0,1:0))
       15:  423:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  424:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       98:  425:          B(i,j) =A(i,j-1)
        -:  426:        enddo
        -:  427:      enddo 
        -:  428:  
        -:  429:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  430:!dvm$*,private(isum) 
       15:  431:      do i=2,N-1
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
       99:  432:        do j=2,M-1
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
       84:  433:          isum = C(i,j-1)
       98:  434:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  435:            nloopi=min(nloopi,i)
        -:  436:            nloopj=min(nloopj,j)
        -:  437:          endif
        -:  438:        enddo
        -:  439:      enddo
        -:  440:!dvm$ end region   
        -:  441:!dvm$ get_actual(nloopi,nloopj) 
        -:  442:
        1:  443:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  444:          call ansyes(tname)
call    0 returned 100%
        -:  445:      else
    #####:  446:          call ansno(tname)
call    0 never executed
        -:  447:      endif
       1*:  448:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  449:     
        1:  450:      end      
        -:  451:C -------------------------------------------SH2108   
        -:  452:         
function sh2108_ called 1 returned 100% blocks executed 84%
        1:  453:      subroutine sh2108
        -:  454:      integer, parameter :: N = 16,M=17,NL=1000
        -:  455:      character*6 tname 
        1:  456:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  457:      integer nloopi,nloopj,isum 
        -:  458:
        -:  459:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  460:!dvm$ shadow(2:2,2:2) :: A 
        -:  461:!dvm$ align (I,J) with B(I,J) ::A
        -:  462:
        1:  463:      tname='SH2108'
       1*:  464:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  465:      NNL=NL    
       17:  466:      call serial2(C,N,M,NNL)
       17:  467:      nloopi=NL
        -:  468:      nloopj=NL
        -:  469:
        -:  470:!dvm$ actual(nloopi,nloopj)
        -:  471:!dvm$ region local(A,B)
        -:  472:!dvm$ parallel (i,j) on A(i,j)
       17:  473:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      289:  474:        do j=1,M
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      288:  475:          A(i,j) = NL+i+j
        -:  476:        enddo
        -:  477:      enddo                                                
        -:  478:
        -:  479:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(CORNER))
       13:  480:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  481:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
        -:  482:          B(i,j) = A(i+2,j)+A(i,j+2)+A(i+2,j)+A(i+2,j+2)+
      168:  483:     * A(i-2,j+2)+A(i-2,j)+A(i,j-2)+A(i-2,j-2)
        -:  484:        enddo
        -:  485:      enddo 
        -:  486:  
        -:  487:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  488:!dvm$*,private(isum) 
       13:  489:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  490:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
        -:  491:          isum = C(i+2,j)+C(i,j+2)+C(i+2,j)+C(i+2,j+2)+
      156:  492:     *C(i-2,j+2)+C(i-2,j)+C(i,j-2)+C(i-2,j-2)       
      168:  493:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  494:           nloopi=min(nloopi,i)
        -:  495:           nloopj=min(nloopj,j)
        -:  496:          endif
        -:  497:        enddo
        -:  498:      enddo
        -:  499:!dvm$ end region   
        -:  500:!dvm$ get_actual(nloopi,nloopj) 
        -:  501:
        1:  502:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  503:          call ansyes(tname)
call    0 returned 100%
        -:  504:      else
    #####:  505:          call ansno(tname)
call    0 never executed
        -:  506:      endif 
       1*:  507:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  508:      
        1:  509:      end   
        -:  510:      
        -:  511:C -------------------------------------------SH2109   
        -:  512:         
function sh2109_ called 1 returned 100% blocks executed 84%
        1:  513:      subroutine sh2109
        -:  514:      integer, parameter :: N = 16,M=17,NL=1000
        -:  515:      character*6 tname 
        1:  516:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  517:      integer nloopi,nloopj,isum 
        -:  518:
        -:  519:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  520:!dvm$ shadow(2:2,2:2) :: A 
        -:  521:!dvm$ align (I,J) with B(I,J) ::A
        -:  522:
        1:  523:      tname='SH2109'
       1*:  524:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  525:      NNL=NL    
       17:  526:      call serial2(C,N,M,NNL)
       17:  527:      nloopi=NL
        -:  528:      nloopj=NL
        -:  529:
        -:  530:!dvm$ actual(nloopi,nloopj)
        -:  531:!dvm$ region local(A,B)
        -:  532:!dvm$ parallel (i,j) on A(i,j)
       17:  533:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      289:  534:        do j=1,M
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      288:  535:          A(i,j) = NL+i+j
        -:  536:        enddo
        -:  537:      enddo                                                
        -:  538:          
        -:  539:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:2,2:2)(CORNER))
       13:  540:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  541:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      168:  542:         B(i,j) = A(i+2,j+2)+ A(i+1,j+1)+A(i,j+2)+A(i,j-2)+A(i+2,j-2)
        -:  543:        enddo
        -:  544:      enddo 
        -:  545:  
        -:  546:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  547:!dvm$*,private(isum) 
       13:  548:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  549:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      156:  550:          isum = C(i+2,j+2)+ C(i+1,j+1)+C(i,j+2)+C(i,j-2)+A(i+2,j-2)
      168:  551:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  552:           nloopi=min(nloopi,i)
        -:  553:           nloopj=min(nloopj,j)
        -:  554:          endif
        -:  555:        enddo
        -:  556:      enddo
        -:  557:!dvm$ end region   
        -:  558:!dvm$ get_actual(nloopi,nloopj) 
        -:  559:
        1:  560:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  561:          call ansyes(tname)
call    0 returned 100%
        -:  562:      else
    #####:  563:          call ansno(tname)
call    0 never executed
        -:  564:      endif 
       1*:  565:      deallocate (A,B,C)      
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  566: 
        1:  567:      end   
        -:  568:C -------------------------------------------SH2110  
        -:  569:         
function sh2110_ called 1 returned 100% blocks executed 84%
        1:  570:      subroutine sh2110
        -:  571:      integer, parameter :: N = 16,M=17,NL=1000
        -:  572:      character*6 tname 
        1:  573:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  574:      integer nloopi,nloopj,isum 
        -:  575:
        -:  576:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  577:!dvm$ shadow(2:2,2:2) :: A 
        -:  578:!dvm$ align (I,J) with B(I,J) ::A
        -:  579:
        1:  580:      tname='SH2110'
       1*:  581:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  582:      NNL=NL    
       17:  583:      call serial2(C,N,M,NNL)
       17:  584:      nloopi=NL
        -:  585:      nloopj=NL
        -:  586:
        -:  587:!dvm$ actual(nloopi,nloopj)
        -:  588:!dvm$ region local(A,B)
        -:  589:!dvm$ parallel (i,j) on A(i,j)
       17:  590:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      289:  591:        do j=1,M
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      288:  592:          A(i,j) = NL+i+j
        -:  593:        enddo
        -:  594:      enddo                                                
        -:  595:          
        -:  596:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(2:2,2:0)(CORNER))
       13:  597:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  598:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      168:  599:         B(i,j) = A(i-2,j-2)+ A(i-1,j-1)+A(i-2,j)+A(i+2,j)+A(i+2,j-2)
        -:  600:        enddo
        -:  601:      enddo 
        -:  602:  
        -:  603:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  604:!dvm$*,private(isum) 
       13:  605:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  606:         do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      156:  607:           isum = C(i-2,j-2)+C(i-1,j-1)+C(i-2,j)+C(i+2,j)+C(i+2,j-2)
      168:  608:           if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  609:            nloopi=min(nloopi,i)
        -:  610:            nloopj=min(nloopj,j)
        -:  611:           endif
        -:  612:         enddo
        -:  613:      enddo
        -:  614:!dvm$ end region   
        -:  615:!dvm$ get_actual(nloopi,nloopj) 
        -:  616:
        1:  617:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  618:          call ansyes(tname)
call    0 returned 100%
        -:  619:      else
    #####:  620:          call ansno(tname)
call    0 never executed
        -:  621:      endif 
       1*:  622:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  623:   
        1:  624:      end 
        -:  625:C -------------------------------------------SH2111   
        -:  626:         
function sh2111_ called 1 returned 100% blocks executed 84%
        1:  627:      subroutine sh2111
        -:  628:      integer, parameter :: N = 16,M=17,NL=1000
        -:  629:      character*6 tname 
        1:  630:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  631:      integer nloopi,nloopj,isum 
        -:  632:
        -:  633:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  634:!dvm$ shadow(2:2,0:2) :: A 
        -:  635:!dvm$ align (I,J) with B(I,J) ::A
        -:  636:
        1:  637:      tname='SH2111'
       1*:  638:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  639:      NNL=NL    
       17:  640:      call serial2(C,N,M,NNL)
       17:  641:      nloopi=NL
        -:  642:      nloopj=NL
        -:  643:
        -:  644:!dvm$ actual(nloopi,nloopj)
        -:  645:!dvm$ region local(A,B)
        -:  646:!dvm$ parallel (i,j) on A(i,j)
       17:  647:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      289:  648:        do j=1,M
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      288:  649:          A(i,j) = NL+i+j
        -:  650:        enddo
        -:  651:      enddo                                                
        -:  652:          
        -:  653:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(2:2,0:2)(CORNER))
       13:  654:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  655:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      168:  656:          B(i,j) = A(i+2,j+2)+ A(i+1,j+1)+A(i-2,j+2)+A(i+2,j)
        -:  657:        enddo
        -:  658:      enddo 
        -:  659:  
        -:  660:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  661:!dvm$*,private(isum) 
       13:  662:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  663:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      156:  664:          isum = C(i+2,j+2)+ C(i+1,j+1)+C(i-2,j+2)+C(i+2,j)
      168:  665:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  666:           nloopi=min(nloopi,i)
        -:  667:           nloopj=min(nloopj,j)
        -:  668:          endif
        -:  669:        enddo
        -:  670:      enddo
        -:  671:!dvm$ end region   
        -:  672:!dvm$ get_actual(nloopi,nloopj) 
        -:  673:
        1:  674:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  675:          call ansyes(tname)
call    0 returned 100%
        -:  676:      else
    #####:  677:          call ansno(tname)
call    0 never executed
        -:  678:      endif       
       1*:  679:      deallocate (A,B,C) 
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  680: 
        1:  681:      end  
        -:  682:C -------------------------------------------SH2112   
        -:  683:         
function sh2112_ called 1 returned 100% blocks executed 84%
        1:  684:      subroutine sh2112
        -:  685:      integer, parameter :: N = 16,M=17,NL=1000
        -:  686:      character*6 tname 
        1:  687:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  688:      integer nloopi,nloopj,isum 
        -:  689:
        -:  690:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  691:!dvm$ shadow(2:0,2:2) :: A 
        -:  692:!dvm$ align (I,J) with B(I,J) ::A
        -:  693:
        1:  694:      tname='SH2112'
       1*:  695:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  696:      NNL=NL    
       17:  697:      call serial2(C,N,M,NNL)
       17:  698:      nloopi=NL
        -:  699:      nloopj=NL
        -:  700:
        -:  701:!dvm$ actual(nloopi,nloopj)
        -:  702:!dvm$ region local(A,B)
        -:  703:!dvm$ parallel (i,j) on A(i,j)
       17:  704:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      289:  705:        do j=1,M
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      288:  706:          A(i,j) = NL+i+j
        -:  707:        enddo
        -:  708:      enddo                                                
        -:  709:          
        -:  710:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(1:0,0:1)(CORNER))
       13:  711:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  712:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      168:  713:          B(i,j) = A(i-1,j+1)+ A(i,j+1)+A(i-1,j)
        -:  714:        enddo
        -:  715:      enddo 
        -:  716:  
        -:  717:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  718:!dvm$*,private(isum) 
       13:  719:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  720:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      156:  721:          isum = C(i-1,j+1)+ C(i,j+1)+C(i-1,j)
      168:  722:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  723:           nloopi=min(nloopi,i)
        -:  724:           nloopj=min(nloopj,j)
        -:  725:          endif
        -:  726:        enddo
        -:  727:      enddo
        -:  728:!dvm$ end region   
        -:  729:!dvm$ get_actual(nloopi,nloopj) 
        -:  730:
        1:  731:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  732:          call ansyes(tname)
call    0 returned 100%
        -:  733:      else
    #####:  734:          call ansno(tname)
call    0 never executed
        -:  735:      endif 
       1*:  736:      deallocate (A,B,C)        
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  737:
        1:  738:      end
        -:  739:C -------------------------------------------SH2113  
        -:  740:         
function sh2113_ called 1 returned 100% blocks executed 84%
        1:  741:      subroutine sh2113
        -:  742:      integer, parameter :: N = 16,M=17,NL=1000
        -:  743:      character*6 tname 
        1:  744:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  745:      integer nloopi,nloopj,isum 
        -:  746:
        -:  747:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  748:!dvm$ shadow(2:2,2:0) :: A 
        -:  749:!dvm$ align (I,J) with B(I,J) ::A
        -:  750:
        1:  751:      tname='SH2113'
       1*:  752:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  753:      NNL=NL    
       17:  754:      call serial2(C,N,M,NNL)
       17:  755:      nloopi=NL
        -:  756:      nloopj=NL
        -:  757:
        -:  758:!dvm$ actual(nloopi,nloopj)
        -:  759:!dvm$ region local(A,B)
        -:  760:!dvm$ parallel (i,j) on A(i,j)
       17:  761:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      289:  762:        do j=1,M
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      288:  763:          A(i,j) = NL+i+j
        -:  764:        enddo
        -:  765:      enddo          
        -:  766:
        -:  767:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:1,0:0))
       13:  768:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  769:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      168:  770:          B(i,j) = A(i+1,j)
        -:  771:        enddo
        -:  772:      enddo 
        -:  773:  
        -:  774:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  775:!dvm$*,private(isum) 
       13:  776:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  777:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      156:  778:          isum = C(i+1,j)
      168:  779:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  780:           nloopi=min(nloopi,i)
        -:  781:           nloopj=min(nloopj,j)
        -:  782:           endif
        -:  783:        enddo
        -:  784:      enddo
        -:  785:!dvm$ end region   
        -:  786:!dvm$ get_actual(nloopi,nloopj) 
        -:  787:
        1:  788:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  789:          call ansyes(tname)
call    0 returned 100%
        -:  790:      else
    #####:  791:          call ansno(tname)
call    0 never executed
        -:  792:      endif 
       1*:  793:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  794:
        1:  795:      end
        -:  796:C -------------------------------------------SH2114   
        -:  797:         
function sh2114_ called 1 returned 100% blocks executed 84%
        1:  798:      subroutine sh2114
        -:  799:      integer, parameter :: N = 16,M=17,NL=1000
        -:  800:      character*6 tname 
        1:  801:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  802:      integer nloopi,nloopj,isum 
        -:  803:
        -:  804:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  805:!dvm$ shadow(2:0,2:2) :: A 
        -:  806:!dvm$ align (I,J) with B(I,J) ::A
        -:  807:
        1:  808:      tname='SH2114'
       1*:  809:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  810:      NNL=NL    
       17:  811:      call serial2(C,N,M,NNL)
       17:  812:      nloopi=NL
        -:  813:      nloopj=NL
        -:  814:
        -:  815:!dvm$ actual(nloopi,nloopj)
        -:  816:!dvm$ region local(A,B)
        -:  817:!dvm$ parallel (i,j) on A(i,j)
       17:  818:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      289:  819:        do j=1,M
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      288:  820:          A(i,j) = NL+i+j
        -:  821:        enddo
        -:  822:      enddo                                                
        -:  823:
        -:  824:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:0,0:2))
       13:  825:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  826:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      168:  827:          B(i,j) = A(i,j+2)+A(i,j+1)
        -:  828:        enddo
        -:  829:      enddo 
        -:  830:  
        -:  831:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  832:!dvm$*,private(isum) 
       13:  833:      do i=3,N-2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      169:  834:        do j=3,M-2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
      156:  835:          isum = C(i,j+2)+C(i,j+1)
      168:  836:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  837:           nloopi=min(nloopi,i)
        -:  838:           nloopj=min(nloopj,j)
        -:  839:          endif
        -:  840:        enddo
        -:  841:      enddo
        -:  842:!dvm$ end region   
        -:  843:!dvm$ get_actual(nloopi,nloopj) 
        -:  844:
        1:  845:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  846:          call ansyes(tname)
call    0 returned 100%
        -:  847:      else
    #####:  848:          call ansno(tname)
call    0 never executed
        -:  849:      endif 
       1*:  850:      deallocate (A,B,C) 
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  851:   
        1:  852:      end 
        -:  853:C -------------------------------------------SH2115   
        -:  854:         
function sh2115_ called 1 returned 100% blocks executed 84%
        1:  855:      subroutine sh2115
        -:  856:      integer, parameter :: N = 32,M=32,NL=1000
        -:  857:      character*6 tname 
        1:  858:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  859:      integer nloopi,nloopj,isum 
        -:  860:
        -:  861:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  862:!dvm$ shadow(3:3,3:3) :: A 
        -:  863:!dvm$ align (I,J) with B(I,J) ::A
        -:  864:
        1:  865:      tname='SH2115'
       1*:  866:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  867:      NNL=NL    
       33:  868:      call serial2(C,N,M,NNL)
       33:  869:      nloopi=NL
        -:  870:      nloopj=NL
        -:  871:
        -:  872:!dvm$ actual(nloopi,nloopj)
        -:  873:!dvm$ region local(A,B)
        -:  874:!dvm$ parallel (i,j) on A(i,j)
       33:  875:      do i=1,N
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057:  876:        do j=1,M
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1056:  877:          A(i,j) = NL+i+j
        -:  878:        enddo
        -:  879:      enddo                                                
        -:  880:
        -:  881:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(CORNER))
       27:  882:      do i=4,N-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      703:  883:        do j=4,M-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
        -:  884:          B(i,j) = A(i+1,j+1)+A(i+2,j+2)+A(i+3,j+3)+A(i-3,j-3)+
      702:  885:     * A(i-2,j-2)+A(i-1,j-1)+A(i-3,j+3)+A(i+3,j-3)
        -:  886:        enddo
        -:  887:      enddo 
        -:  888:  
        -:  889:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  890:!dvm$*,private(isum) 
       27:  891:      do i=4,N-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      703:  892:        do j=4,M-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
        -:  893:          isum = C(i+1,j+1)+C(i+2,j+2)+C(i+3,j+3)+C(i-3,j-3)+
      676:  894:     * C(i-2,j-2)+C(i-1,j-1)+C(i-3,j+3)+C(i+3,j-3)       
      702:  895:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  896:           nloopi=min(nloopi,i)
        -:  897:           nloopj=min(nloopj,j)
        -:  898:          endif
        -:  899:        enddo
        -:  900:      enddo
        -:  901:!dvm$ end region   
        -:  902:!dvm$ get_actual(nloopi,nloopj) 
        -:  903:
        1:  904:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  905:          call ansyes(tname)
call    0 returned 100%
        -:  906:      else
    #####:  907:          call ansno(tname)
call    0 never executed
        -:  908:      endif       
       1*:  909:      deallocate (A,B,C)             
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  910:
        1:  911:      end 
        -:  912:C -------------------------------------------SH2116   
        -:  913:         
function sh2116_ called 1 returned 100% blocks executed 84%
        1:  914:      subroutine sh2116
        -:  915:      integer, parameter :: N = 32,M=32,NL=1000
        -:  916:      character*6 tname 
        1:  917:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  918:      integer nloopi,nloopj,isum 
        -:  919:
        -:  920:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  921:!dvm$ shadow(3:3,0:3) :: A 
        -:  922:!dvm$ align (I,J) with B(I,J) ::A
        -:  923:
        1:  924:      tname='SH2116'
       1*:  925:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  926:      NNL=NL    
       33:  927:      call serial2(C,N,M,NNL)
       33:  928:      nloopi=NL
        -:  929:      nloopj=NL
        -:  930:
        -:  931:!dvm$ actual(nloopi,nloopj)
        -:  932:!dvm$ region local(A,B)
        -:  933:!dvm$ parallel (i,j) on A(i,j)
       33:  934:      do i=1,N
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057:  935:        do j=1,M
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1056:  936:          A(i,j) = NL+i+j
        -:  937:        enddo
        -:  938:      enddo                                                
        -:  939:          
        -:  940:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:0,0:1))
       29:  941:      do i=3,N-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      813:  942:        do j=3,M-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      812:  943:          B(i,j) = A(i,j+1)
        -:  944:        enddo
        -:  945:      enddo 
        -:  946:  
        -:  947:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -:  948:!dvm$*,private(isum) 
       29:  949:      do i=3,N-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      813:  950:        do j=3,M-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      784:  951:          isum = C(i,j+1)
      812:  952:          if (B(i,j).ne.isum) then
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
    #####:  953:           nloopi=min(nloopi,i)
        -:  954:           nloopj=min(nloopj,j)
        -:  955:          endif
        -:  956:        enddo
        -:  957:      enddo
        -:  958:!dvm$ end region   
        -:  959:!dvm$ get_actual(nloopi,nloopj) 
        -:  960:
        1:  961:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  962:          call ansyes(tname)
call    0 returned 100%
        -:  963:      else
    #####:  964:          call ansno(tname)
call    0 never executed
        -:  965:      endif 
       1*:  966:      deallocate (A,B,C)         
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -:  967:     
        1:  968:      end 
        -:  969:C --------------------------------------------SH2117  
        -:  970:         
function sh2117_ called 1 returned 100% blocks executed 84%
        1:  971:      subroutine sh2117
        -:  972:      integer, parameter :: N = 32,M=32,NL=1000
        -:  973:      character*6 tname 
        1:  974:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -:  975:      integer nloopi,nloopj,isum 
        -:  976:
        -:  977:!dvm$ distribute B(BLOCK,BLOCK)   
        -:  978:!dvm$ shadow(0:3,3:3) :: A 
        -:  979:!dvm$ align (I,J) with B(I,J) ::A
        -:  980:
        1:  981:      tname='SH2117'
       1*:  982:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -:  983:      NNL=NL    
       33:  984:      call serial2(C,N,M,NNL)
       33:  985:      nloopi=NL
        -:  986:      nloopj=NL
        -:  987:
        -:  988:!dvm$ actual(nloopi,nloopj)
        -:  989:!dvm$ region local(A,B)
        -:  990:!dvm$ parallel (i,j) on A(i,j)
       33:  991:      do i=1,N
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057:  992:        do j=1,M
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1056:  993:          A(i,j) = NL+i+j
        -:  994:        enddo
        -:  995:      enddo                                                
        -:  996:
        -:  997:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(0:1,0:0))
       29:  998:      do i=3,N-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      813:  999:        do j=3,M-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      812: 1000:          B(i,j) = A(i+1,j)
        -: 1001:        enddo
        -: 1002:      enddo 
        -: 1003:  
        -: 1004:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -: 1005:!dvm$*,private(isum) 
       29: 1006:      do i=3,N-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      813: 1007:        do j=3,M-2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
      784: 1008:          isum = C(i+1,j)
      812: 1009:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1010:           nloopi=min(nloopi,i)
        -: 1011:           nloopj=min(nloopj,j)
        -: 1012:           endif
        -: 1013:        enddo
        -: 1014:      enddo
        -: 1015:!dvm$ end region   
        -: 1016:!dvm$ get_actual(nloopi,nloopj) 
        -: 1017:
        1: 1018:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1019:          call ansyes(tname)
call    0 returned 100%
        -: 1020:      else
    #####: 1021:          call ansno(tname)
call    0 never executed
        -: 1022:      endif 
       1*: 1023:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -: 1024:
        1: 1025:      end
        -: 1026:C --------------------------------------------SH2118  
        -: 1027:         
function sh2118_ called 1 returned 100% blocks executed 84%
        1: 1028:      subroutine sh2118
        -: 1029:      integer, parameter :: N = 32,M=32,NL=1000
        -: 1030:      character*6 tname 
        1: 1031:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -: 1032:      integer nloopi,nloopj,isum 
        -: 1033:
        -: 1034:!dvm$ distribute B(BLOCK,BLOCK)   
        -: 1035:!dvm$ shadow(3:3,3:0) :: A 
        -: 1036:!dvm$ align (I,J) with B(I,J) ::A
        -: 1037:
        1: 1038:      tname='SH2118'
       1*: 1039:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -: 1040:      NNL=NL    
       33: 1041:      call serial2(C,N,M,NNL)
       33: 1042:      nloopi=NL
        -: 1043:      nloopj=NL
        -: 1044:
        -: 1045:!dvm$ actual(nloopi,nloopj)
        -: 1046:!dvm$ region local(A,B)
        -: 1047:!dvm$ parallel (i,j) on A(i,j)
       33: 1048:      do i=1,N
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057: 1049:        do j=1,M
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1056: 1050:          A(i,j) = NL+i+j
        -: 1051:        enddo
        -: 1052:      enddo                                                
        -: 1053:          
        -: 1054:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(CORNER))
       27: 1055:      do i=4,N-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      703: 1056:        do j=4,M-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      702: 1057:          B(i,j) = A(i-3,j-3)+A(i+3,j)+A(i-3,j)+A(i-3,j-3)
        -: 1058:        enddo
        -: 1059:      enddo 
        -: 1060:  
        -: 1061:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -: 1062:!dvm$*,private(isum) 
       27: 1063:      do i=4,N-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      703: 1064:        do j=4,M-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      676: 1065:          isum = C(i-3,j-3)+C(i+3,j)+C(i-3,j)+C(i-3,j-3)
      702: 1066:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1067:           nloopi=min(nloopi,i)
        -: 1068:           nloopj=min(nloopj,j)
        -: 1069:          endif
        -: 1070:        enddo
        -: 1071:      enddo
        -: 1072:!dvm$ end region   
        -: 1073:!dvm$ get_actual(nloopi,nloopj) 
        -: 1074:
        1: 1075:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1076:          call ansyes(tname)
call    0 returned 100%
        -: 1077:      else
    #####: 1078:          call ansno(tname)
call    0 never executed
        -: 1079:      endif 
       1*: 1080:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -: 1081:
        1: 1082:      end
        -: 1083:C --------------------------------------------SH2119  
        -: 1084:         
function sh2119_ called 1 returned 100% blocks executed 84%
        1: 1085:      subroutine sh2119
        -: 1086:      integer, parameter :: N = 32,M=32,NL=1000
        -: 1087:      character*6 tname 
        1: 1088:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -: 1089:      integer nloopi,nloopj,isum 
        -: 1090:
        -: 1091:!dvm$ distribute B(BLOCK,BLOCK)   
        -: 1092:!dvm$ shadow(3:0,3:3) :: A 
        -: 1093:!dvm$ align (I,J) with B(I,J) ::A
        -: 1094:
        1: 1095:      tname='SH2119'
       1*: 1096:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -: 1097:      NNL=NL    
       33: 1098:      call serial2(C,N,M,NNL)
       33: 1099:      nloopi=NL
        -: 1100:      nloopj=NL
        -: 1101:
        -: 1102:!dvm$ actual(nloopi,nloopj)
        -: 1103:!dvm$ region local(A,B)
        -: 1104:!dvm$ parallel (i,j) on A(i,j)
       33: 1105:      do i=1,N
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057: 1106:        do j=1,M
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1056: 1107:          A(i,j) = NL+i+j
        -: 1108:        enddo
        -: 1109:      enddo                                                
        -: 1110:          
        -: 1111:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(3:0,3:3)(CORNER))
       27: 1112:      do i=4,N-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      703: 1113:        do j=4,M-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      702: 1114:          B(i,j) = A(i-3,j-3)+A(i,j+3)+A(i-3,j+3)
        -: 1115:        enddo
        -: 1116:      enddo 
        -: 1117:  
        -: 1118:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -: 1119:!dvm$*,private(isum) 
       27: 1120:      do i=4,N-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      703: 1121:        do j=4,M-3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      676: 1122:          isum = C(i-3,j-3)+C(i,j+3)+C(i-3,j+3)
      702: 1123:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1124:           nloopi=min(nloopi,i)
        -: 1125:           nloopj=min(nloopj,j)
        -: 1126:           endif
        -: 1127:        enddo
        -: 1128:      enddo
        -: 1129:!dvm$ end region   
        -: 1130:!dvm$ get_actual(nloopi,nloopj) 
        -: 1131:
        1: 1132:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1133:          call ansyes(tname)
call    0 returned 100%
        -: 1134:      else
    #####: 1135:          call ansno(tname)
call    0 never executed
        -: 1136:      endif 
       1*: 1137:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -: 1138:
        1: 1139:      end
        -: 1140:C --------------------------------------------SH2120  
        -: 1141:         
function sh2120_ called 1 returned 100% blocks executed 84%
        1: 1142:      subroutine sh2120
        -: 1143:      integer, parameter :: N = 480,M=480,NL=1000
        -: 1144:      character*6 tname 
        1: 1145:      integer, allocatable :: A(:,:),B(:,:),C(:,:)
        -: 1146:      integer nloopi,nloopj,isum 
        -: 1147:
        -: 1148:!dvm$ distribute B(BLOCK,BLOCK)   
        -: 1149:!dvm$ shadow(11:11,11:11) :: A 
        -: 1150:!dvm$ align (I,J) with B(I,J) ::A
        -: 1151:
        1: 1152:      tname='SH2120'
       1*: 1153:      allocate (B(N,M),A(N,M),C(N,M))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
call    8 never executed
        -: 1154:      NNL=NL    
      481: 1155:      call serial2(C,N,M,NNL)
      481: 1156:      nloopi=NL
        -: 1157:      nloopj=NL
        -: 1158:
        -: 1159:!dvm$ actual(nloopi,nloopj)
        -: 1160:!dvm$ region local(A,B)
        -: 1161:!dvm$ parallel (i,j) on A(i,j)
      481: 1162:      do i=1,N
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
   230881: 1163:        do j=1,M
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
   230880: 1164:          A(i,j) = NL+i+j
        -: 1165:        enddo
        -: 1166:      enddo                                                
        -: 1167:          
        -: 1168:!dvm$ parallel (i,J) on B(i,j),shadow_renew(A(CORNER))
      459: 1169:      do i=12,N-11
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
   210223: 1170:        do j=12,M-11
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
        -: 1171:          B(i,j) = A(i+11,j+11)+A(i+10,j+10)+A(i+9,j+9)+
        -: 1172:     *A(i-11,j-11)+A(i-10,j-10)+A(i-9,j-9)+A(i+11,j-11)+
   210222: 1173:     *A(i-11,j+11)
        -: 1174:        enddo
        -: 1175:      enddo 
        -: 1176:  
        -: 1177:!dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
        -: 1178:!dvm$*,private(isum) 
      459: 1179:      do i=12,N-11
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
   210223: 1180:        do j=12,M-11
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
        -: 1181:          isum = C(i+11,j+11)+C(i+10,j+10)+C(i+9,j+9)+
        -: 1182:     *C(i-11,j-11)+C(i-10,j-10)+C(i-9,j-9)+C(i+11,j-11)+
   209764: 1183:     *C(i-11,j+11)
   210222: 1184:          if (B(i,j).ne.isum) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1185:           nloopi=min(nloopi,i)
        -: 1186:           nloopj=min(nloopj,j)
        -: 1187:          endif
        -: 1188:        enddo
        -: 1189:      enddo
        -: 1190:!dvm$ end region   
        -: 1191:!dvm$ get_actual(nloopi,nloopj) 
        -: 1192:
        1: 1193:      if (nloopi .eq.NL) then
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1194:          call ansyes(tname)
call    0 returned 100%
        -: 1195:      else
    #####: 1196:          call ansno(tname)
call    0 never executed
        -: 1197:      endif 
       1*: 1198:      deallocate (A,B,C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        -: 1199:
        1: 1200:      end
        -: 1201:C -----------------------------------------------         
function serial2_ called 0 returned 0% blocks executed 0%
    #####: 1202:      subroutine serial2(AR,N,M,NL)
        -: 1203:      integer AR(N,M)
        -: 1204:      integer NL 
     884*: 1205:      do i=1,N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
branch  2 taken 94% (fallthrough)
branch  3 taken 6%
branch  4 taken 94% (fallthrough)
branch  5 taken 6%
branch  6 taken 94% (fallthrough)
branch  7 taken 6%
branch  8 taken 94% (fallthrough)
branch  9 taken 6%
branch 10 taken 94% (fallthrough)
branch 11 taken 6%
branch 12 taken 94% (fallthrough)
branch 13 taken 6%
branch 14 taken 94% (fallthrough)
branch 15 taken 6%
branch 16 taken 94% (fallthrough)
branch 17 taken 6%
branch 18 taken 94% (fallthrough)
branch 19 taken 6%
branch 20 taken 94% (fallthrough)
branch 21 taken 6%
branch 22 taken 94% (fallthrough)
branch 23 taken 6%
branch 24 taken 94% (fallthrough)
branch 25 taken 6%
branch 26 taken 94% (fallthrough)
branch 27 taken 6%
branch 28 taken 97% (fallthrough)
branch 29 taken 3%
branch 30 taken 97% (fallthrough)
branch 31 taken 3%
branch 32 taken 97% (fallthrough)
branch 33 taken 3%
branch 34 taken 97% (fallthrough)
branch 35 taken 3%
branch 36 taken 97% (fallthrough)
branch 37 taken 3%
branch 38 never executed (fallthrough)
branch 39 never executed
branch 40 taken 100% (fallthrough)
branch 41 taken 1%
  239204*: 1206:        do j=1,M
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
branch  2 taken 89% (fallthrough)
branch  3 taken 11%
branch  4 taken 89% (fallthrough)
branch  5 taken 11%
branch  6 taken 89% (fallthrough)
branch  7 taken 11%
branch  8 taken 89% (fallthrough)
branch  9 taken 11%
branch 10 taken 89% (fallthrough)
branch 11 taken 11%
branch 12 taken 89% (fallthrough)
branch 13 taken 11%
branch 14 taken 94% (fallthrough)
branch 15 taken 6%
branch 16 taken 94% (fallthrough)
branch 17 taken 6%
branch 18 taken 94% (fallthrough)
branch 19 taken 6%
branch 20 taken 94% (fallthrough)
branch 21 taken 6%
branch 22 taken 94% (fallthrough)
branch 23 taken 6%
branch 24 taken 94% (fallthrough)
branch 25 taken 6%
branch 26 taken 94% (fallthrough)
branch 27 taken 6%
branch 28 taken 97% (fallthrough)
branch 29 taken 3%
branch 30 taken 97% (fallthrough)
branch 31 taken 3%
branch 32 taken 97% (fallthrough)
branch 33 taken 3%
branch 34 taken 97% (fallthrough)
branch 35 taken 3%
branch 36 taken 97% (fallthrough)
branch 37 taken 3%
branch 38 never executed (fallthrough)
branch 39 never executed
branch 40 taken 100% (fallthrough)
branch 41 taken 1%
  239184*: 1207:          AR(i,j) = NL+i+j
        -: 1208:        enddo
        -: 1209:      enddo
    #####: 1210:      end 
        -: 1211:
        -: 1212:
function ansyes_ called 20 returned 100% blocks executed 100%
       20: 1213:      subroutine ansyes(name)
        -: 1214:      character*6 name
       20: 1215:      print *,name,'  -  complete'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
       20: 1216:      end
function ansno_ called 0 returned 0% blocks executed 0%
    #####: 1217:      subroutine ansno(name)
        -: 1218:      character*6 name
    #####: 1219:      print *,name,'  -  ***error'
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 1220:      end

        -:    0:Source:results/3d/distrmix3/distrmix3.f
        -:    0:Graph:./results\3d\distrmix3\distrmix3.gcno
        -:    0:Data:./results\3d\distrmix3\distrmix3.gcda
        -:    0:Runs:1
function MAIN__ called 1 returned 100% blocks executed 52%
        1:    1:      program DISTRMIX3
        -:    2:
        -:    3:!    Testing DISTRIBUTE and REDISTRIBUTE directives
        -:    4:!            GEN_BLOCK, WGT_BLOCK, MULT_BLOCK, BLOCK, *  distributions
        -:    5:
        -:    6:      integer PROCESSORS_RANK, PROCESSORS_SIZE 
        -:    7:      integer psize(3), rank
        -:    8:
        -:    9:      PROCESSORS_RANK() = 3
        -:   10:      PROCESSORS_SIZE(i) = 1
        -:   11:
        1:   12:      print *,'===START OF distrmix3========================'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   13:
        -:   14:C -------------------------------------------------
        -:   15:c 31  DISTRIBUTE arrA3[MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        -:   16:c              REDISTRIBUTE [WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] 
        -:   17:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        1:   18:      call distrmix31
call    0 returned 100%
        -:   19:C -------------------------------------------------
        -:   20:c 32 DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] 
        -:   21:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        -:   22:c              REDISTRIBUTE [WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] 
        1:   23:      call distrmix32
call    0 returned 100%
        -:   24:C -------------------------------------------------
        -:   25:c 33  DISTRIBUTE arrA3[MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:   26:c              REDISTRIBUTE [WGT_BLOCK][MULT_BLOCK][WGT_BLOCK] 
        -:   27:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        1:   28:      call distrmix33
call    0 returned 100%
        -:   29:C -------------------------------------------------
        -:   30:c 34  DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:   31:c              REDISTRIBUTE [WGT_BLOCK][MULT_BLOCK][WGT_BLOCK] 
        -:   32:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][WGT_BLOCK]
        1:   33:      call distrmix34
call    0 returned 100%
        -:   34:C -------------------------------------------------
        -:   35:c 35  DISTRIBUTE arrA3[MULT_BLOCK][WGT_BLOCK][BLOCK]
        -:   36:c              REDISTRIBUTE [WGT_BLOCK][BLOCK][MULT_BLOCK] 
        -:   37:c              REDISTRIBUTE [BLOCK][MULT_BLOCK][WGT_BLOCK]
        1:   38:      call distrmix35
call    0 returned 100%
        -:   39:C -------------------------------------------------
        -:   40:c 36  DISTRIBUTE arrA3[WGT_BLOCK][MULT_BLOCK][BLOCK]
        -:   41:c              REDISTRIBUTE [MULT_BLOCK][BLOCK][WGT_BLOCK] 
        -:   42:c              REDISTRIBUTE [BLOCK][WGT_BLOCK][MULT_BLOCK]
        1:   43:      call distrmix36
call    0 returned 100%
        -:   44:C -------------------------------------------------
        -:   45:c 37  DISTRIBUTE arrA3[MULT_BLOCK][BLOCK][BLOCK]
        -:   46:c              REDISTRIBUTE [BLOCK][BLOCK][WGT_BLOCK] 
        -:   47:c              REDISTRIBUTE [BLOCK][WGT_BLOCK][MULT_BLOCK]
        1:   48:      call distrmix37
call    0 returned 100%
        -:   49:C -------------------------------------------------
        -:   50:c 38  DISTRIBUTE arrA3[MULT_BLOCK][*][WGT_BLOCK]
        -:   51:c              REDISTRIBUTE [*][*][*] 
        -:   52:c              REDISTRIBUTE [WGT_BLOCK][MULT_BLOCK][*]
        1:   53:      call distrmix38
call    0 returned 100%
        -:   54:C -------------------------------------------------
        -:   55:c 39  DISTRIBUTE arrA3[MULT_BLOCK][BLOCK][*]
        -:   56:c              REDISTRIBUTE [WGT_BLOCK][*][WGT_BLOCK] 
        -:   57:c              REDISTRIBUTE [*][MULT_BLOCK][*]
        1:   58:      call distrmix39
call    0 returned 100%
        -:   59:C -------------------------------------------------
        -:   60:c 310  DISTRIBUTE arrA3[WGT_BLOCK][*][*]
        -:   61:c              REDISTRIBUTE [MULT_BLOCK][*][WGT_BLOCK] 
        -:   62:c              REDISTRIBUTE [*][WGT_BLOCK][MULT_BLOCK]
        1:   63:      call distrmix310                         
        -:   64:C -------------------------------------------------
        -:   65:
        1:   66:      rank = PROCESSORS_RANK()
        -:   67:
        4:   68:      do i=1,rank
call    0 returned 100%
branch  1 taken 75% (fallthrough)
branch  2 taken 25%
        3:   69:         psize(i)=PROCESSORS_SIZE(i)
        1:   70:         if (psize(i) >  4) then ! may be temporary
        -:   71:             goto 1 
        -:   72:         endif
        -:   73:      enddo
        -:   74:
        -:   75:C -------------------------------------------------
        -:   76:       if
        -:   77:     > ((psize(1) == 1 .and. psize(2) == 1 .and. psize(3) == 1)  !range 1 1 1
        -:   78:     >.or.
        -:   79:     >  (psize(1) == 1 .and. psize(2) == 2 .and. psize(3) == 3)  !range 1 2 3
        -:   80:     >.or.
        -:   81:     >  (psize(1) == 2 .and. psize(2) == 3 .and. psize(3) == 2)  !range 2 3 2
        -:   82:     >.or.
        -:   83:     >  (psize(1) == 3 .and. psize(2) == 4 .and. psize(3) == 1)  !range 3 4 1
       1*:   84:     >.or.
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
branch  6 never executed (fallthrough)
branch  7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed
branch 28 never executed (fallthrough)
branch 29 never executed
        -:   85:     >  (psize(1) == 4 .and. psize(2) == 1 .and. psize(3) == 4)) !range 4 1 4
        -:   86:     >then
        -:   87:c 311  DISTRIBUTE arrA3[MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        -:   88:c             REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][GEN_BLOCK] 
        -:   89:c             REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        1:   90:        call distrmix311 (psize)
call    0 returned 100%
        -:   91:      endif
        -:   92:C-------------------------------------------------
        -:   93:      if
        -:   94:     > ((psize(1) == 1 .and. psize(2) == 1 .and. psize(3) == 1)  !range 1 1 1
        -:   95:     >.or.
        -:   96:     >  (psize(1) == 1 .and. psize(2) == 4 .and. psize(3) == 4)  !range 1 4 4
        -:   97:     >.or.
        -:   98:     >  (psize(1) == 2 .and. psize(2) == 4 .and. psize(3) == 2)  !range 2 4 2
        -:   99:     >.or.
        -:  100:     >  (psize(1) == 3 .and. psize(2) == 1 .and. psize(3) == 3)  !range 3 1 3
       1*:  101:     >.or.
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
branch  6 never executed (fallthrough)
branch  7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed
branch 28 never executed (fallthrough)
branch 29 never executed
        -:  102:     >  (psize(1) == 4 .and. psize(2) == 2 .and. psize(3) == 2)) !range 4 2 2
        -:  103:     >then
        -:  104:c 312 DISTRIBUTE arrA3[GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]
        -:  105:c             REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:  106:c             REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][BLOCK]
        1:  107:        call distrmix312 (psize)
call    0 returned 100%
        -:  108:      endif
        -:  109:C-------------------------------------------------
        -:  110:c 313  DISTRIBUTE arrA3[BLOCK][BLOCK][MULT_BLOCK]
        -:  111:c              REDISTRIBUTE [BLOCK][GEN_BLOCK][BLOCK] 
        -:  112:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][WGT_BLOCK]
        1:  113:         call distrmix313 (psize)
call    0 returned 100%
        -:  114:C -------------------------------------------------
        -:  115:c 314 DISTRIBUTE arrA3[WGT_BLOCK][BLOCK][MULT_BLOCK]
        -:  116:c              REDISTRIBUTE [GEN_BLOCK][BLOCK][GEN_BLOCK] 
        -:  117:c              REDISTRIBUTE [MULT_BLOCK][BLOCK][WGT_BLOCK]
        1:  118:         call distrmix314 (psize)
call    0 returned 100%
        -:  119:C -------------------------------------------------
        -:  120:c 315  DISTRIBUTE arrA3[MULT_BLOCK][WGT_BLOCK][WGT_BLOCK]
        -:  121:c              REDISTRIBUTE [BLOCK][GEN_BLOCK][GEN_BLOCK] 
        -:  122:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        1:  123:         call distrmix315 (psize)
call    0 returned 100%
        -:  124:C -------------------------------------------------
        -:  125:c 316  DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:  126:c              REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][BLOCK] 
        -:  127:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        1:  128:          call distrmix316 (psize)
call    0 returned 100%
        -:  129:C -------------------------------------------------
        -:  130:c 317  DISTRIBUTE arrA3[GEN_BLOCK][*][GEN_BLOCK]
        -:  131:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][*]
        -:  132:c              REDISTRIBUTE [*][GEN_BLOCK][BLOCK] 
        1:  133:         call distrmix317 (psize)
call    0 returned 100%
        -:  134:C -------------------------------------------------
        -:  135:      if
        -:  136:     > ((psize(1) == 1 .and. psize(2) == 1 .and. psize(3) == 1)  !range 1 1 1
        -:  137:     >.or.
        -:  138:     >  (psize(1) == 1 .and. psize(2) == 4 .and. psize(3) == 3)  !range 1 4 3
        -:  139:     >.or.
        -:  140:     >  (psize(1) == 2 .and. psize(2) == 3 .and. psize(3) == 2)  !range 2 3 2
        -:  141:     >.or.
        -:  142:     >  (psize(1) == 3 .and. psize(2) == 1 .and. psize(3) == 4)  !range 3 1 4
       1*:  143:     >.or.
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
branch  6 never executed (fallthrough)
branch  7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed
branch 28 never executed (fallthrough)
branch 29 never executed
        -:  144:     >  (psize(1) == 4 .and. psize(2) == 2 .and. psize(3) == 2)) !range 4 2 2
        -:  145:     >then
        -:  146:c 318  DISTRIBUTE arrA3[GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]  
        -:  147:c                REDISTRIBUTE [WGT_BLOCK][WGT_BLOCK][WGT_BLOCK]
        -:  148:c                REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]  
        1:  149:        call distrmix318 (psize)
call    0 returned 100%
        -:  150:      endif
        -:  151:C -------------------------------------------------
        -:  152:      if
        -:  153:     > ((psize(1) == 1 .and. psize(2) == 2 .and. psize(3) == 1)  !range 1 2 1
        -:  154:     >.or.
        -:  155:     >  (psize(1) == 2 .and. psize(2) == 2 .and. psize(3) == 2)  !range 2 2 2
        -:  156:     >.or.
        -:  157:     >  (psize(1) == 3 .and. psize(2) == 2 .and. psize(3) == 2)  !range 3 2 2
       1*:  158:     >.or.
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
branch  4 never executed (fallthrough)
branch  5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
branch  8 never executed (fallthrough)
branch  9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
branch 14 never executed (fallthrough)
branch 15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed
branch 18 taken 0% (fallthrough)
branch 19 taken 100%
branch 20 never executed (fallthrough)
branch 21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed
        -:  159:     >  (psize(1) == 4 .and. psize(2) == 4 .and. psize(3) == 1)) !range 4 4 1
        -:  160:     >then
        -:  161:
        -:  162:c 319 DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] 
        -:  163:c               REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][GEN_BLOCK] 
        -:  164:c               REDISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][WGT_BLOCK]
    #####:  165:        call distrmix319 (psize)
call    0 never executed
        -:  166:      endif
        -:  167:C -------------------------------------------------
        -:  168:c 320  DISTRIBUTE arrA3[BLOCK][GEN_BLOCK][GEN_BLOCK]  
        -:  169:c                REDISTRIBUTE arrB3[WGT_BLOCK][BLOCK][WGT_BLOCK] 
        1:  170:        call distrmix320 (psize)
call    0 returned 100%
        -:  171:C -------------------------------------------------
        -:  172:c 321 DISTRIBUTE arrA3[WGT_BLOCK][BLOCK][WGT_BLOCK]  ! static
        -:  173:c                REDISTRIBUTE [GEN_BLOCK][BLOCK][GEN_BLOCK]
        1:  174:        call distrmix321 (psize)
call    0 returned 100%
        -:  175:C -------------------------------------------------
        -:  176:c 322  DISTRIBUTE arrA3[GEN_BLOCK][BLOCK][GEN_BLOCK]
        -:  177:c                REDISTRIBUTE [BLOCK][WGT_BLOCK][BLOCK]
        1:  178:         call distrmix322 (psize)
call    0 returned 100%
        -:  179:C -------------------------------------------------
        -:  180:c 323 DISTRIBUTE arrA3[BLOCK][WGT_BLOCK][BLOCK]
        -:  181:c                REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][*]
        1:  182:         call distrmix323 (psize)
call    0 returned 100%
        -:  183:C -------------------------------------------------
        -:  184:c 324 DISTRIBUTE arrA3[GEN_BLOCK][GEN_BLOCK][*]    
        -:  185:c                REDISTRIBUTE [*][WGT_BLOCK][WGT_BLOCK]
        -:  186:c                REDISTRIBUTE [GEN_BLOCK][*][GEN_BLOCK]
        1:  187:         call distrmix324 (psize)
call    0 returned 100%
        -:  188:C -------------------------------------------------
        -:  189:c 325  DISTRIBUTE arrA3 [*][GEN_BLOCK][GEN_BLOCK]  
        -:  190:c                REDISTRIBUTE [*][WGT_BLOCK][*]
        -:  191:c                REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]
        1:  192:        call distrmix325 (psize)
call    0 returned 100%
        -:  193:C -------------------------------------------------
        -:  194:C
        1:  195: 1     print *,'=== END OF distrmix3 ========================= '    
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:  196:
function main called 1 returned 100% blocks executed 100%
        1:  197:      end
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:  198:
        -:  199:C ----------------------------------------------------distrmix31
        -:  200:c 31  DISTRIBUTE arrA3[MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        -:  201:c              REDISTRIBUTE [WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] 
        -:  202:
        -:  203:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        -:  204:
function distrmix31_ called 1 returned 100% blocks executed 91%
        1:  205:      subroutine distrmix31
        -:  206:      
        -:  207:      integer, parameter :: AN1=32,AN2=32,AN3=32,NL=1000,ER=10000
        -:  208:      integer :: erri=ER,i,j,k
        -:  209:
        -:  210:      integer, parameter :: m11 = 4, m21 = 8, m31 = 2 
        -:  211:      integer, parameter :: m12 = 2, m22 = 4, m32 = 4 
        -:  212:
        -:  213:      double precision, dimension(7) :: 
        -:  214:     >            WB1=(/2.0,1.5,4.,3.0, 2., 3., 2./)     
        -:  215:      double precision, dimension(8)::
        -:  216:     >            WB2=(/1.0,1.,2.,2.0,1.,1.,2.,2./)     
        -:  217:      double precision, dimension(7) :: 
        -:  218:     >            WB3=(/2.0,2.,2.6,3.0, 1., 1.5, 1./)     
        -:  219:
        1:  220:      integer, allocatable :: A3(:,:,:)
        -:  221:      character(12), parameter :: tname='distrmix31  '
        -:  222:
        -:  223:               
        -:  224:!dvm$ distribute A3(MULT_BLOCK(m11),MULT_BLOCK(m21),MULT_BLOCK(m31))   
        -:  225:!dvm$ dynamic A3
        -:  226:
       1*:  227:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  228:
        -:  229:!dvm$ region
        -:  230:!dvm$ parallel (i,j,k) on A3(i,j,k)
       33:  231:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057:  232:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    33824:  233:             do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    33792:  234:                A3(i,j,k) = i*NL/10 + j*NL/100 + k    
        -:  235:             enddo
        -:  236:          enddo
        -:  237:      enddo
        -:  238:!dvm$ end region
        -:  239:
        -:  240:!dvm$ redistribute 
        -:  241:!dvm$* A3(WGT_BLOCK(WB1,7),WGT_BLOCK(WB2,8),WGT_BLOCK(WB3,7))   
        -:  242:
        -:  243:!dvm$ region
        -:  244:!dvm$ parallel (i,j,k) on A3(i,j,k)
       33:  245:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057:  246:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    33824:  247:             do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    33792:  248:                A3(i,j,k) = A3(i,j,k) + 2    
        -:  249:             enddo
        -:  250:          enddo
        -:  251:      enddo
        -:  252:!dvm$ end region
        -:  253:
        -:  254:!dvm$ redistribute A3(MULT_BLOCK(m12),MULT_BLOCK(m22),MULT_BLOCK(m32))   
        -:  255:
        -:  256:!dvm$ actual (erri)
        -:  257:
        -:  258:!dvm$ region
        -:  259:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       33:  260:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1057:  261:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    33824:  262:            do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    33792:  263:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) + 2) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  264:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  265:                endif 
        -:  266:            enddo
        -:  267:          enddo
        -:  268:      enddo
        -:  269:!dvm$ end region
        -:  270:     
        -:  271:!dvm$ get_actual (erri)
        -:  272:
        1:  273:      if (erri  == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  274:          call ansyes(tname)
call    0 returned 100%
        -:  275:      else
    #####:  276:          call ansno(tname)
call    0 never executed
        -:  277:      endif 
        -:  278:
       1*:  279:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  280:
        1:  281:      end subroutine distrmix31
        -:  282:
        -:  283:C ----------------------------------------------------distrmix32
        -:  284:c 32 DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] 
        -:  285:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        -:  286:c              REDISTRIBUTE [WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] 
        -:  287:
function distrmix32_ called 1 returned 100% blocks executed 93%
        1:  288:      subroutine distrmix32
        -:  289:
        -:  290:      integer, parameter :: AN1=16,AN2=16,AN3=12,NL=1000,ER=10000
        -:  291:      integer :: erri=ER,i,j,k
        -:  292:
        -:  293:      integer, parameter :: m1 = 2, m2 = 4, m3 = 4
        -:  294:
        -:  295:      double precision, dimension(6) :: 
        -:  296:     >            WB1=(/2.0,5.,0.,3.0, 2., 3./)     
        -:  297:      double precision, dimension(8)::
        -:  298:     >            WB2=(/1.2,2.,4.,2.5,3.,1.,3.,2./)     
        -:  299:      double precision, dimension(7) :: 
        -:  300:     >            WB3=(/2.3,1.2,4.6,3.0, 1.5, 2.5, 1.2/)     
        -:  301:
        1:  302:      integer, allocatable :: A3(:,:,:)
        -:  303:      character(12), parameter :: tname='distrmix32  '
        -:  304:
        -:  305:!dvm$ distribute 
        -:  306:!dvm$* A3(WGT_BLOCK(WB1,6),WGT_BLOCK(WB2,8),WGT_BLOCK(WB3,7))   
        -:  307:!dvm$ dynamic A3
        -:  308:
       1*:  309:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  310:     
     3277:  311:      A3 = 10 
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
branch  2 taken 94% (fallthrough)
branch  3 taken 6%
branch  4 taken 94% (fallthrough)
branch  5 taken 6%
        -:  312:
        -:  313:!dvm$ actual (A3)
        -:  314:
        -:  315:!dvm$ region
        -:  316:!dvm$ parallel (i,j,k) on A3(i,j,k)
       17:  317:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  318:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     3344:  319:             do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     3328:  320:                A3(i,j,k) = A3(i,j,k) + i*NL/10 + j*NL/100 + k    
        -:  321:             enddo
        -:  322:          enddo
        -:  323:      enddo
        -:  324:!dvm$ end region
        -:  325:
        -:  326:!dvm$ redistribute A3(MULT_BLOCK(m1),MULT_BLOCK(m2),MULT_BLOCK(m3))   
        -:  327:
        -:  328:!dvm$ region
        -:  329:!dvm$ parallel (i,j,k) on A3(i,j,k)
       17:  330:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  331:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     3344:  332:             do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     3328:  333:                A3(i,j,k) = A3(i,j,k) + 2    
        -:  334:             enddo
        -:  335:          enddo
        -:  336:      enddo
        -:  337:!dvm$ end region
        -:  338:
        -:  339:!dvm$ redistribute 
        -:  340:!dvm$* A3(WGT_BLOCK(WB2,8),WGT_BLOCK(WB3,7),WGT_BLOCK(WB1,6))   
        -:  341:
        -:  342:!dvm$ actual (erri)
        -:  343:
        -:  344:!dvm$ region
        -:  345:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min( erri ) )
       17:  346:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  347:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     3344:  348:            do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     3328:  349:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 12)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  350:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  351:                endif 
        -:  352:            enddo
        -:  353:          enddo
        -:  354:      enddo
        -:  355:!dvm$ end region
        -:  356:     
        -:  357:!dvm$ get_actual (erri)
        -:  358:
        1:  359:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  360:          call ansyes(tname)
call    0 returned 100%
        -:  361:      else
    #####:  362:          call ansno(tname)
call    0 never executed
        -:  363:      endif 
        -:  364:
       1*:  365:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  366:
        1:  367:      end subroutine distrmix32
        -:  368:
        -:  369:C----------------------------------------------------distrmix33
        -:  370:c 33  DISTRIBUTE arrA3[MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:  371:c              REDISTRIBUTE [WGT_BLOCK][MULT_BLOCK][WGT_BLOCK] 
        -:  372:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]
        -:  373:
function distrmix33_ called 1 returned 100% blocks executed 93%
        1:  374:      subroutine distrmix33
        -:  375:
        -:  376:      integer, parameter :: AN1=12,AN2=18,AN3=20,NL=1000,ER=10000
        -:  377:      integer :: erri=ER,i,j,k
        -:  378:
        -:  379:      integer, parameter :: m11 = 2, m21 = 3, m31 = 2
        -:  380:      integer, parameter :: m12 = 6, m22 = 9, m32 = 5
        -:  381: 
        -:  382:      double precision, dimension(7) :: 
        -:  383:     >            WB1=(/2.2, 2.4, 4., 2.5, 3.5, 1.,3./)     
        -:  384:      double precision, dimension(6)::
        -:  385:     >            WB2=(/1.2, 2., 2.5, 3., 1.5, 3./)     
        -:  386:      double precision, dimension(5) :: 
        -:  387:     >            WB3=(/4.3, 2.2, 2.6, 2.0, 2.5/)     
        -:  388:                                        
        1:  389:      integer, allocatable :: A3(:,:,:)
        -:  390:      character(12), parameter :: tname='distrmix33  '
        -:  391: 
        -:  392:!dvm$ distribute A3(MULT_BLOCK(m11),WGT_BLOCK(WB2,6),MULT_BLOCK(m31))   
        -:  393:!dvm$ dynamic A3
        -:  394:
       1*:  395:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  396:
     4701:  397:      A3 = 7
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 95% (fallthrough)
branch  3 taken 5%
branch  4 taken 92% (fallthrough)
branch  5 taken 8%
        -:  398:
        -:  399:!dvm$ actual (A3)
        -:  400:
        -:  401:!dvm$ region
        -:  402:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13:  403:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      229:  404:          do j=1,AN2
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     4548:  405:             do k=1,AN3
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     4536:  406:                A3(i,j,k) = A3(i,j,k) + i*NL/10 + j*NL/100 + k    
        -:  407:             enddo
        -:  408:         enddo
        -:  409:      enddo
        -:  410:!dvm$ end region
        -:  411:
        -:  412:!dvm$ redistribute 
        -:  413:!dvm$*    A3(WGT_BLOCK(WB1,7),MULT_BLOCK(m21),WGT_BLOCK(WB3,5))   
        -:  414:
        -:  415:!dvm$ region
        -:  416:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13:  417:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      229:  418:         do j=1, AN2
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     4548:  419:            do k=1,AN3
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     4536:  420:               A3(i,j,k) = A3(i,j,k) - 5
        -:  421:             enddo
        -:  422:          enddo
        -:  423:      enddo
        -:  424:!dvm$ end region
        -:  425:    
        -:  426:!dvm$ redistribute
        -:  427:!dvm$*    A3(MULT_BLOCK(m12),MULT_BLOCK(m22),MULT_BLOCK(m32))   
        -:  428:
        -:  429:!dvm$ actual (erri)
        -:  430:
        -:  431:!dvm$ region
        -:  432:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       13:  433:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      229:  434:           do j=1,AN2
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     4548:  435:             do k=1,AN3
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     4536:  436:                 if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 2)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  437:                     erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  438:                 endif 
        -:  439:             enddo
        -:  440:          enddo
        -:  441:      enddo
        -:  442:!dvm$ end region
        -:  443:    
        -:  444:!dvm$ get_actual (erri)
        -:  445:
        1:  446:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  447:         call ansyes(tname)
call    0 returned 100%
        -:  448:      else
    #####:  449:         call ansno(tname)
call    0 never executed
        -:  450:      endif 
        -:  451:
       1*:  452:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  453:
        1:  454:      end subroutine distrmix33
        -:  455:
        -:  456:C------------------------------------------------------distrmix34
        -:  457:c 34  DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:  458:c              REDISTRIBUTE [WGT_BLOCK][MULT_BLOCK][WGT_BLOCK] 
        -:  459:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][WGT_BLOCK]
        -:  460:
function distrmix34_ called 1 returned 100% blocks executed 93%
        1:  461:      subroutine distrmix34
        -:  462:
        -:  463:      integer, parameter :: AN1=35,AN2=28,AN3=16,NL=1000,ER=10000
        -:  464:      integer :: erri=ER,i,j,k
        -:  465:
        -:  466:      integer, parameter :: m1 = 7, m2 = 7, m3 = 4
        -:  467:
        -:  468:      double precision, dimension(8) :: 
        -:  469:     >            WB1=(/2., 2., 4., 2.7, 3.5, 2., 1., 3./)     
        -:  470:      double precision, dimension(6)::
        -:  471:     >            WB2=(/12., 2.5, 3., 1.5, 3., 2./)     
        -:  472:      double precision, dimension(7) :: 
        -:  473:     >            WB3=(/4.,3., 2.2, 2.6, 2.0, 2.5, 1./)     
        -:  474:                                        
        1:  475:      integer, allocatable :: A3(:,:,:)
        -:  476:      character(12), parameter :: tname='distrmix34  '
        -:  477:
        -:  478:!dvm$ distribute :: A3
        -:  479:!dvm$ dynamic A3
        -:  480:
       1*:  481:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  482:
        -:  483:!dvm$ redistribute
        -:  484:!dvm$*  A3(WGT_BLOCK(WB1,8),WGT_BLOCK(WB2,6),MULT_BLOCK(m3))   
        -:  485:
    16145:  486:        A3 = 0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
branch  2 taken 97% (fallthrough)
branch  3 taken 3%
branch  4 taken 97% (fallthrough)
branch  5 taken 3%
        -:  487:
        -:  488:!dvm$ actual (A3)
        -:  489:
        -:  490:!dvm$ region
        -:  491:!dvm$ parallel (i,j,k) on A3(i,j,k)
       36:  492:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1016:  493:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    16695:  494:             do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    16660:  495:               A3(i,j,k) = A3(i,j,k) + i*NL/10 + j*NL/100 + k    
        -:  496:             enddo                               
        -:  497:         enddo
        -:  498:      enddo
        -:  499:!dvm$ end region
        -:  500:
        -:  501:!dvm$ redistribute
        -:  502:!dvm$*  A3(WGT_BLOCK(WB2,6),MULT_BLOCK(m2),WGT_BLOCK(WB3,7))   
        -:  503:
        -:  504:!dvm$ region
        -:  505:!dvm$ parallel (i,j,k) on A3(i,j,k)
       36:  506:       do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1016:  507:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    16695:  508:            do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    16660:  509:                A3(i,j,k) = A3(i,j,k)*2     
        -:  510:            enddo
        -:  511:          enddo
        -:  512:       enddo
        -:  513:!dvm$ end region
        -:  514: 
        -:  515:!dvm$ redistribute
        -:  516:!dvm$*  A3(MULT_BLOCK(m1),WGT_BLOCK(WB3,7),WGT_BLOCK(WB1,8))   
        -:  517:
        -:  518:!dvm$ actual (erri)
        -:  519:
        -:  520:!dvm$ region
        -:  521:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       36:  522:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1016:  523:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    16695:  524:            do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    16660:  525:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) * 2) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  526:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  527:               endif 
        -:  528:            enddo
        -:  529:          enddo
        -:  530:      enddo
        -:  531:!dvm$ end region
        -:  532:
        -:  533:!dvm$ get_actual (erri)
        -:  534:
        1:  535:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  536:          call ansyes(tname)
call    0 returned 100%
        -:  537:      else
    #####:  538:          call ansno(tname)
call    0 never executed
        -:  539:      endif 
        -:  540:
       1*:  541:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  542:
        1:  543:      end subroutine distrmix34
        -:  544:
        -:  545:C------------------------------------------------------distrmix35
        -:  546:c 35   DISTRIBUTE arrA3[MULT_BLOCK][WGT_BLOCK][BLOCK]
        -:  547:c               REDISTRIBUTE [WGT_BLOCK][BLOCK][MULT_BLOCK] 
        -:  548:c               REDISTRIBUTE [BLOCK][MULT_BLOCK][WGT_BLOCK]
        -:  549:
function distrmix35_ called 1 returned 100% blocks executed 95%
        1:  550:      subroutine distrmix35
        -:  551:
        -:  552:      integer, parameter :: AN1= 10, AN2=21, AN3=32,NL=1000,ER=10000
        -:  553:      integer :: erri=ER,i,j,k
        -:  554:
        -:  555:      integer, parameter :: m1 = 2, m2 = 3, m3 = 4 
        -:  556: 
        -:  557:      double precision, dimension(7) :: 
        -:  558:     >            WB1=(/2., 4., 3., 2.5, 5., 1., 2./)     
        -:  559:      double precision, dimension(10)::
        -:  560:     >            WB2=(/1., 2., 5., 3., 1., 3., 2., 3., 2., 1./)     
        -:  561:      double precision, dimension(8) :: 
        -:  562:     >            WB3=(/2.3, 2.2, 1.6, 1., 2.0, 2.5, 3., 2./)     
        -:  563:                                        
        -:  564:      integer A3(AN1,AN2,AN3)    ! static array
        -:  565:      character(12), parameter :: tname='distrmix35  '
        -:  566:
        -:  567:!dvm$ distribute A3(MULT_BLOCK(m1),WGT_BLOCK(WB2,10),BLOCK)   
        -:  568:!dvm$ dynamic A3
        -:  569:
        -:  570:!dvm$ region
        -:  571:!dvm$ parallel (i,j,k) on A3(i,j,k)
       11:  572:      do i=1,AN1
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
      221:  573:        do j=1,AN2
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     6940:  574:           do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     6930:  575:               A3(i,j,k) = i*NL/10 + j*NL/100 + k + 5   
        -:  576:            enddo
        -:  577:         enddo
        -:  578:      enddo
        -:  579:!dvm$ end region
        -:  580:
        -:  581:!dvm$ redistribute
        -:  582:!dvm$*    A3(WGT_BLOCK(WB1,7),BLOCK,MULT_BLOCK(m3))   
        -:  583:
        -:  584:!dvm$ region
        -:  585:!dvm$ parallel (i,j,k) on A3(i,j,k)
       11:  586:      do i=1,AN1
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
      221:  587:        do j=1,AN2
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     6940:  588:           do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     6930:  589:               A3(i,j,k) = A3(i,j,k) + 2
        -:  590:            enddo
        -:  591:          enddo
        -:  592:      enddo
        -:  593:!dvm$ end region
        -:  594:
        -:  595:!dvm$ redistribute
        -:  596:!dvm$*    A3(BLOCK, MULT_BLOCK(m2),WGT_BLOCK(WB3,8))   
        -:  597:
        -:  598:!dvm$ actual (erri)
        -:  599:
        -:  600:!dvm$ region
        -:  601:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       11:  602:      do i=1,AN1
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
      221:  603:         do j=1,AN2
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     6940:  604:            do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     6930:  605:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 7)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  606:                   erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  607:                endif 
        -:  608:            enddo
        -:  609:          enddo
        -:  610:      enddo
        -:  611:!dvm$ end region
        -:  612:     
        -:  613:!dvm$ get_actual (erri)
        -:  614:
        1:  615:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  616:          call ansyes(tname)
call    0 returned 100%
        -:  617:      else
    #####:  618:          call ansno(tname)
call    0 never executed
        -:  619:      endif 
        -:  620:
        1:  621:      end subroutine distrmix35
        -:  622:
        -:  623:C------------------------------------------------------distrmix36
        -:  624:c 36  DISTRIBUTE arrA3[WGT_BLOCK][MULT_BLOCK][BLOCK]
        -:  625:c             REDISTRIBUTE [MULT_BLOCK][BLOCK][WGT_BLOCK] 
        -:  626:c             REDISTRIBUTE [BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:  627: 
function distrmix36_ called 1 returned 100% blocks executed 91%
        1:  628:      subroutine distrmix36
        -:  629:
        -:  630:      integer, parameter :: AN1=16,AN2=28,AN3=16,NL=1000,ER=10000
        -:  631:      integer :: erri=ER,i,j,k
        -:  632:
        -:  633:      integer, parameter :: m1 = 2, m2 = 7, m3 = 4
        -:  634:
        -:  635:      double precision, dimension(8) :: 
        -:  636:     >           WB1=(/1.2,2.,4.,2.5,3.,1.,3.,2./)     
        -:  637:      double precision, dimension(7)::
        -:  638:     >           WB2=(/2.,2.,4.,2.5,3.,1.,3./)     
        -:  639:      double precision, dimension(7) :: 
        -:  640:     >           WB3=(/2.5,2.2,4.2,2.0, 1.5, 3.5, 1.2/)     
        -:  641:
        1:  642:      integer, allocatable :: A3(:,:,:)
        -:  643:      character(12), parameter :: tname='distrmix36  '
        -:  644:
        -:  645:!dvm$ distribute A3(WGT_BLOCK(WB1,8),MULT_BLOCK(m2),BLOCK)   
        -:  646:!dvm$ dynamic A3
        -:  647:
       1*:  648:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  649:
        -:  650:!dvm$ region
        -:  651:!dvm$ parallel (i,j,k) on A3(i,j,k)
       17:  652:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      465:  653:        do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     7632:  654:           do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     7616:  655:               A3(i,j,k) = (i*NL/10 + j*NL/100 + k) * 3     
        -:  656:           enddo  
        -:  657:         enddo
        -:  658:      enddo
        -:  659:!dvm$ end region
        -:  660:
        -:  661:!dvm$ redistribute
        -:  662:!dvm$*    A3(MULT_BLOCK(m1),BLOCK,WGT_BLOCK(WB3,7))   
        -:  663:
        -:  664:!dvm$ region
        -:  665:!dvm$ parallel (i,j,k) on A3(i,j,k)
       17:  666:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      465:  667:        do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     7632:  668:           do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     7616:  669:               A3(i,j,k) = A3(i,j,k) * 2
        -:  670:            enddo
        -:  671:          enddo
        -:  672:      enddo
        -:  673:!dvm$ end region
        -:  674:
        -:  675:!dvm$ redistribute
        -:  676:!dvm$*    A3(BLOCK, WGT_BLOCK(WB2,7),MULT_BLOCK(m3))   
        -:  677:
        -:  678:!dvm$ actual (erri)
        -:  679:
        -:  680:!dvm$ region
        -:  681:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       17:  682:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      465:  683:         do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     7632:  684:            do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     7616:  685:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) * 6) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  686:                   erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  687:                endif 
        -:  688:            enddo
        -:  689:          enddo
        -:  690:      enddo
        -:  691:!dvm$ end region
        -:  692:
        -:  693:!dvm$ get_actual (erri)
        -:  694:
        1:  695:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  696:          call ansyes(tname)
call    0 returned 100%
        -:  697:      else
    #####:  698:          call ansno(tname)
call    0 never executed
        -:  699:      endif 
        -:  700:
       1*:  701:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  702:
        1:  703:      end subroutine distrmix36
        -:  704: 
        -:  705:C -----------------------------------------------------distrmix37
        -:  706:c 37  DISTRIBUTE arrA3[MULT_BLOCK][BLOCK][BLOCK]
        -:  707:c              REDISTRIBUTE [BLOCK][BLOCK][WGT_BLOCK] 
        -:  708:c              REDISTRIBUTE [BLOCK][WGT_BLOCK][MULT_BLOCK]
        -:  709:
function distrmix37_ called 1 returned 100% blocks executed 91%
        1:  710:      subroutine distrmix37
        -:  711:
        -:  712:      integer, parameter :: AN1=10,AN2=10,AN3=30,NL=1000,ER=10000
        -:  713:      integer :: erri=ER,i,j,k
        -:  714:
        -:  715:      integer, parameter :: m1 = 2, m2 = 5, m3 = 3
        -:  716:
        -:  717:      double precision, dimension(6) :: 
        -:  718:     >           WB2=(/4., 2.5, 3., 1., 3., 2./)     
        -:  719:      double precision, dimension(8)::
        -:  720:     >           WB3=(/1.,2.,3.,3.5, 4., 1., 3., 2./)     
        -:  721:
        1:  722:      integer, allocatable :: A3(:,:,:)
        -:  723:      character(12), parameter :: tname='distrmix37  '
        -:  724:
        -:  725:!dvm$ distribute A3(MULT_BLOCK(m1),BLOCK,BLOCK)   
        -:  726:!dvm$ dynamic A3
        -:  727:
       1*:  728:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  729:
        -:  730:!dvm$ region
        -:  731:!dvm$ parallel (i,j,k) on A3(i,j,k)
       11:  732:      do i=1,AN1
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
      111:  733:        do j=1,AN2
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     3110:  734:           do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     3100:  735:               A3(i,j,k) = (i*NL/10 + j*NL/100 + k) * 3     
        -:  736:           enddo  
        -:  737:         enddo
        -:  738:      enddo
        -:  739:!dvm$ end region
        -:  740:
        -:  741:!dvm$ redistribute
        -:  742:!dvm$*    A3(BLOCK,BLOCK,WGT_BLOCK(WB3,8))   
        -:  743:
        -:  744:!dvm$ region
        -:  745:!dvm$ parallel (i,j,k) on A3(i,j,k)
       11:  746:      do i=1,AN1
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
      111:  747:        do j=1,AN2
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     3110:  748:           do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     3100:  749:               A3(i,j,k) = A3(i,j,k) * 2
        -:  750:            enddo
        -:  751:          enddo
        -:  752:      enddo
        -:  753:!dvm$ end region
        -:  754:
        -:  755:!dvm$ redistribute
        -:  756:!dvm$*    A3(BLOCK, WGT_BLOCK(WB2,6),MULT_BLOCK(m3))   
        -:  757:
        -:  758:!dvm$ actual (erri)
        -:  759:
        -:  760:!dvm$ region
        -:  761:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       11:  762:      do i=1,AN1
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
      111:  763:         do j=1,AN2
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     3110:  764:            do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     3100:  765:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) * 6) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  766:                   erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  767:                endif 
        -:  768:            enddo
        -:  769:          enddo
        -:  770:      enddo
        -:  771:!dvm$ end region
        -:  772:
        -:  773:!dvm$ get_actual (erri)
        -:  774:
        1:  775:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  776:          call ansyes(tname)
call    0 returned 100%
        -:  777:      else
    #####:  778:          call ansno(tname)
call    0 never executed
        -:  779:      endif 
        -:  780:
       1*:  781:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  782:
        1:  783:      end subroutine distrmix37
        -:  784: 
        -:  785:C------------------------------------------------------distrmix38
        -:  786:c 38  DISTRIBUTE arrA3[MULT_BLOCK][*][WGT_BLOCK]
        -:  787:c              REDISTRIBUTE [*][*][*] 
        -:  788:c              REDISTRIBUTE [WGT_BLOCK][MULT_BLOCK][*]
        -:  789:
function distrmix38_ called 1 returned 100% blocks executed 93%
        1:  790:      subroutine distrmix38
        -:  791:
        -:  792:      integer, parameter :: AN1=16,AN2=16,AN3=16,NL=1000,ER=10000
        -:  793:      integer :: erri=ER,i,j,k
        -:  794:    
        -:  795:      integer, parameter :: m1 = 2, m2 = 1, m3 = 4
        -:  796:
        -:  797:      double precision, dimension(11) :: 
        -:  798:     >   WB=(/2.2, 3.,3., 2.5, 2., 1., 4., 2., 1., 5., 2./)     
        -:  799:
        1:  800:      integer, allocatable :: A3(:,:,:)
        -:  801:      character(12), parameter :: tname='distrmix38  '
        -:  802:
        -:  803:!dvm$ distribute A3(MULT_BLOCK(m1),*,WGT_BLOCK(WB,11))   
        -:  804:!dvm$ dynamic A3
        -:  805:
       1*:  806:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  807:
     4369:  808:      A3 = 5
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
branch  2 taken 94% (fallthrough)
branch  3 taken 6%
branch  4 taken 94% (fallthrough)
branch  5 taken 6%
        -:  809:
        -:  810:!dvm$ actual (A3)
        -:  811:
        -:  812:!dvm$ region
        -:  813:!dvm$ parallel (i,j,k) on A3(i,j,k)
       17:  814:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  815:        do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368:  816:           do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352:  817:               A3(i,j,k) = A3(i,j,k) + (i*NL/10 + j*NL/100 + k) 
        -:  818:           enddo  
        -:  819:         enddo
        -:  820:      enddo
        -:  821:!dvm$ end region
        -:  822:
        -:  823:!dvm$ redistribute  A3(*,*,*)   
        -:  824:
        -:  825:!dvm$ region
        -:  826:!dvm$ parallel (i,j,k) on A3(i,j,k)
       17:  827:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  828:        do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368:  829:           do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352:  830:               A3(i,j,k) = A3(i,j,k) + 2
        -:  831:            enddo
        -:  832:          enddo
        -:  833:      enddo
        -:  834:!dvm$ end region
        -:  835:
        -:  836:!dvm$ redistribute
        -:  837:!dvm$*    A3(WGT_BLOCK(WB,8),MULT_BLOCK(m2),*)   
        -:  838:
        -:  839:!dvm$ actual (erri)
        -:  840:
        -:  841:!dvm$ region
        -:  842:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       17:  843:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  844:         do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368:  845:            do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352:  846:              if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) + 7) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  847:                   erri = min(erri,i*NL/10 + j*NL/100 + k)
        -:  848:               endif 
        -:  849:            enddo
        -:  850:          enddo
        -:  851:      enddo
        -:  852:!dvm$ end region
        -:  853:
        -:  854:!dvm$ get_actual (erri)
        -:  855:
        1:  856:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  857:          call ansyes(tname)
call    0 returned 100%
        -:  858:      else
    #####:  859:          call ansno(tname)
call    0 never executed
        -:  860:      endif 
        -:  861:
       1*:  862:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  863:
        1:  864:      end subroutine distrmix38
        -:  865:
        -:  866:C ----------------------------------------------------distrmix39
        -:  867:C 39  DISTRIBUTE arrA3[MULT_BLOCK][BLOCK][*]
        -:  868:c             REDISTRIBUTE [WGT_BLOCK][*][WGT_BLOCK] 
        -:  869:c             REDISTRIBUTE [*][MULT_BLOCK][*]
        -:  870:
function distrmix39_ called 1 returned 100% blocks executed 93%
        1:  871:      subroutine distrmix39
        -:  872:
        -:  873:      integer, parameter :: AN1=18,AN2=6,AN3=30,NL=1000,ER=10000
        -:  874:      integer :: erri=ER,i,j,k
        -:  875:   
        -:  876:      integer, parameter :: m1 = 3, m2 = 2, m3 = 5
        -:  877:      
        -:  878:      double precision, dimension(11) :: 
        -:  879:     >   WB=(/3.2, 2., 2., 1.5, 4., 2., 3., 2.5, 1.6, 3., 2./)     
        -:  880:
        1:  881:      integer, allocatable :: A3(:,:,:)
        -:  882:      character(12), parameter :: tname='distrmix39  '
        -:  883:
        -:  884:!dvm$ distribute A3(MULT_BLOCK(m1),BLOCK,*)   
        -:  885:!dvm$ dynamic A3
        -:  886:
       1*:  887:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  888:
     3451:  889:      A3 = 7
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 86% (fallthrough)
branch  3 taken 14%
branch  4 taken 95% (fallthrough)
branch  5 taken 5%
        -:  890:
        -:  891:!dvm$ actual (A3)
        -:  892:
        -:  893:!dvm$ region
        -:  894:!dvm$ parallel (i,j,k) on A3(i,j,k)
       19:  895:      do i=1,AN1
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
      127:  896:        do j=1,AN2
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
     3366:  897:          do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     3348:  898:             A3(i,j,k) = A3(i,j,k) + (i*NL/10 + j*NL/100 + k) 
        -:  899:          enddo
        -:  900:        enddo
        -:  901:      enddo
        -:  902:!dvm$ end region
        -:  903:
        -:  904:!dvm$ redistribute
        -:  905:!dvm$*    A3(WGT_BLOCK(WB,11),*,WGT_BLOCK(WB,7))   
        -:  906:
        -:  907:!dvm$ actual (erri)
        -:  908:
        -:  909:!dvm$ region
        -:  910:!dvm$ parallel (i,j,k) on A3(i,j,k)
       19:  911:      do i=1,AN1
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
      127:  912:          do j=1,AN2
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
     3366:  913:             do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     3348:  914:                A3(i,j,k) = A3(i,j,k) + 4    
        -:  915:             enddo
        -:  916:          enddo
        -:  917:      enddo
        -:  918:!dvm$ end region
        -:  919: 
        -:  920:!dvm$ redistribute
        -:  921:!dvm$*    A3(*,MULT_BLOCK(m2),*)   
        -:  922:
        -:  923:!dvm$ region
        -:  924:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       19:  925:      do i=1,AN1
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
      127:  926:          do j=1,AN2
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
     3366:  927:            do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     3348:  928:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) + 11) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  929:                    erri = min(erri, i*NL/10 + j*NL/100 + k)
        -:  930:                endif 
        -:  931:            enddo
        -:  932:          enddo
        -:  933:      enddo
        -:  934:!dvm$ end region
        -:  935:
        -:  936:!dvm$ get_actual (erri)
        -:  937:
        1:  938:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  939:          call ansyes(tname)
call    0 returned 100%
        -:  940:      else
    #####:  941:          call ansno(tname)
call    0 never executed
        -:  942:      endif
        -:  943:
       1*:  944:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  945:
        1:  946:      end subroutine distrmix39
        -:  947:
        -:  948:C ----------------------------------------------------distrmix310
        -:  949:c 310  DISTRIBUTE arrA3[WGT_BLOCK][*][*]
        -:  950:c             REDISTRIBUTE [MULT_BLOCK][*][WGT_BLOCK] 
        -:  951:c             REDISTRIBUTE [*][WGT_BLOCK][MULT_BLOCK]
        -:  952:
function distrmix310_ called 1 returned 100% blocks executed 91%
        1:  953:      subroutine distrmix310
        -:  954:
        -:  955:      integer, parameter :: AN1=25,AN2=35,AN3=10,NL=1000,ER=10000
        -:  956:      integer :: erri=ER,i,j,k
        -:  957:
        -:  958:      integer, parameter :: m1 = 5, m2 = 7, m3 = 2
        -:  959:
        -:  960:      double precision, dimension(12) :: 
        -:  961:     >  WB=(/3., 1., 2., 1.5, 3., 4., 3., 2.5, 1.6, 3., 1.2, 1./)     
        -:  962:
        1:  963:      integer, allocatable :: A3(:,:,:)
        -:  964:      character(12), parameter :: tname='distrmix310 '
        -:  965:
        -:  966:!dvm$ distribute A3(WGT_BLOCK(WB,12),*,*)   
        -:  967:!dvm$ dynamic A3
        -:  968:
       1*:  969:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -:  970:
        -:  971:!dvm$ region
        -:  972:!dvm$ parallel (i,j,k) on A3(i,j,k)
       26:  973:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      901:  974:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     9650:  975:             do k=1,AN3
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     9625:  976:                A3(i,j,k) = i*NL/10 + j*NL/100 + k    
        -:  977:             enddo
        -:  978:          enddo
        -:  979:      enddo
        -:  980:!dvm$ end region
        -:  981:
        -:  982:!dvm$ redistribute
        -:  983:!dvm$*    A3(MULT_BLOCK(m1), *, WGT_BLOCK(WB,8))   
        -:  984:
        -:  985:!dvm$ region
        -:  986:!dvm$ parallel (i,j,k) on A3(i,j,k)
       26:  987:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      901:  988:          do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     9650:  989:             do k=1,AN3
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     9625:  990:                A3(i,j,k) = A3(i,j,k) - 2    
        -:  991:            enddo
        -:  992:         enddo
        -:  993:      enddo
        -:  994:!dvm$ end region
        -:  995:
        -:  996:!dvm$ redistribute
        -:  997:!dvm$*    A3(*,MULT_BLOCK(m2),WGT_BLOCK(WB,8))   
        -:  998:
        -:  999:!dvm$ actual (erri)
        -: 1000:
        -: 1001:!dvm$ region
        -: 1002:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       26: 1003:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      901: 1004:         do j=1,AN2
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     9650: 1005:             do k=1,AN3
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     9625: 1006:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) - 2) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1007:                   erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 1008:                endif 
        -: 1009:             enddo
        -: 1010:          enddo
        -: 1011:      enddo
        -: 1012:!dvm$ end region
        -: 1013:
        -: 1014:!dvm$ get_actual (erri)
        -: 1015:
        1: 1016:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1017:          call ansyes(tname)
call    0 returned 100%
        -: 1018:      else
    #####: 1019:         call ansno(tname)
call    0 never executed
        -: 1020:      endif
        -: 1021:
       1*: 1022:      deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1023:
        1: 1024:      end subroutine distrmix310
        -: 1025:
        -: 1026:C ----------------------------------------------------distrmix311
        -: 1027:c 311  DISTRIBUTE arrA3[MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]       range 1 1 1
        -: 1028:c              REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]     range 1 2 3
        -: 1029:c              REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][MULT_BLOCK]  range 2 3 2
        -: 1030:c                                                                 range 3 2 2
        -: 1031:c                                                                 range 4 1 4
function distrmix311_ called 1 returned 100% blocks executed 91%
        1: 1032:      subroutine distrmix311 (psize)
        -: 1033:      integer psize(3)
        -: 1034:
        -: 1035:      integer, parameter :: AN1=15,AN2=15,AN3=28,NL=1000,ER=10000
        -: 1036:      integer :: erri=ER,i,j,k
        -: 1037:
        -: 1038:      integer, parameter :: m11 = 3, m21 = 5, m31 = 4 
        -: 1039:      integer, parameter :: m12 = 5, m22 = 3, m32 = 7 
        -: 1040:
        -: 1041:      integer, dimension(1) :: BSi111=(/15/)      !range 1 1 1  
        -: 1042:      integer, dimension(1) :: BSj111=(/15/)     
        -: 1043:      integer, dimension(1) :: BSk111=(/28/)     
        -: 1044:
        -: 1045:      integer, dimension(1) :: BSi1=(/15/)        !range 1 2 3  
        -: 1046:      integer, dimension(2) :: BSj1=(/8,7/)     
        -: 1047:      integer, dimension(3) :: BSk1=(/12,10,6/)     
        -: 1048:
        -: 1049:      integer, dimension(2) :: BSi2=(/4,11/)      !range 2 3 2  
        -: 1050:      integer, dimension(3) :: BSj2=(/7,5,3/)     
        -: 1051:      integer, dimension(2) :: BSk2=(/10,18/)     
        -: 1052:
        -: 1053:      integer, dimension(3) :: BSi3=(/2,8,5/)     !range 3 4 1  
        -: 1054:      integer, dimension(4) :: BSj3=(/3,2,6,4/)     
        -: 1055:      integer, dimension(1) :: BSk3=(/28/)     
        -: 1056:
        -: 1057:      integer, dimension(4) :: BSi4=(/1,2,4,8/)   !range 4 1 4  
        -: 1058:      integer, dimension(1) :: BSj4=(/15/)     
        -: 1059:      integer, dimension(4) :: BSk4=(/12,4,6,6/)     
        -: 1060:
        1: 1061:      integer, allocatable :: A3(:,:,:)
        -: 1062:      character(12), parameter :: tname='distrmix311 '
        -: 1063:
        -: 1064:!dvm$ distribute A3(MULT_BLOCK(m11),MULT_BLOCK(m21),MULT_BLOCK(m31))   
        -: 1065:!dvm$ dynamic A3
        -: 1066:
       1*: 1067:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -: 1068:
        -: 1069:!dvm$ region
        -: 1070:!dvm$ parallel (i,j,k) on A3(i,j,k)
       16: 1071:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      241: 1072:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     6540: 1073:             do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     6525: 1074:                A3(i,j,k) = i*NL/10 + j*NL/100 + k    
        -: 1075:             enddo
        -: 1076:          enddo
        -: 1077:      enddo
        -: 1078:!dvm$ end region
        -: 1079:
        -: 1080:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),BLOCK,GEN_BLOCK(BSk))   
        -: 1081:
        1: 1082:      select case(psize(1))
        -: 1083:      case(1) 
        -: 1084:        if (psize(2) == 1 .and. psize(3) == 1) then
        -: 1085:!dvm$ redistribute
        -: 1086:!dvm$*    A3(GEN_BLOCK(BSi111),GEN_BLOCK(BSj111),GEN_BLOCK(BSk111))   
        -: 1087:        else
        -: 1088:!dvm$ redistribute
        -: 1089:!dvm$*    A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj1),GEN_BLOCK(BSk1))   
        -: 1090:        endif
        -: 1091:      case(2)
        -: 1092:!dvm$ redistribute
        -: 1093:!dvm$*    A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj2),GEN_BLOCK(BSk2))   
        -: 1094:      case(3)
        -: 1095:!dvm$ redistribute
        -: 1096:!dvm$*    A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj3),GEN_BLOCK(BSk3))   
        -: 1097:      case(4)
        -: 1098:!dvm$ redistribute
        -: 1099:!dvm$*    A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj4),GEN_BLOCK(BSk4))   
        -: 1100:      case default 
        1: 1101:         goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1102:      endselect  
        -: 1103:
        -: 1104:!dvm$ region
        -: 1105:!dvm$ parallel (i,j,k) on A3(i,j,k)
       16: 1106:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      241: 1107:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     6540: 1108:             do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     6525: 1109:                A3(i,j,k) = A3(i,j,k) * 2    
        -: 1110:             enddo
        -: 1111:          enddo
        -: 1112:      enddo
        -: 1113:!dvm$ end region
        -: 1114:
        -: 1115:!dvm$ redistribute A3(MULT_BLOCK(m12),MULT_BLOCK(m22),MULT_BLOCK(m32))   
        -: 1116:
        -: 1117:!dvm$ actual (erri)
        -: 1118:
        -: 1119:!dvm$ region
        -: 1120:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       16: 1121:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      241: 1122:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     6540: 1123:            do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     6525: 1124:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k) * 2) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1125:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 1126:                endif 
        -: 1127:            enddo
        -: 1128:          enddo
        -: 1129:      enddo
        -: 1130:!dvm$ end region
        -: 1131:     
        -: 1132:!dvm$ get_actual (erri)
        -: 1133:
        1: 1134:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1135:          call ansyes(tname)
call    0 returned 100%
        -: 1136:      else
    #####: 1137:          call ansno(tname)
call    0 never executed
        -: 1138:      endif 
        -: 1139:
       1*: 1140: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1141:
        1: 1142:      end subroutine distrmix311
        -: 1143:
        -: 1144:C ----------------------------------------------------distrmix312
        -: 1145:c 312  DISTRIBUTE arrA3[GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]          range 1 1 1
        -: 1146:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]   range 1 4 4
        -: 1147:c              REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][BLOCK]         range 2 4 2
        -: 1148:c                                                                 range 3 1 3
        -: 1149:c                                                                 range 4 2 2
function distrmix312_ called 1 returned 100% blocks executed 91%
        1: 1150:      subroutine distrmix312 (psize)
        -: 1151:      integer psize(3)
        -: 1152:
        -: 1153:      integer, parameter :: AN1=24,AN2=10,AN3=24,NL=1000,ER=10000
        -: 1154:      integer :: erri=ER,i,j,k
        -: 1155:
        -: 1156:      integer, parameter :: m1 = 3, m2 = 2, m3 = 4 
        -: 1157:
        -: 1158:      double precision, dimension(10) :: 
        -: 1159:     >  WB=(/2., 2.5, 3., 4., 3.5, 2.5, 2.6, 3., 2.2, 3./)     
        -: 1160:
        -: 1161:      integer, dimension(1) :: BSi111=(/24/)        !range 1 1 1  
        -: 1162:      integer, dimension(1) :: BSj111=(/10/)     
        -: 1163:      integer, dimension(1) :: BSk111=(/24/)     
        -: 1164:                                                              
        -: 1165:      integer, dimension(1) :: BSi11=(/24/)         !range 1 4 4  
        -: 1166:      integer, dimension(1) :: BSi12=(/24/)           
        -: 1167:      integer, dimension(4) :: BSj11=(/3,2,4,1/)     
        -: 1168:      integer, dimension(4) :: BSj12=(/4,2,1,3/)     
        -: 1169:      integer, dimension(4) :: BSk11=(/10,4,3,7/)     
        -: 1170:      integer, dimension(4) :: BSk12=(/5,6,7,6/)     
        -: 1171:
        -: 1172:      integer, dimension(2) :: BSi21=(/14,10/)      !range 2 4 2  
        -: 1173:      integer, dimension(2) :: BSi22=(/8,16/)     
        -: 1174:      integer, dimension(4) :: BSj21=(/3,2,1,4/)     
        -: 1175:      integer, dimension(4) :: BSj22=(/5,3,2,0/)     
        -: 1176:      integer, dimension(2) :: BSk21=(/20,4/)     
        -: 1177:      integer, dimension(2) :: BSk22=(/16,8/)          
        -: 1178:
        -: 1179:      integer, dimension(3) :: BSi31=(/8,12,4/)     !range 3 1 3  
        -: 1180:      integer, dimension(3) :: BSi32=(/3,10,11/)     
        -: 1181:      integer, dimension(1) :: BSj31=(/10/)     
        -: 1182:      integer, dimension(1) :: BSj32=(/10/)     
        -: 1183:      integer, dimension(3) :: BSk31=(/7,9,8/)     
        -: 1184:      integer, dimension(3) :: BSk32=(/4,6,14/)     
        -: 1185:
        -: 1186:      integer, dimension(4) :: BSi41=(/2,6,12,4/)   !range 4 2 2  
        -: 1187:      integer, dimension(4) :: BSi42=(/3,2,9,10/)     
        -: 1188:      integer, dimension(2) :: BSj41=(/6,4/)     
        -: 1189:      integer, dimension(2) :: BSj42=(/10,0/)     
        -: 1190:      integer, dimension(2) :: BSk41=(/14,10/)     
        -: 1191:      integer, dimension(2) :: BSk42=(/6,18/)     
        -: 1192:
        1: 1193:      integer, allocatable :: A3(:,:,:)
        -: 1194:      character(12), parameter :: tname='distrmix312 '
        -: 1195:
        -: 1196:!dvm$ distribute :: A3   
        -: 1197:!dvm$ dynamic A3
        -: 1198:
       1*: 1199:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1200:
        -: 1201:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj1),GEN_BLOCK(BSk1))   
        1: 1202:      select case(psize(1))
        -: 1203:      case(1) 
        -: 1204:        if (psize(2) == 1 .and. psize(3) == 1) then
        -: 1205:!dvm$ redistribute
        -: 1206:!dvm$*    A3(GEN_BLOCK(BSi111),GEN_BLOCK(BSj111),GEN_BLOCK(BSk111))   
        -: 1207:        else
        -: 1208:!dvm$ redistribute
        -: 1209:!dvm$*    A3(GEN_BLOCK(BSi11),GEN_BLOCK(BSj11),GEN_BLOCK(BSk11))   
        -: 1210:        endif
        -: 1211:      case(2)
        -: 1212:!dvm$ redistribute
        -: 1213:!dvm$*    A3(GEN_BLOCK(BSi21),GEN_BLOCK(BSj21),GEN_BLOCK(BSk21))   
        -: 1214:      case(3)
        -: 1215:!dvm$ redistribute
        -: 1216:!dvm$*    A3(GEN_BLOCK(BSi31),GEN_BLOCK(BSj31),GEN_BLOCK(BSk31))   
        -: 1217:      case(4)
        -: 1218:!dvm$ redistribute
        -: 1219:!dvm$*    A3(GEN_BLOCK(BSi41),GEN_BLOCK(BSj41),GEN_BLOCK(BSk41))   
        -: 1220:      case default 
        1: 1221:         goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1222:      endselect  
        -: 1223:
        -: 1224:!dvm$ region
        -: 1225:!dvm$ parallel (i,j,k) on A3(i,j,k)
       25: 1226:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      265: 1227:          do j=1,AN2
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     6024: 1228:             do k=1,AN3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
     6000: 1229:                A3(i,j,k) = i*NL/10 + j*NL/100 + k  + 30 
        -: 1230:             enddo                                     
        -: 1231:          enddo
        -: 1232:      enddo
        -: 1233:!dvm$ end region
        -: 1234:
        -: 1235:!dvm$ redistribute A3(MULT_BLOCK(m1),WGT_BLOCK(WB,10),MULT_BLOCK(m3))   
        -: 1236:
        -: 1237:!dvm$ region
        -: 1238:!dvm$ parallel (i,j,k) on A3(i,j,k)
       25: 1239:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      265: 1240:          do j=1,AN2
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     6024: 1241:             do k=1,AN3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
     6000: 1242:                A3(i,j,k) = A3(i,j,k) + 30 
        -: 1243:             enddo                                     
        -: 1244:          enddo
        -: 1245:      enddo
        -: 1246:!dvm$ end region
        -: 1247:
        -: 1248:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj2),BLOCK)
        -: 1249:
        -: 1250:      select case(psize(1))
        -: 1251:      case(1)
        -: 1252:        if  (psize(2) == 1 .and. psize(3) == 1) then
        -: 1253:!dvm$ redistribute
        -: 1254:!dvm$*    A3(GEN_BLOCK(BSi111),GEN_BLOCK(BSj111),BLOCK)   
        -: 1255:        else
        -: 1256:!dvm$ redistribute
        -: 1257:!dvm$*    A3(GEN_BLOCK(BSi12),GEN_BLOCK(BSj12),BLOCK)   
        -: 1258:        endif
        -: 1259:      case(2)
        -: 1260:!dvm$ redistribute
        -: 1261:!dvm$*    A3(GEN_BLOCK(BSi22),GEN_BLOCK(BSj22),BLOCK)   
        -: 1262:      case(3)
        -: 1263:!dvm$ redistribute
        -: 1264:!dvm$*    A3(GEN_BLOCK(BSi32),GEN_BLOCK(BSj32),BLOCK)   
        -: 1265:      case(4)
        -: 1266:!dvm$ redistribute
        -: 1267:!dvm$*    A3(GEN_BLOCK(BSi42),GEN_BLOCK(BSj42),BLOCK)   
        -: 1268:      case default 
        -: 1269:         goto 10
        -: 1270:      endselect  
        -: 1271:
        -: 1272:!dvm$ actual (erri)
        -: 1273:
        -: 1274:!dvm$ region
        -: 1275:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min( erri ) )
       25: 1276:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      265: 1277:          do j=1,AN2
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
     6024: 1278:            do k=1,AN3
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
     5760: 1279:                A3(i,j,k) = A3(i,j,k) - 30 
     6000: 1280:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 30)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1281:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 1282:                endif 
        -: 1283:            enddo
        -: 1284:          enddo
        -: 1285:      enddo
        -: 1286:!dvm$ end region
        -: 1287:     
        -: 1288:!dvm$ get_actual (erri)
        -: 1289:
        1: 1290:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1291:          call ansyes(tname)
call    0 returned 100%
        -: 1292:      else
    #####: 1293:          call ansno(tname)
call    0 never executed
        -: 1294:      endif 
        -: 1295:
       1*: 1296: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1297:
        1: 1298:      end subroutine distrmix312
        -: 1299:
        -: 1300:C------------------------------------------------------distrmix313
        -: 1301:c 313  DISTRIBUTE arrA3[BLOCK][BLOCK][MULT_BLOCK]             
        -: 1302:c           REDISTRIBUTE [BLOCK][GEN_BLOCK][BLOCK]            
        -: 1303:c           REDISTRIBUTE [MULT_BLOCK][MULT_BLOCK][WGT_BLOCK]  
        -: 1304:
function distrmix313_ called 1 returned 100% blocks executed 91%
        1: 1305:      subroutine distrmix313 (psize)
        -: 1306:      integer psize(3)
        -: 1307:
        -: 1308:      integer, parameter :: AN1=12,AN2=24,AN3=36,NL=1000,ER=10000
        -: 1309:      integer :: erri=ER,i,j,k
        -: 1310:
        -: 1311:      integer, parameter :: m1 = 2, m2 = 3, m3 = 4 
        -: 1312:
        -: 1313:      double precision, dimension(9) :: 
        -: 1314:     >  WB=(/1., 2.5, 3., 4., 2.5, 2.6, 3.5, 4.2, 3./)     
        -: 1315:
        -: 1316:      integer, dimension(1) :: BSj1=(/24/)        
        -: 1317:      integer, dimension(2) :: BSj2=(/21,3/)      
        -: 1318:      integer, dimension(3) :: BSj3=(/7,9,8/)     
        -: 1319:      integer, dimension(4) :: BSj4=(/10,4,6,4/)  
        -: 1320:
        1: 1321:      integer, allocatable :: A3(:,:,:)
        -: 1322:      character(12), parameter :: tname='distrmix313 '
        -: 1323:
        -: 1324:!dvm$ distribute A3(BLOCK, BLOCK, MULT_BLOCK(m3))   
        -: 1325:!dvm$ dynamic A3
        -: 1326:
       1*: 1327:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -: 1328:
        -: 1329:!dvm$ region
        -: 1330:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13: 1331:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      301: 1332:          do j=1,AN2
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
    10668: 1333:             do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    10656: 1334:                A3(i,j,k) = i*NL/10 + j*NL/100 + k  + 20       
        -: 1335:             enddo                                     
        -: 1336:          enddo
        -: 1337:      enddo
        -: 1338:!dvm$ end region
        -: 1339:
        -: 1340:!!!!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj),BLOCK)   
        1: 1341:      select case(psize(2))
        -: 1342:      case(1)
        -: 1343:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),BLOCK)   
        -: 1344:      case(2)
        -: 1345:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),BLOCK)   
        -: 1346:      case(3)
        -: 1347:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),BLOCK)   
        -: 1348:      case(4)
        -: 1349:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),BLOCK)   
        -: 1350:      case default 
        1: 1351:        goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1352:      endselect  
        -: 1353:
        -: 1354:!dvm$ region
        -: 1355:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13: 1356:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      301: 1357:         do j=1,AN2
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
    10668: 1358:           do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    10656: 1359:              A3(i,j,k) = A3(i,j,k) + 5
        -: 1360:           enddo                                     
        -: 1361:         enddo
        -: 1362:      enddo
        -: 1363:!dvm$ end region
        -: 1364:
        -: 1365:!dvm$ redistribute A3(MULT_BLOCK(m1),MULT_BLOCK(m2),WGT_BLOCK(WB,9))   
        -: 1366:
        -: 1367:!dvm$ actual (erri)
        -: 1368:
        -: 1369:!dvm$ region
        -: 1370:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min( erri ) )
       13: 1371:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      301: 1372:          do j=1,AN2
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
    10668: 1373:            do k=1,AN3
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
    10368: 1374:                A3(i,j,k) = A3(i,j,k) - 20 
    10656: 1375:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 5)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1376:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 1377:                endif 
        -: 1378:            enddo
        -: 1379:          enddo
        -: 1380:      enddo
        -: 1381:!dvm$ end region
        -: 1382:    
        -: 1383:!dvm$ get_actual (erri)
        -: 1384:
        1: 1385:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1386:          call ansyes(tname)
call    0 returned 100%
        -: 1387:      else
    #####: 1388:          call ansno(tname)
call    0 never executed
        -: 1389:      endif 
        -: 1390:
       1*: 1391: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1392:
        1: 1393:      end subroutine distrmix313
        -: 1394:
        -: 1395:C-----------------------------------------------------distrmix314
        -: 1396:c 314 DISTRIBUTE arrA3[WGT_BLOCK][BLOCK][MULT_BLOCK]        
        -: 1397:c              REDISTRIBUTE [GEN_BLOCK][BLOCK][GEN_BLOCK]   
        -: 1398:c              REDISTRIBUTE [MULT_BLOCK][BLOCK][WGT_BLOCK]  
        -: 1399:c                                                            
function distrmix314_ called 1 returned 100% blocks executed 89%
        1: 1400:      subroutine distrmix314 (psize)
        -: 1401:      integer psize(3)
        -: 1402:
        -: 1403:      integer, parameter :: AN1=24,AN2=15,AN3=12,NL=1000,ER=10000
        -: 1404:      integer :: erri=ER,i,j,k
        -: 1405:
        -: 1406:      integer, parameter :: m1 = 4, m2 = 3, m3 = 2 
        -: 1407:
        -: 1408:      double precision, dimension(10) :: 
        -: 1409:     >  WB=(/3., 2., 2., 4., 2., 3., 2.5, 2.6, 1.2, 2./)     
        -: 1410:
        -: 1411:      integer, dimension(1) :: BSi1=(/24/)         
        -: 1412:      integer, dimension(2) :: BSi2=(/14,10/)        
        -: 1413:      integer, dimension(3) :: BSi3=(/12,8,4/)       
        -: 1414:      integer, dimension(4) :: BSi4=(/6,6,5,7/)      
        -: 1415:
        -: 1416:      integer, dimension(1) :: BSj1=(/15/)     
        -: 1417:      integer, dimension(2) :: BSj2=(/7,8/)     
        -: 1418:      integer, dimension(3) :: BSj3=(/3,4,8/)     
        -: 1419:      integer, dimension(4) :: BSj4=(/1,6,3,5/)                
        -: 1420:
        -: 1421:      integer, dimension(1) :: BSk1=(/12/)     
        -: 1422:      integer, dimension(2) :: BSk2=(/4,8/)     
        -: 1423:      integer, dimension(3) :: BSk3=(/6,2,4/)     
        -: 1424:      integer, dimension(4) :: BSk4=(/2,3,6,1/)     
        -: 1425:
        -: 1426:      integer A3(AN1,AN2,AN3)      ! static
        -: 1427:      character(12), parameter :: tname='distrmix314 '
        -: 1428:
        -: 1429:!dvm$ distribute A3(WGT_BLOCK(WB,10), BLOCK, MULT_BLOCK(m3))   
        -: 1430:!dvm$ dynamic A3
        -: 1431:
        -: 1432:!dvm$ region
        -: 1433:!dvm$ parallel (i,j,k) on A3(i,j,k)
       25: 1434:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      385: 1435:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4704: 1436:             do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     4680: 1437:                A3(i,j,k) = i*NL/10 + j*NL/100 + k        
        -: 1438:             enddo                                     
        -: 1439:          enddo
        -: 1440:      enddo
        -: 1441:!dvm$ end region
        -: 1442:
        -: 1443:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),BLOCK,GEN_BLOCK(BSk))   
        -: 1444:
        2: 1445:      select case(psize(1))
        -: 1446:      case(1)
       1*: 1447:          select case(psize(3))
        -: 1448:          case(1) 
        -: 1449:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk1))    
        -: 1450:          case(2)
        -: 1451:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk2))    
        -: 1452:          case(3)
        -: 1453:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk3))    
        -: 1454:          case(4)
        -: 1455:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk4))    
        -: 1456:          case default 
        1: 1457:              goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1458:          endselect  
        -: 1459:
        -: 1460:      case(2)
    #####: 1461:          select case(psize(3))
        -: 1462:          case(1) 
        -: 1463:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk1))    
        -: 1464:          case(2)
        -: 1465:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk2))    
        -: 1466:          case(3)
        -: 1467:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk3))    
        -: 1468:          case(4)
        -: 1469:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk4))    
        -: 1470:          case default 
    #####: 1471:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1472:          endselect  
        -: 1473:
        -: 1474:      case(3)
    #####: 1475:          select case(psize(3))
        -: 1476:          case(1) 
        -: 1477:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk1))    
        -: 1478:          case(2)
        -: 1479:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk2))    
        -: 1480:          case(3)
        -: 1481:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk3))    
        -: 1482:          case(4)
        -: 1483:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk4))    
        -: 1484:          case default 
    #####: 1485:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1486:          endselect  
        -: 1487:
        -: 1488:      case(4)
    #####: 1489:          select case(psize(3))
        -: 1490:          case(1) 
        -: 1491:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk1))    
        -: 1492:          case(2)
        -: 1493:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk2))    
        -: 1494:          case(3)
        -: 1495:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk3))    
        -: 1496:          case(4)
        -: 1497:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk4))    
        -: 1498:          case default 
    #####: 1499:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1500:          endselect  
        -: 1501:
        -: 1502:      case default 
        1: 1503:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 1504:      endselect  
        -: 1505:
        -: 1506:!dvm$ region
        -: 1507:!dvm$ parallel (i,j,k) on A3(i,j,k)
       25: 1508:       do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      385: 1509:         do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4704: 1510:           do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     4680: 1511:              A3(i,j,k) = i*NL/10 + j*NL/100 + k  + 2
        -: 1512:           enddo                                     
        -: 1513:         enddo
        -: 1514:       enddo
        -: 1515:!dvm$ end region
        -: 1516:
        -: 1517:!dvm$ redistribute A3(MULT_BLOCK(m1),BLOCK,MULT_BLOCK(m3))   
        -: 1518:
        -: 1519:!dvm$ actual (erri)
        -: 1520:
        -: 1521:!dvm$ region
        -: 1522:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min( erri ) )
       25: 1523:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      385: 1524:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4704: 1525:            do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     4680: 1526:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 2)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1527:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 1528:                endif 
        -: 1529:            enddo
        -: 1530:          enddo
        -: 1531:      enddo
        -: 1532:!dvm$ end region
        -: 1533:    
        -: 1534:!dvm$ get_actual (erri)
        -: 1535:
        1: 1536:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1537:          call ansyes(tname)
call    0 returned 100%
        -: 1538:      else
    #####: 1539:          call ansno(tname)
call    0 never executed
        -: 1540:      endif 
        -: 1541:
        -: 1542: 10   continue
        -: 1543:
        1: 1544:      end subroutine distrmix314
        -: 1545:
        -: 1546:C ----------------------------------------------------distrmix315
        -: 1547:c 315  DISTRIBUTE arrA3[MULT_BLOCK][WGT_BLOCK][WGT_BLOCK]        
        -: 1548:c              REDISTRIBUTE [BLOCK][GEN_BLOCK][GEN_BLOCK]        
        -: 1549:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]  
        -: 1550:                                                                
function distrmix315_ called 1 returned 100% blocks executed 86%
        1: 1551:      subroutine distrmix315 (psize)
        -: 1552:      integer psize(3)
        -: 1553:
        -: 1554:      integer, parameter :: AN1=21, AN2=14, AN3=16, NL=1000,ER=10000           
        -: 1555:      integer :: erri=ER,i,j,k
        -: 1556:
        -: 1557:      integer, parameter :: m1 = 3, m2 = 2, m3 = 4 
        -: 1558:
        -: 1559:      double precision, dimension(8) :: 
        -: 1560:     >  WB1=(/2., 4., 3., 1., 2.5, 2.6, 2.2, 2./)     
        -: 1561:      double precision, dimension(10) :: 
        -: 1562:     >  WB2=(/4., 2., 2.5, 4., 2., 3., 3.5, 1.6, 3.2, 2./)     
        -: 1563:
        -: 1564:      integer, dimension(1) :: BSi1=(/21/)         
        -: 1565:      integer, dimension(2) :: BSi2=(/14,7/)        
        -: 1566:      integer, dimension(3) :: BSi3=(/10,8,3/)       
        -: 1567:      integer, dimension(4) :: BSi4=(/6,6,5,4/)      
        -: 1568:
        -: 1569:      integer, dimension(1) :: BSj1=(/14/)     
        -: 1570:      integer, dimension(2) :: BSj2=(/3,11/)     
        -: 1571:      integer, dimension(3) :: BSj3=(/4,3,7/)     
        -: 1572:      integer, dimension(4) :: BSj4=(/2,6,2,4/)                
        -: 1573:
        -: 1574:      integer, dimension(1) :: BSk1=(/16/)     
        -: 1575:      integer, dimension(2) :: BSk2=(/4,12/)     
        -: 1576:      integer, dimension(3) :: BSk3=(/6,3,7/)     !rem
        -: 1577:      integer, dimension(4) :: BSk4=(/2,3,6,5/)     
        -: 1578:
        1: 1579:      integer, allocatable :: A3(:,:,:)
        -: 1580:      character(12), parameter :: tname='distrmix315 '
        -: 1581:
        -: 1582:!dvm$ distribute 
        -: 1583:!dvm$* A3 (MULT_BLOCK(m1), WGT_BLOCK(WB1,8), WGT_BLOCK(WB2,10))   
        -: 1584:!dvm$ dynamic A3
        -: 1585:
       1*: 1586:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -: 1587:
        -: 1588:!dvm$ region
        -: 1589:!dvm$ parallel (i,j,k) on A3(i,j,k)
       22: 1590:      do i=1,AN1
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
      316: 1591:          do j=1,AN2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
     5019: 1592:             do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4998: 1593:                A3(i,j,k) = i*NL/10 + j*NL/100 + k  + 12
        -: 1594:             enddo                                     
        -: 1595:         enddo
        -: 1596:      enddo
        -: 1597:!dvm$ end region
        -: 1598:
        -: 1599:!!!!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj),GEN_BLOCK(BSk))   
        -: 1600:
        2: 1601:      select case(psize(2))
        -: 1602:      case(1)
       1*: 1603:          select case(psize(3))
        -: 1604:          case(1) 
        -: 1605:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk1))    
        -: 1606:          case(2)
        -: 1607:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk2))    
        -: 1608:          case(3)
        -: 1609:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk3))    
        -: 1610:          case(4)
        -: 1611:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk4))    
        -: 1612:          case default 
        1: 1613:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1614:          endselect  
        -: 1615:
        -: 1616:      case(2)
    #####: 1617:          select case(psize(3))
        -: 1618:          case(1) 
        -: 1619:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk1))    
        -: 1620:          case(2)
        -: 1621:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk2))    
        -: 1622:          case(3)
        -: 1623:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk3))    
        -: 1624:          case(4)
        -: 1625:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk4))    
        -: 1626:          case default 
    #####: 1627:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1628:          endselect  
        -: 1629:
        -: 1630:      case(3)
    #####: 1631:          select case(psize(3))
        -: 1632:          case(1) 
        -: 1633:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk1))    
        -: 1634:          case(2)
        -: 1635:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk2))    
        -: 1636:          case(3)
        -: 1637:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk3))    
        -: 1638:          case(4)
        -: 1639:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk4))    
        -: 1640:          case default 
    #####: 1641:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1642:          endselect  
        -: 1643:
        -: 1644:      case(4)
    #####: 1645:          select case(psize(3))
        -: 1646:          case(1) 
        -: 1647:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk1))    
        -: 1648:          case(2)
        -: 1649:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk2))    
        -: 1650:          case(3)
        -: 1651:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk3))    
        -: 1652:          case(4)
        -: 1653:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk4))    
        -: 1654:          case default 
    #####: 1655:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1656:          endselect  
        -: 1657:
        -: 1658:      case default 
        1: 1659:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 1660:      endselect  
        -: 1661:
        -: 1662:!dvm$ region
        -: 1663:!dvm$ parallel (i,j,k) on A3(i,j,k)
       22: 1664:      do i=1,AN1
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
      316: 1665:        do j=1,AN2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
     5019: 1666:          do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4998: 1667:             A3(i,j,k) = A3(i,j,k) + 12
        -: 1668:          enddo                                     
        -: 1669:        enddo
        -: 1670:      enddo
        -: 1671:!dvm$ end region
        -: 1672:
        -: 1673:!dvm$ redistribute A3(MULT_BLOCK(m1),WGT_BLOCK(WB1,6),MULT_BLOCK(m3))   
        -: 1674:
        -: 1675:!dvm$ actual (erri)
        -: 1676:
        -: 1677:!dvm$ region
        -: 1678:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min( erri ) )
       22: 1679:      do i=1,AN1
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
      316: 1680:        do j=1,AN2
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
     5019: 1681:           do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4704: 1682:               A3(i,j,k) = A3(i,j,k) - 20 
     4998: 1683:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 4)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1684:                   erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 1685:                endif 
        -: 1686:            enddo
        -: 1687:         enddo
        -: 1688:      enddo
        -: 1689:!dvm$ end region
        -: 1690:  
        -: 1691:!dvm$ get_actual (erri)
        -: 1692:
        1: 1693:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1694:         call ansyes(tname)
call    0 returned 100%
        -: 1695:      else
    #####: 1696:         call ansno (tname)
call    0 never executed
        -: 1697:      endif 
        -: 1698:
       1*: 1699: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1700:
        1: 1701:      end subroutine distrmix315
        -: 1702:
        -: 1703:C-----------------------------------------------------distrmix316
        -: 1704:c 316  DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][MULT_BLOCK]         
        -: 1705:c              REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][BLOCK]        
        -: 1706:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][MULT_BLOCK]  
        -: 1707:                                                                
function distrmix316_ called 1 returned 100% blocks executed 86%
        1: 1708:      subroutine distrmix316 (psize)
        -: 1709:      integer psize(3)
        -: 1710:
        -: 1711:      integer, parameter :: AN1=33,AN2=44,AN3=55,NL=1000,ER=10000
        -: 1712:      integer :: erri=ER,i,j,k
        -: 1713:
        -: 1714:      integer, parameter :: m1 = 3, m2 = 11, m3 = 5 
        -: 1715:
        -: 1716:      double precision, dimension (7) ::
        -: 1717:     >  WB1=(/3., 2.5, 2., 4., 2.5, 2.0, 3.5/)     
        -: 1718:      double precision, dimension(8) :: 
        -: 1719:     >  WB2=(/4., 3., 2.5, 2., 2., 3., 3.5, 2.6/)     
        -: 1720:
        -: 1721:      integer, dimension(1) :: BSi1=(/33/)            
        -: 1722:      integer, dimension(2) :: BSi2=(/23,10/)         
        -: 1723:      integer, dimension(3) :: BSi3=(/12,15,6/)      
        -: 1724:      integer, dimension(4) :: BSi4=(/6,13,11,3/)    !rem 
        -: 1725:
        -: 1726:      integer, dimension(1) :: BSj1=(/44/)     
        -: 1727:      integer, dimension(2) :: BSj2=(/14,30/)     
        -: 1728:      integer, dimension(3) :: BSj3=(/11,21,12/)     
        -: 1729:      integer, dimension(4) :: BSj4=(/6,14,10,14/)     
        -: 1730:
        -: 1731:      integer, dimension(1) :: BSk1=(/55/)     
        -: 1732:      integer, dimension(2) :: BSk2=(/28,27/)     
        -: 1733:      integer, dimension(3) :: BSk3=(/12,18,25/)     
        -: 1734:      integer, dimension(4) :: BSk4=(/10,18,15,12/)     
        -: 1735:
        1: 1736:      integer, allocatable :: A3(:,:,:)
        -: 1737:      character(12), parameter :: tname='distrmix316 '
        -: 1738:
        -: 1739:!dvm$ distribute
        -: 1740:!dvm$* A3(WGT_BLOCK(WB1,7), WGT_BLOCK(WB2,8), MULT_BLOCK(m3))   
        -: 1741:!dvm$ dynamic A3
        -: 1742:
       1*: 1743:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        -: 1744:
        -: 1745:!dvm$ region
        -: 1746:!dvm$ parallel (i,j,k) on A3(i,j,k)
       34: 1747:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1486: 1748:         do j=1,AN2
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
    81345: 1749:             do k=1,AN3
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
    81312: 1750:                A3(i,j,k) = i*NL/10 + j*NL/100 + k  + 2       
        -: 1751:             enddo                                     
        -: 1752:          enddo
        -: 1753:      enddo
        -: 1754:!dvm$ end region
        -: 1755:
        -: 1756:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),GEN_BLOCK(BSj),BLOCK)   
        -: 1757:
        2: 1758:      select case(psize(1))
        -: 1759:      case(1)
       1*: 1760:          select case(psize(2))
        -: 1761:          case(1) 
        -: 1762:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj1),BLOCK)    
        -: 1763:          case(2)
        -: 1764:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj2),BLOCK)    
        -: 1765:          case(3)
        -: 1766:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj3),BLOCK)    
        -: 1767:          case(4)
        -: 1768:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj4),BLOCK)    
        -: 1769:          case default 
        1: 1770:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1771:          endselect  
        -: 1772:
        -: 1773:      case(2)
    #####: 1774:          select case(psize(2))
        -: 1775:          case(1) 
        -: 1776:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj1),BLOCK)    
        -: 1777:          case(2)
        -: 1778:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj2),BLOCK)    
        -: 1779:          case(3)
        -: 1780:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj3),BLOCK)    
        -: 1781:          case(4)
        -: 1782:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj4),BLOCK)    
        -: 1783:          case default 
    #####: 1784:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1785:          endselect  
        -: 1786:
        -: 1787:      case(3)
    #####: 1788:          select case(psize(2))
        -: 1789:          case(1) 
        -: 1790:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj1),BLOCK)    
        -: 1791:          case(2)
        -: 1792:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj2),BLOCK)    
        -: 1793:          case(3)
        -: 1794:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj3),BLOCK)    
        -: 1795:          case(4)
        -: 1796:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj4),BLOCK)    
        -: 1797:          case default 
    #####: 1798:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1799:          endselect  
        -: 1800:
        -: 1801:      case(4)
    #####: 1802:          select case(psize(2))
        -: 1803:          case(1) 
        -: 1804:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj1),BLOCK)    
        -: 1805:          case(2)
        -: 1806:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj2),BLOCK)    
        -: 1807:          case(3)
        -: 1808:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj3),BLOCK)    
        -: 1809:          case(4)
        -: 1810:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj4),BLOCK)    
        -: 1811:          case default 
    #####: 1812:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1813:          endselect  
        -: 1814:
        -: 1815:      case default 
        1: 1816:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 1817:      endselect  
        -: 1818:
        -: 1819:!dvm$ region
        -: 1820:!dvm$ parallel (i,j,k) on A3(i,j,k)
       34: 1821:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1486: 1822:         do j=1,AN2
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
    81345: 1823:            do k=1,AN3
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
    81312: 1824:                A3(i,j,k) = A3(i,j,k) + 5
        -: 1825:            enddo                                     
        -: 1826:         enddo
        -: 1827:      enddo
        -: 1828:!dvm$ end region
        -: 1829:
        -: 1830:!dvm$ redistribute A3(MULT_BLOCK(m1),WGT_BLOCK(WB1,7),MULT_BLOCK(m2))   
        -: 1831:
        -: 1832:!dvm$ actual (erri)
        -: 1833:
        -: 1834:!dvm$ region
        -: 1835:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min( erri ) )
       34: 1836:      do i=1,AN1
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
     1486: 1837:         do j=1,AN2
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
    81345: 1838:            do k=1,AN3
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
    79860: 1839:               A3(i,j,k) = A3(i,j,k) - 2 
    81312: 1840:               if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 5)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 1841:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 1842:               endif 
        -: 1843:            enddo
        -: 1844:          enddo
        -: 1845:      enddo
        -: 1846:!dvm$ end region
        -: 1847:  
        -: 1848:!dvm$ get_actual (erri)
        -: 1849:
        1: 1850:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1851:          call ansyes(tname)
call    0 returned 100%
        -: 1852:      else
    #####: 1853:          call ansno(tname)
call    0 never executed
        -: 1854:      endif 
        -: 1855:
       1*: 1856: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1857:
        1: 1858:      end subroutine distrmix316
        -: 1859:
        -: 1860:C-----------------------------------------------------distrmix317
        -: 1861:c 317  DISTRIBUTE arrA3[GEN_BLOCK][*][GEN_BLOCK]            
        -: 1862:c              REDISTRIBUTE [MULT_BLOCK][WGT_BLOCK][*]     
        -: 1863:c              REDISTRIBUTE [*][GEN_BLOCK][BLOCK]                                                         range 3 4 1
        -: 1864:                                                          
function distrmix317_ called 1 returned 100% blocks executed 86%
        1: 1865:      subroutine distrmix317 (psize)
        -: 1866:      integer psize(3)
        -: 1867:
        -: 1868:      integer, parameter :: AN1=12,AN2=16,AN3=12,NL=1000,ER=100000
        -: 1869:      integer :: erri=ER,i,j,k
        -: 1870:
        -: 1871:      integer, parameter :: m1 = 2, m2 = 4, m3 = 3 
        -: 1872:
        -: 1873:      double precision, dimension(8) :: 
        -: 1874:     >  WB=(/2., 1., 2.5, 3., 4., 3., 3.5, 4./)     
        -: 1875:
        -: 1876:      integer, dimension(1) :: BSi1=(/12/)          
        -: 1877:      integer, dimension(2) :: BSi2=(/4,8/)         
        -: 1878:      integer, dimension(3) :: BSi3=(/2,7,3/)     
        -: 1879:      integer, dimension(4) :: BSi4=(/2,3,4,3/)     
        -: 1880:
        -: 1881:      integer, dimension(1) :: BSj1=(/16/)     
        -: 1882:      integer, dimension(2) :: BSj2=(/11,5/)     
        -: 1883:      integer, dimension(3) :: BSj3=(/8,2,6/)     
        -: 1884:      integer, dimension(4) :: BSj4=(/1,3,4,8/)     !rem
        -: 1885:
        -: 1886:      integer, dimension(1) :: BSk1=(/12/)     
        -: 1887:      integer, dimension(2) :: BSk2=(/2,10/)     
        -: 1888:      integer, dimension(3) :: BSk3=(/1,4,7/)     
        -: 1889:      integer, dimension(4) :: BSk4=(/2,4,3,3/)     
        -: 1890:
        1: 1891:      integer, allocatable ::  A3(:,:,:)
        -: 1892:      character(12), parameter :: tname='distrmix317 '
        -: 1893:               
        -: 1894:!dvm$ distribute  :: A3
        -: 1895:!dvm$ dynamic A3
        -: 1896:
       1*: 1897:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 1898:
        -: 1899:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),*,GEN_BLOCK(BSk))   
        2: 1900:      select case(psize(1))
        -: 1901:      case(1)
       1*: 1902:          select case(psize(2)) ! it's is true - psize(2)
        -: 1903:          case(1) 
        -: 1904:!dvm$ redistribute A3(GEN_BLOCK(BSi1),*,GEN_BLOCK(BSk1))    
        -: 1905:          case(2)
        -: 1906:!dvm$ redistribute A3(GEN_BLOCK(BSi1),*,GEN_BLOCK(BSk2))    
        -: 1907:          case(3)
        -: 1908:!dvm$ redistribute A3(GEN_BLOCK(BSi1),*,GEN_BLOCK(BSk3))    
        -: 1909:          case(4)
        -: 1910:!dvm$ redistribute A3(GEN_BLOCK(BSi1),*,GEN_BLOCK(BSk4))    
        -: 1911:          case default 
        1: 1912:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1913:          endselect  
        -: 1914:
        -: 1915:      case(2)
    #####: 1916:          select case(psize(2)) ! it's is true - psize(2)
        -: 1917:          case(1) 
        -: 1918:!dvm$ redistribute A3(GEN_BLOCK(BSi2),*,GEN_BLOCK(BSk1))    
        -: 1919:          case(2)
        -: 1920:!dvm$ redistribute A3(GEN_BLOCK(BSi2),*,GEN_BLOCK(BSk2))    
        -: 1921:          case(3)
        -: 1922:!dvm$ redistribute A3(GEN_BLOCK(BSi2),*,GEN_BLOCK(BSk3))    
        -: 1923:          case(4)
        -: 1924:!dvm$ redistribute A3(GEN_BLOCK(BSi2),*,GEN_BLOCK(BSk4))    
        -: 1925:          case default 
    #####: 1926:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1927:          endselect  
        -: 1928:
        -: 1929:      case(3)
    #####: 1930:          select case(psize(2)) ! it's is true - psize(2)
        -: 1931:          case(1) 
        -: 1932:!dvm$ redistribute A3(GEN_BLOCK(BSi3),*,GEN_BLOCK(BSk1))    
        -: 1933:          case(2)
        -: 1934:!dvm$ redistribute A3(GEN_BLOCK(BSi3),*,GEN_BLOCK(BSk2))    
        -: 1935:          case(3)
        -: 1936:!dvm$ redistribute A3(GEN_BLOCK(BSi3),*,GEN_BLOCK(BSk3))    
        -: 1937:          case(4)
        -: 1938:!dvm$ redistribute A3(GEN_BLOCK(BSi3),*,GEN_BLOCK(BSk4))    
        -: 1939:          case default 
    #####: 1940:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1941:          endselect  
        -: 1942:
        -: 1943:      case(4)
    #####: 1944:          select case(psize(2)) ! it's is true - psize(2)
        -: 1945:          case(1) 
        -: 1946:!dvm$ redistribute A3(GEN_BLOCK(BSi4),*,GEN_BLOCK(BSk1))    
        -: 1947:          case(2)
        -: 1948:!dvm$ redistribute A3(GEN_BLOCK(BSi4),*,GEN_BLOCK(BSk2))    
        -: 1949:          case(3)
        -: 1950:!dvm$ redistribute A3(GEN_BLOCK(BSi4),*,GEN_BLOCK(BSk3))    
        -: 1951:          case(4)
        -: 1952:!dvm$ redistribute A3(GEN_BLOCK(BSi4),*,GEN_BLOCK(BSk4))    
        -: 1953:          case default 
    #####: 1954:             goto 10
branch  0 never executed
branch  1 never executed
        -: 1955:          endselect  
        -: 1956:
        -: 1957:      case default 
        1: 1958:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 1959:      endselect  
        -: 1960:
        -: 1961:!dvm$ region
        -: 1962:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13: 1963:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      205: 1964:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     2508: 1965:             do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     2496: 1966:                  A3(i,j,k) = i*NL/10+j*NL/100+k
        -: 1967:             enddo
        -: 1968:          enddo
        -: 1969:      enddo
        -: 1970:!dvm$ end region
        -: 1971:
        -: 1972:!dvm$ redistribute A3(MULT_BLOCK(m1),WGT_BLOCK(WB,8),*)   
        -: 1973:
        -: 1974:!dvm$ region
        -: 1975:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13: 1976:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      205: 1977:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     2508: 1978:             do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     2496: 1979:                 A3(i,j,k) = A3(i,j,k) * 2
        -: 1980:             enddo
        -: 1981:          enddo
        -: 1982:      enddo
        -: 1983:!dvm$ end region
        -: 1984:
        -: 1985:!!!!dvm$*  redistribute A3(*,GEN_BLOCK(BSj),BLOCK)   
        -: 1986:
        -: 1987:      select case (psize(1))                        !rem
        -: 1988:      case(1)
        -: 1989:!dvm$ redistribute A3(*,GEN_BLOCK(BSj1),BLOCK)    
        -: 1990:      case(2)
        -: 1991:!dvm$ redistribute A3(*,GEN_BLOCK(BSj2),BLOCK) 
        -: 1992:      case(3)
        -: 1993:!dvm$ redistribute A3(*,GEN_BLOCK(BSj3),BLOCK) 
        -: 1994:      case(4)
        -: 1995:!dvm$ redistribute A3(*,GEN_BLOCK(BSj4),BLOCK)  
        -: 1996:      case default
        -: 1997:         goto 10
        -: 1998:      endselect
        -: 1999:
        -: 2000:!dvm$ actual (erri)
        -: 2001:
        -: 2002:!dvm$ region
        -: 2003:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min(erri) )
       13: 2004:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      205: 2005:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     2508: 2006:            do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     2304: 2007:              A3(i,j,k) = A3(i,j,k) / 2
     2496: 2008:              if (A3(i,j,k) /= i*NL/10+j*NL/100+k) then
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 2009:                  erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 2010:              endif 
        -: 2011:             enddo
        -: 2012:           enddo
        -: 2013:       enddo
        -: 2014:!dvm$ end region
        -: 2015: 
        -: 2016:!dvm$ get_actual (erri)
        -: 2017:
        1: 2018:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2019:          call ansyes(tname)
call    0 returned 100%
        -: 2020:      else
    #####: 2021:          call ansno(tname)
call    0 never executed
        -: 2022:      endif 
        -: 2023:
       1*: 2024: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2025:
        1: 2026:      end subroutine distrmix317 
        -: 2027:
        -: 2028:C ----------------------------------------------------distrmix318
        -: 2029:c 318  DISTRIBUTE arrA3[GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]          range 1 1 1 
        -: 2030:c                REDISTRIBUTE [WGT_BLOCK][WGT_BLOCK][WGT_BLOCK]   range 1 4 3
        -: 2031:c                REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]   range 2 3 2
        -: 2032:c                                                                 range 3 1 4
        -: 2033:c                                                                 range 4 2 2
function distrmix318_ called 1 returned 100% blocks executed 91%
        1: 2034:      subroutine distrmix318 (psize)
        -: 2035:      integer psize(3)
        -: 2036:
        -: 2037:      integer, parameter :: AN1=8,AN2=8,AN3=8,NL=1000,ER=10000
        -: 2038:      integer :: erri=ER,i,j,k
        -: 2039:
        -: 2040:      double precision, dimension(7) :: 
        -: 2041:     >             WB1=(/2.0, 1.2, 2.5, 1.4, 2.5, 1.3, 1./)     
        -: 2042:      double precision, dimension(5) ::
        -: 2043:     >             WB2=(/2., 1.3, 2., 1.0, 1.7/)     
        -: 2044:      double precision, dimension(6) ::
        -: 2045:     >             WB3=(/2., 3., 1.3, 2., 1.0, 1.7/)     
        -: 2046:
        -: 2047:      integer, dimension(1) :: BSi111=(/8/)        !range 1 1 1  
        -: 2048:      integer, dimension(1) :: BSj111=(/8/)     
        -: 2049:      integer, dimension(1) :: BSk111=(/8/)     
        -: 2050:
        -: 2051:      integer, dimension(1) :: BSi11=(/8/)         !range 1 4 3 
        -: 2052:      integer, dimension(1) :: BSi12=(/8/)           
        -: 2053:      integer, dimension(4) :: BSj11=(/3,2,2,1/)     
        -: 2054:      integer, dimension(4) :: BSj12=(/4,2,1,1/)     
        -: 2055:      integer, dimension(3) :: BSk11=(/4,3,1/)     
        -: 2056:      integer, dimension(3) :: BSk12=(/2,4,2/)     
        -: 2057:
        -: 2058:      integer, dimension(2) :: BSi21=(/6,2/)       !range 2 3 2  
        -: 2059:      integer, dimension(2) :: BSi22=(/4,4/)         
        -: 2060:      integer, dimension(3) :: BSj21=(/3,2,3/)     
        -: 2061:      integer, dimension(3) :: BSj22=(/3,1,4/)     
        -: 2062:      integer, dimension(2) :: BSk21=(/1,7/)     
        -: 2063:      integer, dimension(2) :: BSk22=(/2,6/)     
        -: 2064:
        -: 2065:      integer, dimension(3) :: BSi31=(/3,2,3/)     !range 3 1 4  
        -: 2066:      integer, dimension(3) :: BSi32=(/4,2,2/)     
        -: 2067:      integer, dimension(1) :: BSj31=(/8/)     
        -: 2068:      integer, dimension(1) :: BSj32=(/8/)     
        -: 2069:      integer, dimension(4) :: BSk31=(/1,3,2,2/)     
        -: 2070:      integer, dimension(4) :: BSk32=(/1,1,4,2/)     
        -: 2071:
        -: 2072:      integer, dimension(4) :: BSi41=(/3,2,1,2/)   !range 4 2 2  
        -: 2073:      integer, dimension(4) :: BSi42=(/5,1,1,1/)   
        -: 2074:      integer, dimension(2) :: BSj41=(/5,3/)     
        -: 2075:      integer, dimension(2) :: BSj42=(/6,2/)     
        -: 2076:      integer, dimension(2) :: BSk41=(/2,6/)     
        -: 2077:      integer, dimension(2) :: BSk42=(/1,7/)     
        -: 2078:
        1: 2079:      integer, allocatable :: A3(:,:,:)
        -: 2080:      character(12), parameter :: tname='distrmix318 '
        -: 2081:
        -: 2082:!dvm$ distribute :: A3   
        -: 2083:!dvm$ dynamic A3
        -: 2084:
       1*: 2085:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2086:
        -: 2087:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj1),GEN_BLOCK(BSk1))   
        -: 2088:
        1: 2089:      select case(psize(1))
        -: 2090:      case(1) 
        -: 2091:        if  (psize(2) == 1 .and. psize(3) == 1) then
        -: 2092:!dvm$ redistribute
        -: 2093:!dvm$*    A3(GEN_BLOCK(BSi111),GEN_BLOCK(BSj111),GEN_BLOCK(BSk111))   
        -: 2094:        else
        -: 2095:!dvm$ redistribute
        -: 2096:!dvm$*    A3(GEN_BLOCK(BSi11),GEN_BLOCK(BSj11),GEN_BLOCK(BSk11))   
        -: 2097:        endif
        -: 2098:      case(2)
        -: 2099:!dvm$ redistribute
        -: 2100:!dvm$*    A3(GEN_BLOCK(BSi21),GEN_BLOCK(BSj21),GEN_BLOCK(BSk21))   
        -: 2101:      case(3)
        -: 2102:!dvm$ redistribute
        -: 2103:!dvm$*    A3(GEN_BLOCK(BSi31),GEN_BLOCK(BSj31),GEN_BLOCK(BSk31))   
        -: 2104:      case(4)
        -: 2105:!dvm$ redistribute
        -: 2106:!dvm$*    A3(GEN_BLOCK(BSi41),GEN_BLOCK(BSj41),GEN_BLOCK(BSk41))   
        -: 2107:      case default 
        1: 2108:         goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2109:      endselect  
        -: 2110:
        -: 2111:!dvm$ region
        -: 2112:!dvm$ parallel (i,j,k) on A3(i,j,k)
        9: 2113:      do i=1,AN1
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2114:          do j=1,AN2
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2115:             do k=1,AN3
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2116:                A3(i,j,k) = i*NL/10 + j*NL/100 + k    
        -: 2117:             enddo
        -: 2118:          enddo
        -: 2119:      enddo
        -: 2120:!dvm$ end region
        -: 2121:
        -: 2122:!dvm$ redistribute
        -: 2123:!dvm$*    A3(WGT_BLOCK(WB1,7),WGT_BLOCK(WB2,5),WGT_BLOCK(WB3,6))   
        -: 2124:
        -: 2125:!dvm$ region
        -: 2126:!dvm$ parallel (i,j,k) on A3(i,j,k)
        9: 2127:      do i=1,AN1
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2128:          do j=1,AN2
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2129:             do k=1,AN3
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2130:                A3(i,j,k) = A3(i,j,k) + 1   
        -: 2131:             enddo
        -: 2132:          enddo
        -: 2133:      enddo
        -: 2134:!dvm$ end region
        -: 2135:
        -: 2136:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj2),GEN_BLOCK(BSk2))   
        -: 2137:
        -: 2138:      select case(psize(1))
        -: 2139:      case(1) 
        -: 2140:        if  (psize(2) == 1 .and. psize(3) == 1) then
        -: 2141:!dvm$ redistribute
        -: 2142:!dvm$*    A3(GEN_BLOCK(BSi111),GEN_BLOCK(BSj111),GEN_BLOCK(BSk111))   
        -: 2143:        else
        -: 2144:!dvm$ redistribute 
        -: 2145:!dvm$*    A3(GEN_BLOCK(BSi12),GEN_BLOCK(BSj12),GEN_BLOCK(BSk12))   
        -: 2146:        endif 
        -: 2147:      case(2)
        -: 2148:!dvm$ redistribute
        -: 2149:!dvm$*    A3(GEN_BLOCK(BSi22),GEN_BLOCK(BSj22),GEN_BLOCK(BSk22))   
        -: 2150:      case(3)
        -: 2151:!dvm$ redistribute
        -: 2152:!dvm$*    A3(GEN_BLOCK(BSi32),GEN_BLOCK(BSj32),GEN_BLOCK(BSk32))   
        -: 2153:      case(4)
        -: 2154:!dvm$ redistribute
        -: 2155:!dvm$*    A3(GEN_BLOCK(BSi42),GEN_BLOCK(BSj42),GEN_BLOCK(BSk42))   
        -: 2156:      case default 
        -: 2157:         goto 10
        -: 2158:      endselect  
        -: 2159:
        -: 2160:!dvm$ actual (erri)
        -: 2161:
        -: 2162:!dvm$ region
        -: 2163:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction(min(erri))
        9: 2164:      do i=1,AN1
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2165:          do j=1,AN2
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2166:            do k=1,AN3
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2167:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 1)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 2168:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 2169:                endif 
        -: 2170:            enddo
        -: 2171:          enddo
        -: 2172:      enddo
        -: 2173:!dvm$ end region
        -: 2174:     
        -: 2175:!dvm$ get_actual (erri)
        -: 2176:
        1: 2177:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2178:          call ansyes(tname)
call    0 returned 100%
        -: 2179:      else
    #####: 2180:          call ansno(tname)
call    0 never executed
        -: 2181:      endif 
        -: 2182:
       1*: 2183: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2184:
        1: 2185:      end subroutine distrmix318
        -: 2186:
        -: 2187:C ----------------------------------------------------distrmix319
        -: 2188:c  
        -: 2189:c 319 DISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][WGT_BLOCK]           range 1 1 1 
        -: 2190:c             REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][GEN_BLOCK]      range 1 2 1
        -: 2191:c             REDISTRIBUTE arrA3[WGT_BLOCK][WGT_BLOCK][WGT_BLOCK] range 2 2 2
        -: 2192:c                                                                 range 3 2 2
        -: 2193:c                                                                 range 4 4 1
function distrmix319_ called 0 returned 0% blocks executed 0%
    #####: 2194:      subroutine distrmix319 (psize)
        -: 2195:      integer psize(3)
        -: 2196:
        -: 2197:      integer, parameter :: AN1=12,AN2=6,AN3=10,NL=1000,ER=10000
        -: 2198:      integer :: erri=ER,i,j,k
        -: 2199:
        -: 2200:      double precision, dimension(6) :: 
        -: 2201:     >             WB1=(/2.0, 1.2, 2., 2.4, 2.3, 1.6/)     
        -: 2202:      double precision, dimension(5) ::
        -: 2203:     >             WB2=(/2.4, 1.8, 2., 1.0, 1.7/)     
        -: 2204:      double precision, dimension(8) ::
        -: 2205:     >             WB3=(/2., 3., 1.3, 2., 1.0, 1.7, 3., 4./)     
        -: 2206:
        -: 2207:      integer, dimension(1) :: BSi111=(/8/)       !range 1 1 1  
        -: 2208:      integer, dimension(1) :: BSj111=(/8/)     
        -: 2209:      integer, dimension(1) :: BSk111=(/8/)     
        -: 2210:
        -: 2211:      integer, dimension(1) :: BSi1=(/12/)        !range 1 2 1  
        -: 2212:      integer, dimension(2) :: BSj1=(/5,1/)     
        -: 2213:      integer, dimension(1) :: BSk1=(/10/)     !rem
        -: 2214:
        -: 2215:      integer, dimension(2) :: BSi2=(/6,6/)       !range 2 2 2  
        -: 2216:      integer, dimension(2) :: BSj2=(/4,2/)     
        -: 2217:      integer, dimension(2) :: BSk2=(/3,7/)     
        -: 2218:
        -: 2219:      integer, dimension(3) :: BSi3=(/5,2,5/)     !range 3 2 2  
        -: 2220:      integer, dimension(2) :: BSj3=(/2,4/)     
        -: 2221:      integer, dimension(2) :: BSk3=(/2,8/)     
        -: 2222:
        -: 2223:      integer, dimension(4) :: BSi4=(/4,2,4,2/)   !range 4 4 1 !rem 
        -: 2224:      integer, dimension(4) :: BSj4=(/1,1,2,2/)     
        -: 2225:      integer, dimension(1) :: BSk4=(/10/)     
        -: 2226:
    #####: 2227:      integer, allocatable :: A3(:,:,:)
        -: 2228:      character(12), parameter :: tname='distrmix319 '
        -: 2229:
        -: 2230:!dvm$ distribute :: A3  
        -: 2231:!dvm$ dynamic A3
        -: 2232:
    #####: 2233:      allocate (A3(AN1,AN2,AN3))
branch  0 never executed (fallthrough)
branch  1 never executed
call    2 never executed
        -: 2234:
        -: 2235:!dvm$ redistribute
        -: 2236:!dvm$*    A3(WGT_BLOCK(WB1,6),WGT_BLOCK(WB2,5),WGT_BLOCK(WB3,8))   
        -: 2237:
    #####: 2238:       A3 = 10
branch  0 never executed (fallthrough)
branch  1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
        -: 2239:
        -: 2240:!dvm$ actual (A3)
        -: 2241:
        -: 2242:!dvm$ region
        -: 2243:!dvm$ parallel (i,j,k) on A3(i,j,k)
    #####: 2244:      do i=1,AN1
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2245:          do j=1,AN2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2246:             do k=1,AN3
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2247:                A3(i,j,k) = A3(i,j,k)+ i*NL/10 + j*NL/100 + k    
        -: 2248:             enddo
        -: 2249:          enddo
        -: 2250:      enddo
        -: 2251:!dvm$ end region
        -: 2252:
        -: 2253:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),GEN_BLOCK(BSj),GEN_BLOCK(BSk))   
        -: 2254:
    #####: 2255:      select case(psize(1))
        -: 2256:      case(1) 
        -: 2257:        if  (psize(2) == 1 .and. psize(3) == 1) then
        -: 2258:!dvm$ redistribute
        -: 2259:!dvm$*    A3(GEN_BLOCK(BSi111),GEN_BLOCK(BSj111),GEN_BLOCK(BSk111))   
        -: 2260:        else
        -: 2261:!dvm$ redistribute 
        -: 2262:!dvm$*    A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj1),GEN_BLOCK(BSk1))   
        -: 2263:        endif
        -: 2264:      case(2)
        -: 2265:!dvm$ redistribute
        -: 2266:!dvm$*    A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj2),GEN_BLOCK(BSk2))   
        -: 2267:      case(3)
        -: 2268:!dvm$ redistribute
        -: 2269:!dvm$*    A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj3),GEN_BLOCK(BSk3))   
        -: 2270:      case(4)
        -: 2271:!dvm$ redistribute
        -: 2272:!dvm$*    A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj4),GEN_BLOCK(BSk4))   
        -: 2273:      case default 
    #####: 2274:         goto 10
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2275:      endselect  
        -: 2276:
        -: 2277:!dvm$ region
        -: 2278:!dvm$ parallel (i,j,k) on A3(i,j,k)
    #####: 2279:      do i=1,AN1
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2280:          do j=1,AN2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2281:             do k=1,AN3
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2282:                A3(i,j,k) = A3(i,j,k) + 2   
        -: 2283:             enddo
        -: 2284:          enddo
        -: 2285:      enddo
        -: 2286:!dvm$ end region
        -: 2287:
        -: 2288:!dvm$ redistribute
        -: 2289:!dvm$*    A3(WGT_BLOCK(WB2,5),WGT_BLOCK(WB3,6),WGT_BLOCK(WB1,6))   
        -: 2290:
        -: 2291:!dvm$ actual (erri)
        -: 2292:
        -: 2293:!dvm$ region
        -: 2294:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction( min( erri ) )
    #####: 2295:      do i=1,AN1
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2296:          do j=1,AN2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2297:            do k=1,AN3
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2298:                A3(i,j,k) = A3(i,j,k) - 12   
    #####: 2299:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k)) then     
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2300:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 2301:                endif 
        -: 2302:            enddo
        -: 2303:          enddo
        -: 2304:      enddo
        -: 2305:!dvm$ end region
        -: 2306:     
        -: 2307:!dvm$ get_actual (erri)
        -: 2308:
    #####: 2309:      if (erri == ER) then     
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2310:          call ansyes(tname)
call    0 never executed
        -: 2311:      else
    #####: 2312:          call ansno(tname)
call    0 never executed
        -: 2313:      endif 
        -: 2314:
    #####: 2315: 10   deallocate (A3)
branch  0 never executed (fallthrough)
branch  1 never executed
call    2 never executed
        -: 2316:
    #####: 2317:      end subroutine distrmix319
        -: 2318:
        -: 2319:C ----------------------------------------------------distrmix320
        -: 2320:c 320  DISTRIBUTE arrA3[BLOCK][GEN_BLOCK][GEN_BLOCK]  
        -: 2321:c           REDISTRIBUTE arrB3[WGT_BLOCK][BLOCK][WGT_BLOCK]   
        -: 2322:
function distrmix320_ called 1 returned 100% blocks executed 85%
        1: 2323:      subroutine distrmix320 (psize)
        -: 2324:      integer psize(3)
        -: 2325:
        -: 2326:      integer, parameter :: AN1=5,AN2=7,AN3=6,NL=1000,ER=10000
        -: 2327:      integer :: erri=ER,i,j,k
        -: 2328:
        -: 2329:      double precision, dimension(7) :: 
        -: 2330:     >             WB1=(/2.0, 2.2, 3., 2.4, 2.3, 1.6, 0.5/)     
        -: 2331:      double precision, dimension(6) ::
        -: 2332:     >             WB2=(/2.4, 1.8, 3., 2.0, 1.7, 1./)     
        -: 2333:      double precision, dimension(8) ::
        -: 2334:     >             WB3=(/1., 3.5, 2.3, 2., 1.5, 1.7, 3., 2./)     
        -: 2335:
        -: 2336:      integer, dimension(1) :: BSi1=(/5/)         
        -: 2337:      integer, dimension(2) :: BSi2=(/1,4/)        
        -: 2338:      integer, dimension(3) :: BSi3=(/1,2,2/)       
        -: 2339:      integer, dimension(4) :: BSi4=(/2,1,1,1/)      
        -: 2340:
        -: 2341:      integer, dimension(1) :: BSj1=(/7/)     
        -: 2342:      integer, dimension(2) :: BSj2=(/3,4/)     
        -: 2343:      integer, dimension(3) :: BSj3=(/2,4,1/)     
        -: 2344:      integer, dimension(4) :: BSj4=(/1,2,1,3/)                
        -: 2345:
        -: 2346:      integer, dimension(1) :: BSk1=(/6/)     
        -: 2347:      integer, dimension(2) :: BSk2=(/3,3/)     
        -: 2348:      integer, dimension(3) :: BSk3=(/2,3,1/)     
        -: 2349:      integer, dimension(4) :: BSk4=(/3,2,0,1/)     
        -: 2350:
        -: 2351:
        1: 2352:      integer, allocatable :: A3(:,:,:)
        -: 2353:      character(12), parameter :: tname='distrmix320 '
        -: 2354:
        -: 2355:!dvm$ distribute  :: A3
        -: 2356:!dvm$ dynamic A3
        -: 2357:
       1*: 2358:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2359:
        -: 2360:!!!!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj),GEN_BLOCK(BSk))   
        -: 2361:
        2: 2362:      select case(psize(2))
        -: 2363:      case(1)
       1*: 2364:          select case(psize(3))
        -: 2365:          case(1) 
        -: 2366:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk1))    
        -: 2367:          case(2)
        -: 2368:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk2))    
        -: 2369:          case(3)
        -: 2370:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk3))    
        -: 2371:          case(4)
        -: 2372:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj1),GEN_BLOCK(BSk4))    
        -: 2373:          case default 
        1: 2374:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2375:          endselect  
        -: 2376:
        -: 2377:      case(2)
    #####: 2378:          select case(psize(3))
        -: 2379:          case(1) 
        -: 2380:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk1))    
        -: 2381:          case(2)
        -: 2382:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk2))    
        -: 2383:          case(3)
        -: 2384:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk3))    
        -: 2385:          case(4)
        -: 2386:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj2),GEN_BLOCK(BSk4))    
        -: 2387:          case default 
    #####: 2388:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2389:          endselect  
        -: 2390:
        -: 2391:      case(3)
    #####: 2392:          select case(psize(3))
        -: 2393:          case(1) 
        -: 2394:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk1))    
        -: 2395:          case(2)
        -: 2396:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk2))    
        -: 2397:          case(3)
        -: 2398:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk3))    
        -: 2399:          case(4)
        -: 2400:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj3),GEN_BLOCK(BSk4))    
        -: 2401:          case default 
    #####: 2402:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2403:          endselect  
        -: 2404:
        -: 2405:      case(4)
    #####: 2406:          select case(psize(3))
        -: 2407:          case(1) 
        -: 2408:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk1))    
        -: 2409:          case(2)
        -: 2410:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk2))    
        -: 2411:          case(3)
        -: 2412:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk3))    
        -: 2413:          case(4)
        -: 2414:!dvm$ redistribute A3(BLOCK,GEN_BLOCK(BSj4),GEN_BLOCK(BSk4))   
        -: 2415:          case default 
    #####: 2416:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2417:          endselect  
        -: 2418:
        -: 2419:      case default 
        1: 2420:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 2421:      endselect  
        -: 2422:
      259: 2423:      A3 = 5
branch  0 taken 14% (fallthrough)
branch  1 taken 86%
branch  2 taken 88% (fallthrough)
branch  3 taken 12%
branch  4 taken 83% (fallthrough)
branch  5 taken 17%
        -: 2424:
        -: 2425:!dvm$ actual (A3)
        -: 2426:
        -: 2427:!dvm$ region
        -: 2428:!dvm$ parallel (i,j,k) on A3(i,j,k)
        6: 2429:      do i=1,AN1
branch  0 taken 83% (fallthrough)
branch  1 taken 17%
       41: 2430:          do j=1,AN2
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
      250: 2431:             do k=1,AN3
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
      245: 2432:                A3(i,j,k) = A3(i,j,k) + i*NL/10 + j*NL/100 + k    
        -: 2433:             enddo
        -: 2434:          enddo
        -: 2435:      enddo
        -: 2436:!dvm$ end region
        -: 2437:
        -: 2438:!dvm$ redistribute
        -: 2439:!dvm$*    A3(WGT_BLOCK(WB1,7),BLOCK,WGT_BLOCK(WB3,8))   
        -: 2440:
        -: 2441:!dvm$ actual (erri)
        -: 2442:
        -: 2443:!dvm$ region
        -: 2444:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction(min(erri))
        6: 2445:      do i=1,AN1
branch  0 taken 83% (fallthrough)
branch  1 taken 17%
       41: 2446:          do j=1,AN2
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
      250: 2447:            do k=1,AN3
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
      210: 2448:                A3(i,j,k) = A3(i,j,k) - 5   
      245: 2449:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 2450:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 2451:                endif 
        -: 2452:            enddo
        -: 2453:          enddo
        -: 2454:      enddo
        -: 2455:!dvm$ end region
        -: 2456:     
        -: 2457:!dvm$ get_actual (erri)
        -: 2458:
        1: 2459:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2460:          call ansyes(tname)
call    0 returned 100%
        -: 2461:      else
    #####: 2462:          call ansno(tname)
call    0 never executed
        -: 2463:      endif 
        -: 2464:
       1*: 2465: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2466:
        1: 2467:      end subroutine distrmix320
        -: 2468:
        -: 2469:C ----------------------------------------------------distrmix321
        -: 2470:c 321 DISTRIBUTE arrA3[WGT_BLOCK][BLOCK][WGT_BLOCK]         
        -: 2471:c                REDISTRIBUTE [GEN_BLOCK][BLOCK][GEN_BLOCK] 
        -: 2472:                                                           
function distrmix321_ called 1 returned 100% blocks executed 89%
        1: 2473:      subroutine distrmix321 (psize)
        -: 2474:      integer psize(3)
        -: 2475:
        -: 2476:      integer, parameter :: AN1=16,AN2=16,AN3=16,NL=1000,ER=10000
        -: 2477:      integer :: erri=ER,i,j,k
        -: 2478:
        -: 2479:      double precision, dimension(6) :: 
        -: 2480:     >             WB1=(/2.5, 3.6, 2.4, 2.3, 1.2, 0.5/)     
        -: 2481:      double precision, dimension(5) ::
        -: 2482:     >             WB2=(/1.4, 2.8, 3., 3.0, 1.1/)     
        -: 2483:      double precision, dimension(7) ::
        -: 2484:     >             WB3=(/1., 2.3, 2.2, 3.5, 1.7, 3., 2./)     
        -: 2485:
        -: 2486:      integer, dimension(1) :: BSi1=(/16/)         
        -: 2487:      integer, dimension(2) :: BSi2=(/11,5/)        
        -: 2488:      integer, dimension(3) :: BSi3=(/1,12,3/)       
        -: 2489:      integer, dimension(4) :: BSi4=(/6,4,5,1/)      
        -: 2490:
        -: 2491:      integer, dimension(1) :: BSj1=(/16/)     
        -: 2492:      integer, dimension(2) :: BSj2=(/3,13/)     
        -: 2493:      integer, dimension(3) :: BSj3=(/2,4,10/)     
        -: 2494:      integer, dimension(4) :: BSj4=(/5,1,7,3/)                
        -: 2495:
        -: 2496:      integer, dimension(1) :: BSk1=(/16/)     
        -: 2497:      integer, dimension(2) :: BSk2=(/10,6/)     
        -: 2498:      integer, dimension(3) :: BSk3=(/2,8,6/)     
        -: 2499:      integer, dimension(4) :: BSk4=(/3,2,10,1/)     
        -: 2500:
        -: 2501:      integer A3(AN1,AN2,AN3)   ! static array
        -: 2502:      character(12), parameter :: tname='distrmix321 '
        -: 2503:
        -: 2504:!dvm$ distribute A3(WGT_BLOCK(WB1,6),BLOCK,WGT_BLOCK(WB3,7))   
        -: 2505:!dvm$ dynamic A3
        -: 2506:
     4369: 2507:      A3 = 20 
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
branch  2 taken 94% (fallthrough)
branch  3 taken 6%
branch  4 taken 94% (fallthrough)
branch  5 taken 6%
        -: 2508:
        -: 2509:!dvm$ actual (A3)
        -: 2510:
        -: 2511:!dvm$ region
        -: 2512:!dvm$ parallel (i,j,k) on A3(i,j,k)
       17: 2513:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2514:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2515:             do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 2516:                A3(i,j,k) =  A3(i,j,k)+ i*NL/10 + j*NL/100 + k   
        -: 2517:             enddo
        -: 2518:          enddo
        -: 2519:      enddo
        -: 2520:!dvm$ end region
        -: 2521:   
        -: 2522:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),BLOCK,GEN_BLOCK(BSk))   
        -: 2523:   
        2: 2524:      select case(psize(1))
        -: 2525:      case(1)
       1*: 2526:          select case(psize(3))
        -: 2527:          case(1) 
        -: 2528:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk1))    
        -: 2529:          case(2)
        -: 2530:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk2))    
        -: 2531:          case(3)
        -: 2532:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk3))    
        -: 2533:          case(4)
        -: 2534:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk4))    
        -: 2535:          case default 
        1: 2536:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2537:          endselect  
        -: 2538:
        -: 2539:      case(2)
    #####: 2540:          select case(psize(3))
        -: 2541:          case(1) 
        -: 2542:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk1))    
        -: 2543:          case(2)
        -: 2544:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk2))    
        -: 2545:          case(3)
        -: 2546:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk3))    
        -: 2547:          case(4)
        -: 2548:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk4))    
        -: 2549:          case default 
    #####: 2550:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2551:          endselect  
        -: 2552:
        -: 2553:      case(3)
    #####: 2554:          select case(psize(3))
        -: 2555:          case(1) 
        -: 2556:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk1))    
        -: 2557:          case(2)
        -: 2558:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk2))    
        -: 2559:          case(3)
        -: 2560:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk3))    
        -: 2561:          case(4)
        -: 2562:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk4))    
        -: 2563:          case default 
    #####: 2564:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2565:          endselect  
        -: 2566:
        -: 2567:      case(4)
    #####: 2568:          select case(psize(3))
        -: 2569:          case(1) 
        -: 2570:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk1))    
        -: 2571:          case(2)
        -: 2572:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk2))    
        -: 2573:          case(3)
        -: 2574:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk3))    
        -: 2575:          case(4)
        -: 2576:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk4))    
        -: 2577:          case default 
    #####: 2578:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2579:          endselect  
        -: 2580:
        -: 2581:      case default 
        1: 2582:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 2583:      endselect  
        -: 2584:
        -: 2585:!dvm$ actual (erri)
        -: 2586:
        -: 2587:!dvm$ region
        -: 2588:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction(min(erri))
       17: 2589:      do i=1,AN1
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2590:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2591:            do k=1,AN3
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4096: 2592:                A3(i,j,k) = A3(i,j,k) - 20   
     4352: 2593:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 2594:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 2595:                endif 
        -: 2596:            enddo
        -: 2597:          enddo
        -: 2598:      enddo
        -: 2599:!dvm$ end region
        -: 2600:     
        -: 2601:!dvm$ get_actual (erri)
        -: 2602:
        1: 2603:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2604:          call ansyes(tname)
call    0 returned 100%
        -: 2605:      else
    #####: 2606:          call ansno(tname)
call    0 never executed
        -: 2607:      endif 
        -: 2608:
        -: 2609: 10   continue
        -: 2610:
        1: 2611:      end subroutine distrmix321
        -: 2612:
        -: 2613:C ----------------------------------------------------distrmix322
        -: 2614:c 322  DISTRIBUTE arrA3[GEN_BLOCK][BLOCK][GEN_BLOCK]    
        -: 2615:c                REDISTRIBUTE [BLOCK][WGT_BLOCK][BLOCK] 
        -: 2616:                                                       
function distrmix322_ called 1 returned 100% blocks executed 85%
        1: 2617:      subroutine distrmix322 (psize)
        -: 2618:      integer psize(3)
        -: 2619:
        -: 2620:      integer, parameter :: AN1=24,AN2=16,AN3=8,NL=1000,ER=10000
        -: 2621:      integer :: erri=ER,i,j,k
        -: 2622:
        -: 2623:      double precision, dimension(5) :: 
        -: 2624:     >             WB1=(/ 3.2, 2.4, 2.0, 1.0, 2.5/)     
        -: 2625:      double precision, dimension(4) ::
        -: 2626:     >             WB2=(/2.1, 2.5, 3., 1.1/)     
        -: 2627:      double precision, dimension(6) ::
        -: 2628:     >             WB3=(/2.3, 2.0, 3.5, 1.5, 3., 2./)     
        -: 2629:
        -: 2630:      integer, dimension(1) :: BSi1=(/24/)         
        -: 2631:      integer, dimension(2) :: BSi2=(/11,13/)        
        -: 2632:      integer, dimension(3) :: BSi3=(/10,12,2/)       
        -: 2633:      integer, dimension(4) :: BSi4=(/6,14,3,1/)      
        -: 2634:
        -: 2635:      integer, dimension(1) :: BSj1=(/16/)     
        -: 2636:      integer, dimension(2) :: BSj2=(/12,4/)     
        -: 2637:      integer, dimension(3) :: BSj3=(/3,7,6/)     
        -: 2638:      integer, dimension(4) :: BSj4=(/4,2,6,4/)                
        -: 2639:
        -: 2640:      integer, dimension(1) :: BSk1=(/8/)     
        -: 2641:      integer, dimension(2) :: BSk2=(/2,6/)     
        -: 2642:      integer, dimension(3) :: BSk3=(/3,1,4/)     
        -: 2643:      integer, dimension(4) :: BSk4=(/4,2,1,1/)                
        -: 2644:
        1: 2645:      integer, allocatable :: A3(:,:,:)
        -: 2646:      character(12), parameter :: tname='distrmix322 '
        -: 2647:
        -: 2648:!dvm$ distribute :: A3
        -: 2649:!dvm$ dynamic A3
        -: 2650:
       1*: 2651:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2652:
        -: 2653:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),BLOCK,GEN_BLOCK(BSk))   
        -: 2654:
        2: 2655:      select case(psize(1))
        -: 2656:      case(1)
       1*: 2657:          select case(psize(3))
        -: 2658:          case(1) 
        -: 2659:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk1))    
        -: 2660:          case(2)
        -: 2661:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk2))    
        -: 2662:          case(3)
        -: 2663:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk3))    
        -: 2664:          case(4)
        -: 2665:!dvm$ redistribute A3(GEN_BLOCK(BSi1),BLOCK,GEN_BLOCK(BSk4))    
        -: 2666:          case default 
        1: 2667:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2668:          endselect  
        -: 2669:
        -: 2670:      case(2)
    #####: 2671:          select case(psize(3))
        -: 2672:          case(1) 
        -: 2673:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk1))    
        -: 2674:          case(2)
        -: 2675:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk2))    
        -: 2676:          case(3)
        -: 2677:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk3))    
        -: 2678:          case(4)
        -: 2679:!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk4))    
        -: 2680:          case default 
    #####: 2681:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2682:          endselect  
        -: 2683:
        -: 2684:      case(3)
    #####: 2685:          select case(psize(3))
        -: 2686:          case(1) 
        -: 2687:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk1))    
        -: 2688:          case(2)
        -: 2689:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk2))    
        -: 2690:          case(3)
        -: 2691:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk3))    
        -: 2692:          case(4)
        -: 2693:!dvm$ redistribute A3(GEN_BLOCK(BSi3),BLOCK,GEN_BLOCK(BSk4))    
        -: 2694:          case default 
    #####: 2695:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2696:          endselect  
        -: 2697:
        -: 2698:      case(4)
    #####: 2699:          select case(psize(3))
        -: 2700:          case(1) 
        -: 2701:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk1))    
        -: 2702:          case(2)
        -: 2703:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk2))    
        -: 2704:          case(3)
        -: 2705:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk3))    
        -: 2706:          case(4)
        -: 2707:!dvm$ redistribute A3(GEN_BLOCK(BSi4),BLOCK,GEN_BLOCK(BSk4))    
        -: 2708:          case default 
    #####: 2709:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2710:          endselect  
        -: 2711:
        -: 2712:      case default 
        1: 2713:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 2714:      endselect  
        -: 2715:
     3209: 2716:      A3 = 15  
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 94% (fallthrough)
branch  3 taken 6%
branch  4 taken 96% (fallthrough)
branch  5 taken 4%
        -: 2717:
        -: 2718:!dvm$ actual (A3)
        -: 2719:
        -: 2720:!dvm$ region
        -: 2721:!dvm$ parallel (i,j,k) on A3(i,j,k)
       25: 2722:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      409: 2723:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     3480: 2724:             do k=1,AN3
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     3456: 2725:                A3(i,j,k) = A3(i,j,k) + i*NL/10 + j*NL/100 + k    
        -: 2726:             enddo
        -: 2727:          enddo
        -: 2728:      enddo
        -: 2729:!dvm$ end region
        -: 2730:
        -: 2731:!dvm$ redistribute  A3(BLOCK,WGT_BLOCK(WB2,4),BLOCK)   
        -: 2732:
        -: 2733:!dvm$ actual (erri)
        -: 2734:
        -: 2735:!dvm$ region
        -: 2736:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction(min(erri))
       25: 2737:      do i=1,AN1
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
      409: 2738:          do j=1,AN2
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     3480: 2739:            do k=1,AN3
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     3456: 2740:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 15)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 2741:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 2742:                endif 
        -: 2743:            enddo
        -: 2744:          enddo
        -: 2745:      enddo
        -: 2746:!dvm$ end region
        -: 2747:     
        -: 2748:!dvm$ get_actual (erri)
        -: 2749:
        1: 2750:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2751:          call ansyes(tname)
call    0 returned 100%
        -: 2752:      else
    #####: 2753:          call ansno(tname)
call    0 never executed
        -: 2754:      endif 
        -: 2755:
       1*: 2756: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2757:
        1: 2758:      end subroutine distrmix322
        -: 2759:
        -: 2760:C ----------------------------------------------------distrmix323
        -: 2761:c 323 DISTRIBUTE arrA3[BLOCK][WGT_BLOCK][BLOCK]             
        -: 2762:c                REDISTRIBUTE [GEN_BLOCK][GEN_BLOCK][*] 
        -: 2763:                                                           
function distrmix323_ called 1 returned 100% blocks executed 86%
        1: 2764:      subroutine distrmix323 (psize)
        -: 2765:      integer psize(3)
        -: 2766:
        -: 2767:      integer, parameter :: AN1=8,AN2=11,AN3=11,NL=1000,ER=10000
        -: 2768:      integer :: erri=ER,i,j,k
        -: 2769:
        -: 2770:      double precision, dimension(7) :: 
        -: 2771:     >             WB1=(/ 3.2, 2.4, 1., 2., 2.0, 1.0, 2.5/)     
        -: 2772:      double precision, dimension(6) ::
        -: 2773:     >             WB2=(/3.1, 2.5, 4., 2.1, 2., 2./)
        -: 2774:      double precision, dimension(6) ::
        -: 2775:     >             WB3=(/1.2, 3.0, 2.4, 1.0, 3., 2.5/)     
        -: 2776:
        -: 2777:      integer, dimension(1) :: BSi1=(/8/)         
        -: 2778:      integer, dimension(2) :: BSi2=(/2,6/)        
        -: 2779:      integer, dimension(3) :: BSi3=(/1,3,4/)       
        -: 2780:      integer, dimension(4) :: BSi4=(/3,2,1,2/)      
        -: 2781:
        -: 2782:      integer, dimension(1) :: BSj1=(/11/)     
        -: 2783:      integer, dimension(2) :: BSj2=(/3,8/)     
        -: 2784:      integer, dimension(3) :: BSj3=(/1,7,3/)     
        -: 2785:      integer, dimension(4) :: BSj4=(/5,3,1,2/)                
        -: 2786:
        -: 2787:      integer, dimension(1) :: BSk1=(/11/)     
        -: 2788:      integer, dimension(2) :: BSk2=(/1,10/)     
        -: 2789:      integer, dimension(3) :: BSk3=(/3,4,4/)     
        -: 2790:      integer, dimension(4) :: BSk4=(/4,2,2,3/)                
        -: 2791:
        -: 2792:      integer :: A3(AN1,AN2,AN3)
        -: 2793:      character(12), parameter :: tname='distrmix323 '
        -: 2794:
        -: 2795:!dvm$ distribute A3(BLOCK,WGT_BLOCK(WB2,6),BLOCK)   
        -: 2796:!dvm$ dynamic A3
        -: 2797:
        -: 2798:!dvm$ region
        -: 2799:!dvm$ parallel (i,j,k) on A3(i,j,k)
        9: 2800:      do i=1,AN1
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       97: 2801:          do j=1,AN2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     1064: 2802:             do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     1056: 2803:                A3(i,j,k) = i*NL/10 + j*NL/100 + k    
        -: 2804:             enddo
        -: 2805:          enddo
        -: 2806:      enddo
        -: 2807:!dvm$ end region
        -: 2808:
        -: 2809:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi),GEN_BLOCK(BSj),*)   
        -: 2810:   
        2: 2811:      select case(psize(1))
        -: 2812:      case(1)
       1*: 2813:          select case(psize(2))
        -: 2814:          case(1) 
        -: 2815:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj1),*)    
        -: 2816:          case(2)
        -: 2817:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj2),*)    
        -: 2818:          case(3)
        -: 2819:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj3),*)    
        -: 2820:          case(4)
        -: 2821:!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj4),*)    
        -: 2822:          case default 
        1: 2823:              goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2824:          endselect  
        -: 2825:
        -: 2826:      case(2)
    #####: 2827:          select case(psize(2))
        -: 2828:          case(1) 
        -: 2829:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj1),*)    
        -: 2830:          case(2)
        -: 2831:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj2),*)    
        -: 2832:          case(3)
        -: 2833:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj3),*)    
        -: 2834:          case(4)
        -: 2835:!dvm$ redistribute A3(GEN_BLOCK(BSi2),GEN_BLOCK(BSj4),*)    
        -: 2836:          case default 
    #####: 2837:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2838:          endselect  
        -: 2839:
        -: 2840:      case(3)
    #####: 2841:          select case(psize(2))
        -: 2842:          case(1) 
        -: 2843:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj1),*)    
        -: 2844:          case(2)
        -: 2845:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj2),*)    
        -: 2846:          case(3)
        -: 2847:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj3),*)    
        -: 2848:          case(4)
        -: 2849:!dvm$ redistribute A3(GEN_BLOCK(BSi3),GEN_BLOCK(BSj4),*)    
        -: 2850:          case default 
    #####: 2851:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2852:          endselect  
        -: 2853:
        -: 2854:      case(4)
    #####: 2855:          select case(psize(2))
        -: 2856:          case(1) 
        -: 2857:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj1),*)    
        -: 2858:          case(2)
        -: 2859:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj2),*)    
        -: 2860:          case(3)
        -: 2861:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj3),*)    
        -: 2862:          case(4)
        -: 2863:!dvm$ redistribute A3(GEN_BLOCK(BSi4),GEN_BLOCK(BSj4),*)    
        -: 2864:          case default 
    #####: 2865:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2866:          endselect  
        -: 2867:
        -: 2868:      case default 
        1: 2869:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 2870:      endselect  
        -: 2871:
        -: 2872:!dvm$ actual (erri)
        -: 2873:
        -: 2874:!dvm$ region
        -: 2875:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction(min(erri))
        9: 2876:      do i=1,AN1
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       97: 2877:          do j=1,AN2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     1064: 2878:            do k=1,AN3
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     1056: 2879:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 2880:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 2881:                endif 
        -: 2882:            enddo
        -: 2883:          enddo
        -: 2884:      enddo
        -: 2885:!dvm$ end region
        -: 2886:     
        -: 2887:!dvm$ get_actual (erri)
        -: 2888:
        1: 2889:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2890:          call ansyes(tname)
call    0 returned 100%
        -: 2891:      else
    #####: 2892:          call ansno(tname)
call    0 never executed
        -: 2893:      endif 
        -: 2894:
        -: 2895: 10   continue
        -: 2896:
        1: 2897:      end subroutine distrmix323
        -: 2898:
        -: 2899:C ----------------------------------------------------distrmix324
        -: 2900:c 324 DISTRIBUTE arrA3[GEN_BLOCK][GEN_BLOCK][*]         
        -: 2901:c                REDISTRIBUTE [*][WGT_BLOCK][WGT_BLOCK] 
        -: 2902:c                REDISTRIBUTE [GEN_BLOCK][*][GEN_BLOCK] 
        -: 2903:c                                                       
function distrmix324_ called 1 returned 100% blocks executed 85%
        1: 2904:      subroutine distrmix324 (psize)
        -: 2905:      integer psize(3)
        -: 2906:
        -: 2907:      integer, parameter :: AN1=12,AN2=12,AN3=21,NL=1000,ER=10000
        -: 2908:      integer :: erri=ER,i,j,k
        -: 2909:
        -: 2910:      double precision, dimension(7) :: 
        -: 2911:     >             WB1=(/2.0, 1.2, 2.5, 1.4, 2.5, 1.3, 1./)     
        -: 2912:      double precision, dimension(5) ::
        -: 2913:     >             WB2=(/2., 1.3, 2., 1.0, 1.7/)     
        -: 2914:      double precision, dimension(6) ::
        -: 2915:     >             WB3=(/2., 3., 1.3, 2., 1.0, 1.7/)     
        -: 2916:
        -: 2917:      integer, dimension(1) :: BSi11=(/12/)      
        -: 2918:      integer, dimension(1) :: BSi12=(/12/)            
        -: 2919:      integer, dimension(2) :: BSi21=(/8,4/)    
        -: 2920:      integer, dimension(2) :: BSi22=(/2,10/)         
        -: 2921:      integer, dimension(3) :: BSi31=(/1,6,5/)    
        -: 2922:      integer, dimension(3) :: BSi32=(/4,6,2/)     
        -: 2923:      integer, dimension(4) :: BSi41=(/3,2,4,3/)  
        -: 2924:      integer, dimension(4) :: BSi42=(/4,2,2,4/)   
        -: 2925:
        -: 2926:      integer, dimension(1) :: BSj11=(/12/) 
        -: 2927:      integer, dimension(1) :: BSj12=(/12/)     
        -: 2928:      integer, dimension(2) :: BSj21=(/6,6/)     
        -: 2929:      integer, dimension(2) :: BSj22=(/1,11/)     
        -: 2930:      integer, dimension(3) :: BSj31=(/8,2,2/)     
        -: 2931:      integer, dimension(3) :: BSj32=(/1,10,1/)     
        -: 2932:      integer, dimension(4) :: BSj41=(/2,5,3,2/)     
        -: 2933:      integer, dimension(4) :: BSj42=(/2,8,1,1/)     
        -: 2934:
        -: 2935:      integer, dimension(1) :: BSk11=(/21/)     
        -: 2936:      integer, dimension(1) :: BSk12=(/21/)     
        -: 2937:      integer, dimension(2) :: BSk21=(/11,10/)     
        -: 2938:      integer, dimension(2) :: BSk22=(/7,14/)     
        -: 2939:      integer, dimension(3) :: BSk31=(/1,5,15/)     
        -: 2940:      integer, dimension(3) :: BSk32=(/4,6,11/)     
        -: 2941:      integer, dimension(4) :: BSk41=(/1,2,10,8/)     
        -: 2942:      integer, dimension(4) :: BSk42=(/12,4,2,3/)     
        -: 2943:
        1: 2944:      integer, allocatable :: A3(:,:,:)
        -: 2945:      character(*), parameter :: tname='distrmix324 '
        -: 2946:
        -: 2947:!dvm$ distribute :: A3   
        -: 2948:!dvm$ dynamic A3
        -: 2949:
       1*: 2950:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 2951:
        -: 2952:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi1),GEN_BLOCK(BSj1),*)   
        -: 2953:
        2: 2954:      select case(psize(1))
        -: 2955:      case(1)
       1*: 2956:          select case(psize(2))
        -: 2957:          case(1) 
        -: 2958:!dvm$ redistribute A3(GEN_BLOCK(BSi11),GEN_BLOCK(BSj11),*)    
        -: 2959:          case(2)
        -: 2960:!dvm$ redistribute A3(GEN_BLOCK(BSi11),GEN_BLOCK(BSj21),*)    
        -: 2961:          case(3)
        -: 2962:!dvm$ redistribute A3(GEN_BLOCK(BSi11),GEN_BLOCK(BSj31),*)    
        -: 2963:          case(4)
        -: 2964:!dvm$ redistribute A3(GEN_BLOCK(BSi11),GEN_BLOCK(BSj41),*)    
        -: 2965:          case default 
        1: 2966:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2967:          endselect  
        -: 2968:
        -: 2969:      case(2)
    #####: 2970:          select case(psize(2))
        -: 2971:          case(1) 
        -: 2972:!dvm$ redistribute A3(GEN_BLOCK(BSi21),GEN_BLOCK(BSj11),*)    
        -: 2973:          case(2)
        -: 2974:!dvm$ redistribute A3(GEN_BLOCK(BSi21),GEN_BLOCK(BSj21),*)    
        -: 2975:          case(3)
        -: 2976:!dvm$ redistribute A3(GEN_BLOCK(BSi21),GEN_BLOCK(BSj31),*)    
        -: 2977:          case(4)
        -: 2978:!dvm$ redistribute A3(GEN_BLOCK(BSi21),GEN_BLOCK(BSj41),*)    
        -: 2979:          case default 
    #####: 2980:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2981:          endselect  
        -: 2982:
        -: 2983:      case(3)
    #####: 2984:          select case(psize(2))
        -: 2985:          case(1) 
        -: 2986:!dvm$ redistribute A3(GEN_BLOCK(BSi31),GEN_BLOCK(BSj11),*)    
        -: 2987:          case(2)
        -: 2988:!dvm$ redistribute A3(GEN_BLOCK(BSi31),GEN_BLOCK(BSj21),*)    
        -: 2989:          case(3)
        -: 2990:!dvm$ redistribute A3(GEN_BLOCK(BSi31),GEN_BLOCK(BSj31),*)    
        -: 2991:          case(4)
        -: 2992:!dvm$ redistribute A3(GEN_BLOCK(BSi31),GEN_BLOCK(BSj41),*)    
        -: 2993:          case default 
    #####: 2994:             goto 10
branch  0 never executed
branch  1 never executed
        -: 2995:          endselect  
        -: 2996:
        -: 2997:      case(4)
    #####: 2998:          select case(psize(2))
        -: 2999:          case(1) 
        -: 3000:!dvm$ redistribute A3(GEN_BLOCK(BSi41),GEN_BLOCK(BSj11),*)    
        -: 3001:          case(2)
        -: 3002:!dvm$ redistribute A3(GEN_BLOCK(BSi41),GEN_BLOCK(BSj21),*)    
        -: 3003:          case(3)
        -: 3004:!dvm$ redistribute A3(GEN_BLOCK(BSi41),GEN_BLOCK(BSj31),*)    
        -: 3005:          case(4)
        -: 3006:!dvm$ redistribute A3(GEN_BLOCK(BSi41),GEN_BLOCK(BSj41),*)    
        -: 3007:          case default 
    #####: 3008:             goto 10
branch  0 never executed
branch  1 never executed
        -: 3009:          endselect  
        -: 3010:
        -: 3011:      case default 
        1: 3012:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 3013:      endselect  
        -: 3014:
     3298: 3015:      A3 = 1 
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 92% (fallthrough)
branch  3 taken 8%
branch  4 taken 92% (fallthrough)
branch  5 taken 8%
        -: 3016:
        -: 3017:!dvm$ actual (A3)
        -: 3018:
        -: 3019:!dvm$ region
        -: 3020:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13: 3021:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      157: 3022:          do j=1,AN2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     3180: 3023:             do k=1,AN3
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     3168: 3024:                A3(i,j,k) = A3(i,j,k)+i*NL/10 + j*NL/100 + k    
        -: 3025:             enddo
        -: 3026:          enddo
        -: 3027:      enddo
        -: 3028:!dvm$ end region
        -: 3029:
        -: 3030:!dvm$ redistribute
        -: 3031:!dvm$*    A3(*, WGT_BLOCK(WB2,5),WGT_BLOCK(WB3,6))   
        -: 3032:
        -: 3033:!dvm$ region
        -: 3034:!dvm$ parallel (i,j,k) on A3(i,j,k)
       13: 3035:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      157: 3036:          do j=1,AN2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     3180: 3037:             do k=1,AN3
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     3168: 3038:                A3(i,j,k) = A3(i,j,k) * 2   
        -: 3039:             enddo
        -: 3040:          enddo
        -: 3041:      enddo
        -: 3042:!dvm$ end region 
        -: 3043:
        -: 3044:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi2),*,GEN_BLOCK(BSk2))   
        -: 3045:
        1: 3046:      select case(psize(1))
        -: 3047:      case(1)
       1*: 3048:          select case(psize(2)) ! it's true - psize(2)
        -: 3049:          case(1) 
        -: 3050:!dvm$ redistribute A3(GEN_BLOCK(BSi12),*,GEN_BLOCK(BSk12))    
        -: 3051:          case(2)
        -: 3052:!dvm$ redistribute A3(GEN_BLOCK(BSi12),*,GEN_BLOCK(BSk22))    
        -: 3053:          case(3)
        -: 3054:!dvm$ redistribute A3(GEN_BLOCK(BSi12),*,GEN_BLOCK(BSk32))    
        -: 3055:          case(4)                                            
        -: 3056:!dvm$ redistribute A3(GEN_BLOCK(BSi12),*,GEN_BLOCK(BSk42))
        -: 3057:          case default
        1: 3058:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3059:          endselect 
        -: 3060:      case(2)
    #####: 3061:          select case(psize(2)) ! it's true - psize(2)
        -: 3062:          case(1) 
        -: 3063:!dvm$ redistribute A3(GEN_BLOCK(BSi22),*,GEN_BLOCK(BSk12))    
        -: 3064:          case(2)
        -: 3065:!dvm$ redistribute A3(GEN_BLOCK(BSi22),*,GEN_BLOCK(BSk22))    
        -: 3066:          case(3)
        -: 3067:!dvm$ redistribute A3(GEN_BLOCK(BSi22),*,GEN_BLOCK(BSk32))    
        -: 3068:          case(4)
        -: 3069:!dvm$ redistribute A3(GEN_BLOCK(BSi22),*,GEN_BLOCK(BSk42))    
        -: 3070:          case default 
    #####: 3071:             goto 10
branch  0 never executed
branch  1 never executed
        -: 3072:          endselect  
        -: 3073:
        -: 3074:      case(3)
    #####: 3075:          select case(psize(2)) ! it's true - psize(2)
        -: 3076:          case(1) 
        -: 3077:!dvm$ redistribute A3(GEN_BLOCK(BSi32),*,GEN_BLOCK(BSk12))    
        -: 3078:          case(2)
        -: 3079:!dvm$ redistribute A3(GEN_BLOCK(BSi32),*,GEN_BLOCK(BSk22))    
        -: 3080:          case(3)
        -: 3081:!dvm$ redistribute A3(GEN_BLOCK(BSi32),*,GEN_BLOCK(BSk32))    
        -: 3082:          case(4)
        -: 3083:!dvm$ redistribute A3(GEN_BLOCK(BSi32),*,GEN_BLOCK(BSk42))    
        -: 3084:          case default 
    #####: 3085:             goto 10
branch  0 never executed
branch  1 never executed
        -: 3086:          endselect  
        -: 3087:
        -: 3088:      case(4)
    #####: 3089:          select case(psize(2)) ! it's true - psize(2)
        -: 3090:          case(1) 
        -: 3091:!dvm$ redistribute A3(GEN_BLOCK(BSi42),*,GEN_BLOCK(BSk12))    
        -: 3092:          case(2)
        -: 3093:!dvm$ redistribute A3(GEN_BLOCK(BSi42),*,GEN_BLOCK(BSk22))    
        -: 3094:          case(3)
        -: 3095:!dvm$ redistribute A3(GEN_BLOCK(BSi42),*,GEN_BLOCK(BSk32))    
        -: 3096:          case(4)
        -: 3097:!dvm$ redistribute A3(GEN_BLOCK(BSi42),*,GEN_BLOCK(BSk42))    
        -: 3098:          case default 
    #####: 3099:             goto 10
branch  0 never executed
branch  1 never executed
        -: 3100:          endselect  
        -: 3101:
        -: 3102:      case default 
        1: 3103:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
        -: 3104:      endselect  
        -: 3105:
        -: 3106:!dvm$ actual (erri)
        -: 3107:
        -: 3108:!dvm$ region
        -: 3109:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction(min(erri))
       13: 3110:      do i=1,AN1
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
      157: 3111:          do j=1,AN2
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
     3180: 3112:            do k=1,AN3
branch  0 taken 95% (fallthrough)
branch  1 taken 5%
     3024: 3113:                A3(i,j,k) = A3(i,j,k) / 2   
     3168: 3114:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 1)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 3115:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 3116:                endif 
        -: 3117:            enddo
        -: 3118:          enddo
        -: 3119:      enddo
        -: 3120:!dvm$ end region
        -: 3121:     
        -: 3122:!dvm$ get_actual (erri)
        -: 3123:
        1: 3124:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3125:          call ansyes(tname)
call    0 returned 100%
        -: 3126:      else
    #####: 3127:          call ansno(tname)
call    0 never executed
        -: 3128:      endif 
        -: 3129:
       1*: 3130: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 3131:
        1: 3132:      end subroutine distrmix324
        -: 3133:
        -: 3134:C ----------------------------------------------------distrmix325
        -: 3135:c 325  DISTRIBUTE arrA3 [*][GEN_BLOCK][GEN_BLOCK]                
        -: 3136:c                REDISTRIBUTE [*][WGT_BLOCK][*]                 
        -: 3137:c                REDISTRIBUTE [GEN_BLOCK][BLOCK][GEN_BLOCK]  
        -: 3138:c                                                               
        -: 3139:c                                                               
function distrmix325_ called 1 returned 100% blocks executed 85%
        1: 3140:      subroutine distrmix325 (psize)
        -: 3141:      integer psize(3)
        -: 3142:
        -: 3143:      integer, parameter :: AN1=7,AN2=6,AN3=7,NL=1000,ER=10000
        -: 3144:      integer :: erri=ER,i,j,k
        -: 3145:
        -: 3146:      double precision, dimension(10) ::
        -: 3147:     >          WB2=(/2.0, 1.2, 2.5, 1.0, 2.5, 1.3, 1., 3., 2., 1./)     
        -: 3148:
        -: 3149:      integer, dimension(1) :: BSi11=(/7/)      
        -: 3150:      integer, dimension(1) :: BSi12=(/7/)            
        -: 3151:      integer, dimension(2) :: BSi21=(/3,4/)    
        -: 3152:      integer, dimension(2) :: BSi22=(/2,5/)         
        -: 3153:      integer, dimension(3) :: BSi31=(/1,6,0/)    
        -: 3154:      integer, dimension(3) :: BSi32=(/4,2,1/)     
        -: 3155:      integer, dimension(4) :: BSi41=(/3,2,1,1/)  
        -: 3156:      integer, dimension(4) :: BSi42=(/2,1,2,2/)   
        -: 3157:
        -: 3158:      integer, dimension(1) :: BSj11=(/6/) 
        -: 3159:      integer, dimension(1) :: BSj12=(/6/)     
        -: 3160:      integer, dimension(2) :: BSj21=(/2,4/)     
        -: 3161:      integer, dimension(2) :: BSj22=(/0,6/)     
        -: 3162:      integer, dimension(3) :: BSj31=(/2,2,2/)     
        -: 3163:      integer, dimension(3) :: BSj32=(/1,3,2/)     
        -: 3164:      integer, dimension(4) :: BSj41=(/2,1,1,2/)     
        -: 3165:      integer, dimension(4) :: BSj42=(/3,0,2,1/)     
        -: 3166:
        -: 3167:      integer, dimension(1) :: BSk11=(/7/)     
        -: 3168:      integer, dimension(1) :: BSk12=(/7/)     
        -: 3169:      integer, dimension(2) :: BSk21=(/3,4/)     
        -: 3170:      integer, dimension(2) :: BSk22=(/6,1/)     
        -: 3171:      integer, dimension(3) :: BSk31=(/1,5,1/)     
        -: 3172:      integer, dimension(3) :: BSk32=(/4,2,1/)     
        -: 3173:      integer, dimension(4) :: BSk41=(/2,0,3,2/)     
        -: 3174:      integer, dimension(4) :: BSk42=(/2,4,0,1/)     
        -: 3175:
        1: 3176:      integer, allocatable :: A3(:,:,:)
        -: 3177:      character(12), parameter :: tname='distrmix325 '
        -: 3178:
        -: 3179:!dvm$ distribute :: A3
        -: 3180:!dvm$ dynamic A3
        -: 3181:
       1*: 3182:      allocate (A3(AN1,AN2,AN3))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 3183:
        -: 3184:!!!!dvm$ redistribute A3(*,GEN_BLOCK(BSj1),GEN_BLOCK(BSk1))   
        -: 3185:
        2: 3186:                select case(psize(1))     ! it's true - psize(1)
        -: 3187:      case(1)
       1*: 3188:         select case(psize(2))  ! it's true - psize(2)
        -: 3189:         case(1) 
        -: 3190:!dvm$ redistribute
        -: 3191:!dvm$*    A3(*,GEN_BLOCK(BSj11),GEN_BLOCK(BSk11))   
        -: 3192:         case(2) 
        -: 3193:!dvm$ redistribute
        -: 3194:!dvm$*    A3(*,GEN_BLOCK(BSj11),GEN_BLOCK(BSk21))   
        -: 3195:         case(3)
        -: 3196:!dvm$ redistribute
        -: 3197:!dvm$*    A3(*,GEN_BLOCK(BSj11),GEN_BLOCK(BSk31))   
        -: 3198:         case(4)
        -: 3199:!dvm$ redistribute
        -: 3200:!dvm$*    A3(*,GEN_BLOCK(BSj11),GEN_BLOCK(BSk41))   
        -: 3201:         case default 
        1: 3202:            goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3203:         endselect  
        -: 3204:
        -: 3205:      case(2)
    #####: 3206:         select case(psize(2))  ! it's true - psize(2)
        -: 3207:         case(1) 
        -: 3208:!dvm$ redistribute
        -: 3209:!dvm$*    A3(*,GEN_BLOCK(BSj21),GEN_BLOCK(BSk11))   
        -: 3210:         case(2)
        -: 3211:!dvm$ redistribute
        -: 3212:!dvm$*    A3(*,GEN_BLOCK(BSj21),GEN_BLOCK(BSk21))   
        -: 3213:         case(3)
        -: 3214:!dvm$ redistribute
        -: 3215:!dvm$*    A3(*,GEN_BLOCK(BSj21),GEN_BLOCK(BSk31))   
        -: 3216:         case(4)
        -: 3217:!dvm$ redistribute
        -: 3218:!dvm$*    A3(*,GEN_BLOCK(BSj21),GEN_BLOCK(BSk41))   
        -: 3219:         case default 
    #####: 3220:            goto 10               
branch  0 never executed
branch  1 never executed
        -: 3221:         endselect  
        -: 3222:
        -: 3223:      case (3)
    #####: 3224:         select case(psize(2))  ! it's true - psize(2)
        -: 3225:         case(1) 
        -: 3226:!dvm$ redistribute
        -: 3227:!dvm$*    A3(*,GEN_BLOCK(BSj31),GEN_BLOCK(BSk11))   
        -: 3228:         case(2)
        -: 3229:!dvm$ redistribute
        -: 3230:!dvm$*    A3(*,GEN_BLOCK(BSj31),GEN_BLOCK(BSk21))   
        -: 3231:         case(3)
        -: 3232:!dvm$ redistribute
        -: 3233:!dvm$*    A3(*,GEN_BLOCK(BSj31),GEN_BLOCK(BSk31))   
        -: 3234:         case(4)
        -: 3235:!dvm$ redistribute
        -: 3236:!dvm$*    A3(*,GEN_BLOCK(BSj31),GEN_BLOCK(BSk41))   
        -: 3237:         case default 
    #####: 3238:            goto 10
branch  0 never executed
branch  1 never executed
        -: 3239:         endselect  
        -: 3240:
        -: 3241:      case (4)
    #####: 3242:         select case(psize(2))  ! it's true - psize(2)
        -: 3243:         case(1) 
        -: 3244:!dvm$ redistribute
        -: 3245:!dvm$*    A3(*,GEN_BLOCK(BSj41),GEN_BLOCK(BSk11))   
        -: 3246:         case(2)
        -: 3247:!dvm$ redistribute
        -: 3248:!dvm$*    A3(*,GEN_BLOCK(BSj41),GEN_BLOCK(BSk21))   
        -: 3249:         case(3)
        -: 3250:!dvm$ redistribute
        -: 3251:!dvm$*    A3(*,GEN_BLOCK(BSj41),GEN_BLOCK(BSk31))   
        -: 3252:         case(4)
        -: 3253:!dvm$ redistribute
        -: 3254:!dvm$*    A3(*,GEN_BLOCK(BSj41),GEN_BLOCK(BSk41))   
        -: 3255:         case default 
    #####: 3256:            goto 10
branch  0 never executed
branch  1 never executed
        -: 3257:         endselect  
        -: 3258:
        -: 3259:      case default 
        1: 3260:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
        -: 3261:      endselect  
        -: 3262:
        -: 3263:!dvm$ region  
        -: 3264:!dvm$ parallel (i,j,k) on A3(i,j,k)
        8: 3265:      do i=1,AN1
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
       50: 3266:          do j=1,AN2
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
      343: 3267:             do k=1,AN3
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
      336: 3268:                A3(i,j,k) = i*NL/10 + j*NL/100 + k + 5  
        -: 3269:             enddo
        -: 3270:          enddo
        -: 3271:      enddo
        -: 3272:!dvm$ end region   
        -: 3273:
        -: 3274:
        -: 3275:
        -: 3276:!dvm$ region
        -: 3277:!dvm$ parallel (i,j,k) on A3(i,j,k)
        8: 3278:      do i=1,AN1
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
       50: 3279:          do j=1,AN2
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
      343: 3280:             do k=1,AN3
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
      336: 3281:                A3(i,j,k) = i*NL/10 + j*NL/100 + k + 5  
        -: 3282:             enddo
        -: 3283:          enddo
        -: 3284:      enddo
        -: 3285:!dvm$ end region
        -: 3286:
        -: 3287:!dvm$ redistribute A3(*, WGT_BLOCK(WB2,10), *)   
        -: 3288:
        -: 3289:!dvm$ region
        -: 3290:!dvm$ parallel (i,j,k) on A3(i,j,k)
        8: 3291:      do i=1,AN1
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
       50: 3292:          do j=1,AN2
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
      343: 3293:             do k=1,AN3
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
      336: 3294:                A3(i,j,k) = A3(i,j,k) + 5   
        -: 3295:             enddo
        -: 3296:          enddo
        -: 3297:      enddo
        -: 3298:!dvm$ end region
        -: 3299:
        -: 3300:!!!!dvm$ redistribute A3(GEN_BLOCK(BSi2),BLOCK,GEN_BLOCK(BSk2))   
        -: 3301:
        1: 3302:      select case(psize(1))
        -: 3303:      case(1)
       1*: 3304:          select case(psize(3))
        -: 3305:          case(1) 
        -: 3306:!dvm$ redistribute A3(GEN_BLOCK(BSi12),BLOCK,GEN_BLOCK(BSk12))    
        -: 3307:          case(2)
        -: 3308:!dvm$ redistribute A3(GEN_BLOCK(BSi12),BLOCK,GEN_BLOCK(BSk22))    
        -: 3309:          case (3)
        -: 3310:!dvm$ redistribute A3(GEN_BLOCK(BSi12),BLOCK,GEN_BLOCK(BSk32))    
        -: 3311:          case(4)
        -: 3312:!dvm$ redistribute A3(GEN_BLOCK(BSi12),BLOCK,GEN_BLOCK(BSk42))    
        -: 3313:          case default 
        1: 3314:             goto 10
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3315:          endselect  
        -: 3316:
        -: 3317:      case(2)
    #####: 3318:          select case(psize(3))
        -: 3319:          case(1) 
        -: 3320:!dvm$ redistribute A3(GEN_BLOCK(BSi22),BLOCK,GEN_BLOCK(BSk12))    
        -: 3321:          case(2)
        -: 3322:!dvm$ redistribute A3(GEN_BLOCK(BSi22),BLOCK,GEN_BLOCK(BSk22))    
        -: 3323:          case (3)
        -: 3324:!dvm$ redistribute A3(GEN_BLOCK(BSi22),BLOCK,GEN_BLOCK(BSk32))    
        -: 3325:          case(4)
        -: 3326:!dvm$ redistribute A3(GEN_BLOCK(BSi22),BLOCK,GEN_BLOCK(BSk42))    
        -: 3327:          case default 
    #####: 3328:             goto 10
branch  0 never executed
branch  1 never executed
        -: 3329:          endselect  
        -: 3330:
        -: 3331:      case (3)
    #####: 3332:          select case(psize(3))
        -: 3333:          case(1) 
        -: 3334:!dvm$ redistribute A3(GEN_BLOCK(BSi32),BLOCK,GEN_BLOCK(BSk12))    
        -: 3335:          case(2)
        -: 3336:!dvm$ redistribute A3(GEN_BLOCK(BSi32),BLOCK,GEN_BLOCK(BSk22))    
        -: 3337:          case (3)
        -: 3338:!dvm$ redistribute A3(GEN_BLOCK(BSi32),BLOCK,GEN_BLOCK(BSk32))    
        -: 3339:          case(4)
        -: 3340:!dvm$ redistribute A3(GEN_BLOCK(BSi32),BLOCK,GEN_BLOCK(BSk42))    
        -: 3341:          case default 
    #####: 3342:             goto 10
branch  0 never executed
branch  1 never executed
        -: 3343:          endselect  
        -: 3344:
        -: 3345:      case(4)
    #####: 3346:          select case(psize(3))
        -: 3347:          case(1) 
        -: 3348:!dvm$ redistribute A3(GEN_BLOCK(BSi42),BLOCK,GEN_BLOCK(BSk12))    
        -: 3349:          case(2)
        -: 3350:!dvm$ redistribute A3(GEN_BLOCK(BSi42),BLOCK,GEN_BLOCK(BSk22))    
        -: 3351:          case (3)
        -: 3352:!dvm$ redistribute A3(GEN_BLOCK(BSi42),BLOCK,GEN_BLOCK(BSk32))    
        -: 3353:          case(4)
        -: 3354:!dvm$ redistribute A3(GEN_BLOCK(BSi42),BLOCK,GEN_BLOCK(BSk42))    
        -: 3355:          case default 
    #####: 3356:             goto 10
branch  0 never executed
branch  1 never executed
        -: 3357:          endselect  
        -: 3358:
        -: 3359:      case default 
        1: 3360:         goto 10
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
        -: 3361:      endselect  
        -: 3362:
        -: 3363:
        -: 3364:!dvm$ actual (erri)
        -: 3365:
        -: 3366:!dvm$ region
        -: 3367:!dvm$ parallel (i,j,k) on A3(i,j,k), reduction(min(erri))
        8: 3368:      do i=1,AN1
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
       50: 3369:          do j=1,AN2
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
      343: 3370:            do k=1,AN3
branch  0 taken 88% (fallthrough)
branch  1 taken 12%
      294: 3371:                A3(i,j,k) = A3(i,j,k)    
      336: 3372:                if (A3(i,j,k) /= (i*NL/10 + j*NL/100 + k + 10)) then     
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####: 3373:                    erri = min(erri,i*NL/10 + j*NL/100 + k)
        -: 3374:                endif 
        -: 3375:            enddo
        -: 3376:          enddo
        -: 3377:      enddo
        -: 3378:!dvm$ end region
        -: 3379:     
        -: 3380:!dvm$ get_actual (erri)
        -: 3381:
        1: 3382:      if (erri == ER) then     
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3383:          call ansyes(tname)
call    0 returned 100%
        -: 3384:      else
    #####: 3385:          call ansno(tname)
call    0 never executed
        -: 3386:      endif 
        -: 3387:
       1*: 3388: 10   deallocate (A3)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -: 3389:
        1: 3390:      end subroutine distrmix325
        -: 3391:
        -: 3392:
        -: 3393:C -------------------------------------------------
        -: 3394:
function ansyes_ called 24 returned 100% blocks executed 100%
       24: 3395:      subroutine ansyes(name)
        -: 3396:      character(*) name
       24: 3397:      print *,name,'  -  complete'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
       24: 3398:      end
        -: 3399:
function ansno_ called 0 returned 0% blocks executed 0%
    #####: 3400:      subroutine ansno(name)
        -: 3401:      character(*) name
    #####: 3402:      print *,name,'  -  ***error'
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 3403:      end

        -:    0:Source:results/3d/cons34/cons34.f
        -:    0:Graph:./results\3d\cons34\cons34.gcno
        -:    0:Data:./results\3d\cons34\cons34.gcda
        -:    0:Runs:1
function MAIN__ called 1 returned 100% blocks executed 100%
        1:    1:      program CONS34
        -:    2:
        -:    3:c      TESTING OF THE CONSISTENT CLAUSE'.
        -:    4:c      CHECKING DISTRIBUTION WITH THREE BLOCKS.
        -:    5:
        1:    6:      print *,'===START OF CONS34========================'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:    7:C --------------------------------------------------
        -:    8:C consistent arrays with 1 dimensions
        -:    9:C one consistent array and one distributed array
        1:   10:      call cons3401
call    0 returned 100%
        -:   11:C --------------------------------------------------
        -:   12:C consistent arrays with 1 dimensions
        -:   13:C two consistent arrays and one distributed array
        1:   14:      call cons3402
call    0 returned 100%
        -:   15:C --------------------------------------------------
        -:   16:C consistent arrays with 1 dimensions
        -:   17:C two consistent arrays and two distributed arrays
        1:   18:      call cons3403
call    0 returned 100%
        -:   19:C --------------------------------------------------
        -:   20:C consistent arrays with 1 dimensions
        -:   21:C one consistent array and one distributed array
        -:   22:C big data
        1:   23:      call cons3404
call    0 returned 100%
        -:   24:C --------------------------------------------------
        -:   25:C consistent arrays with 2 dimensions
        -:   26:C one consistent array and one distributed array
        1:   27:      call cons3405
call    0 returned 100%
        -:   28:C --------------------------------------------------
        -:   29:C consistent arrays with 2 dimensions
        -:   30:C two consistent arrays and one distributed array
        1:   31:      call cons3406
call    0 returned 100%
        -:   32:C --------------------------------------------------
        -:   33:C consistent arrays with 2 dimensions
        -:   34:C two consistent arrays and two distributed arrays
        1:   35:      call cons3407
call    0 returned 100%
        -:   36:C --------------------------------------------------
        -:   37:C consistent arrays with 2 dimensions
        -:   38:C one consistent array and one distributed array
        -:   39:C big data
        1:   40:      call cons3408
call    0 returned 100%
        -:   41:C --------------------------------------------------
        -:   42:C consistent arrays with 3 dimensions
        -:   43:C one consistent array and one distributed array
        1:   44:      call cons3409
call    0 returned 100%
        -:   45:C --------------------------------------------------
        -:   46:C consistent arrays with 3 dimensions
        -:   47:C two consistent arrays and one distributed array
        1:   48:      call cons3410
call    0 returned 100%
        -:   49:C --------------------------------------------------
        -:   50:C consistent arrays with 3 dimensions
        -:   51:C two consistent arrays and two distributed arrays
        1:   52:      call cons3411
call    0 returned 100%
        -:   53:C --------------------------------------------------
        -:   54:C consistent arrays with 3 dimensions
        -:   55:C one consistent array and one distributed array
        -:   56:C big data
        1:   57:      call cons3412
call    0 returned 100%
        -:   58:C --------------------------------------------------
        -:   59:C consistent arrays with 4 dimensions
        -:   60:C one consistent array and one distributed array
        1:   61:      call cons3413
call    0 returned 100%
        -:   62:C --------------------------------------------------
        -:   63:C consistent arrays with 4 dimensions
        -:   64:C two consistent arrays and one distributed array
        1:   65:      call cons3414
call    0 returned 100%
        -:   66:C --------------------------------------------------
        -:   67:C consistent arrays with 4 dimensions
        -:   68:C two consistent arrays and two distributed arrays
        1:   69:      call cons3415
call    0 returned 100%
        -:   70:C --------------------------------------------------
        -:   71:C consistent arrays with 4 dimensions
        -:   72:C one consistent array and one distributed array
        -:   73:C big data
        1:   74:      call cons3416
call    0 returned 100%
        -:   75:C --------------------------------------------------
        -:   76:
        -:   77:C --------------------------------------------------
        -:   78:C consistent arrays with 1 dimensions
        -:   79:C one consistent array and one distributed array
        1:   80:      call cons3417
call    0 returned 100%
        -:   81:C --------------------------------------------------
        -:   82:C consistent arrays with 1 dimensions
        -:   83:C two consistent arrays and one distributed array
        1:   84:      call cons3418
call    0 returned 100%
        -:   85:C --------------------------------------------------
        -:   86:C consistent arrays with 1 dimensions
        -:   87:C two consistent arrays and two distributed arrays
        1:   88:      call cons3419
call    0 returned 100%
        -:   89:C --------------------------------------------------
        -:   90:C consistent arrays with 1 dimensions
        -:   91:C one consistent array and one distributed array
        -:   92:C big data
        1:   93:      call cons3420
call    0 returned 100%
        -:   94:C --------------------------------------------------
        -:   95:C consistent arrays with 2 dimensions
        -:   96:C one consistent array and one distributed array
        1:   97:      call cons3421
call    0 returned 100%
        -:   98:C --------------------------------------------------
        -:   99:C consistent arrays with 2 dimensions
        -:  100:C two consistent arrays and one distributed array
        1:  101:      call cons3422
call    0 returned 100%
        -:  102:C --------------------------------------------------
        -:  103:C consistent arrays with 2 dimensions
        -:  104:C two consistent arrays and two distributed arrays
        1:  105:      call cons3423
call    0 returned 100%
        -:  106:C --------------------------------------------------
        -:  107:C consistent arrays with 2 dimensions
        -:  108:C one consistent array and one distributed array
        -:  109:C big data
        1:  110:      call cons3424
call    0 returned 100%
        -:  111:C --------------------------------------------------
        -:  112:C consistent arrays with 3 dimensions
        -:  113:C one consistent array and one distributed array
        1:  114:      call cons3425
call    0 returned 100%
        -:  115:C --------------------------------------------------
        -:  116:C consistent arrays with 3 dimensions
        -:  117:C two consistent arrays and one distributed array
        1:  118:      call cons3426
call    0 returned 100%
        -:  119:C --------------------------------------------------
        -:  120:C consistent arrays with 3 dimensions
        -:  121:C two consistent arrays and two distributed arrays
        1:  122:      call cons3427
call    0 returned 100%
        -:  123:C --------------------------------------------------
        -:  124:C consistent arrays with 3 dimensions
        -:  125:C one consistent array and one distributed array
        -:  126:C big data
        1:  127:      call cons3428
call    0 returned 100%
        -:  128:C --------------------------------------------------
        -:  129:C consistent arrays with 4 dimensions
        -:  130:C one consistent array and one distributed array
        1:  131:      call cons3429
call    0 returned 100%
        -:  132:C --------------------------------------------------
        -:  133:C consistent arrays with 4 dimensions
        -:  134:C two consistent arrays and one distributed array
        1:  135:      call cons3430
call    0 returned 100%
        -:  136:C --------------------------------------------------
        -:  137:C consistent arrays with 4 dimensions
        -:  138:C two consistent arrays and two distributed arrays
        1:  139:      call cons3431
call    0 returned 100%
        -:  140:C --------------------------------------------------
        -:  141:C consistent arrays with 4 dimensions
        -:  142:C one consistent array and one distributed array
        -:  143:C big data
        1:  144:      call cons3432
call    0 returned 100%
        -:  145:C --------------------------------------------------
        -:  146:
        -:  147:C --------------------------------------------------
        -:  148:C consistent arrays with 1 dimensions
        -:  149:C one consistent array and one distributed array
        1:  150:      call cons3433
call    0 returned 100%
        -:  151:C --------------------------------------------------
        -:  152:C consistent arrays with 1 dimensions
        -:  153:C two consistent arrays and one distributed array
        1:  154:      call cons3434
call    0 returned 100%
        -:  155:C --------------------------------------------------
        -:  156:C consistent arrays with 1 dimensions
        -:  157:C two consistent arrays and two distributed arrays
        1:  158:      call cons3435
call    0 returned 100%
        -:  159:C --------------------------------------------------
        -:  160:C consistent arrays with 1 dimensions
        -:  161:C one consistent array and one distributed array
        -:  162:C big data
        1:  163:      call cons3436
call    0 returned 100%
        -:  164:C --------------------------------------------------
        -:  165:C consistent arrays with 2 dimensions
        -:  166:C one consistent array and one distributed array
        1:  167:      call cons3437
call    0 returned 100%
        -:  168:C --------------------------------------------------
        -:  169:C consistent arrays with 2 dimensions
        -:  170:C two consistent arrays and one distributed array
        1:  171:      call cons3438
call    0 returned 100%
        -:  172:C --------------------------------------------------
        -:  173:C consistent arrays with 2 dimensions
        -:  174:C two consistent arrays and two distributed arrays
        1:  175:      call cons3439
call    0 returned 100%
        -:  176:C --------------------------------------------------
        -:  177:C consistent arrays with 2 dimensions
        -:  178:C one consistent array and one distributed array
        -:  179:C big data
        1:  180:      call cons3440
call    0 returned 100%
        -:  181:C --------------------------------------------------
        -:  182:C consistent arrays with 3 dimensions
        -:  183:C one consistent array and one distributed array
        1:  184:      call cons3441
call    0 returned 100%
        -:  185:C --------------------------------------------------
        -:  186:C consistent arrays with 3 dimensions
        -:  187:C two consistent arrays and one distributed array
        1:  188:      call cons3442
call    0 returned 100%
        -:  189:C --------------------------------------------------
        -:  190:C consistent arrays with 3 dimensions
        -:  191:C two consistent arrays and two distributed arrays
        1:  192:      call cons3443
call    0 returned 100%
        -:  193:C --------------------------------------------------
        -:  194:C consistent arrays with 3 dimensions
        -:  195:C one consistent array and one distributed array
        -:  196:C big data
        1:  197:      call cons3444
call    0 returned 100%
        -:  198:C --------------------------------------------------
        -:  199:C consistent arrays with 4 dimensions
        -:  200:C one consistent array and one distributed array
        1:  201:      call cons3445
call    0 returned 100%
        -:  202:C --------------------------------------------------
        -:  203:C consistent arrays with 4 dimensions
        -:  204:C two consistent arrays and one distributed array
        1:  205:      call cons3446
call    0 returned 100%
        -:  206:C --------------------------------------------------
        -:  207:C consistent arrays with 4 dimensions
        -:  208:C two consistent arrays and two distributed arrays
        1:  209:      call cons3447
call    0 returned 100%
        -:  210:C --------------------------------------------------
        -:  211:C consistent arrays with 4 dimensions
        -:  212:C one consistent array and one distributed array
        -:  213:C big data
        1:  214:      call cons3448
call    0 returned 100%
        -:  215:C --------------------------------------------------
        -:  216:
        -:  217:C --------------------------------------------------
        -:  218:C consistent arrays with 1 dimensions
        -:  219:C one consistent array and one distributed array
        1:  220:      call cons3449
call    0 returned 100%
        -:  221:C --------------------------------------------------
        -:  222:C consistent arrays with 1 dimensions
        -:  223:C two consistent arrays and one distributed array
        1:  224:      call cons3450
call    0 returned 100%
        -:  225:C --------------------------------------------------
        -:  226:C consistent arrays with 1 dimensions
        -:  227:C two consistent arrays and two distributed arrays
        1:  228:      call cons3451
call    0 returned 100%
        -:  229:C --------------------------------------------------
        -:  230:C consistent arrays with 1 dimensions
        -:  231:C one consistent array and one distributed array
        -:  232:C big data
        1:  233:      call cons3452
call    0 returned 100%
        -:  234:C --------------------------------------------------
        -:  235:C consistent arrays with 2 dimensions
        -:  236:C one consistent array and one distributed array
        1:  237:      call cons3453
call    0 returned 100%
        -:  238:C --------------------------------------------------
        -:  239:C consistent arrays with 2 dimensions
        -:  240:C two consistent arrays and one distributed array
        1:  241:      call cons3454
call    0 returned 100%
        -:  242:C --------------------------------------------------
        -:  243:C consistent arrays with 2 dimensions
        -:  244:C two consistent arrays and two distributed arrays
        1:  245:      call cons3455
call    0 returned 100%
        -:  246:C --------------------------------------------------
        -:  247:C consistent arrays with 2 dimensions
        -:  248:C one consistent array and one distributed array
        -:  249:C big data
        1:  250:      call cons3456
call    0 returned 100%
        -:  251:C --------------------------------------------------
        -:  252:C consistent arrays with 3 dimensions
        -:  253:C one consistent array and one distributed array
        1:  254:      call cons3457
call    0 returned 100%
        -:  255:C --------------------------------------------------
        -:  256:C consistent arrays with 3 dimensions
        -:  257:C two consistent arrays and one distributed array
        1:  258:      call cons3458
call    0 returned 100%
        -:  259:C --------------------------------------------------
        -:  260:C consistent arrays with 3 dimensions
        -:  261:C two consistent arrays and two distributed arrays
        1:  262:      call cons3459
call    0 returned 100%
        -:  263:C --------------------------------------------------
        -:  264:C consistent arrays with 3 dimensions
        -:  265:C one consistent array and one distributed array
        -:  266:C big data
        1:  267:      call cons3460
call    0 returned 100%
        -:  268:C --------------------------------------------------
        -:  269:C consistent arrays with 4 dimensions
        -:  270:C one consistent array and one distributed array
        1:  271:      call cons3461
call    0 returned 100%
        -:  272:C --------------------------------------------------
        -:  273:C consistent arrays with 4 dimensions
        -:  274:C two consistent arrays and one distributed array
        1:  275:      call cons3462
call    0 returned 100%
        -:  276:C --------------------------------------------------
        -:  277:C consistent arrays with 4 dimensions
        -:  278:C two consistent arrays and two distributed arrays
        1:  279:      call cons3463
call    0 returned 100%
        -:  280:C --------------------------------------------------
        -:  281:C consistent arrays with 4 dimensions
        -:  282:C one consistent array and one distributed array
        -:  283:C big data
        1:  284:      call cons3464
call    0 returned 100%
        -:  285:C --------------------------------------------------
        -:  286:C
        1:  287:      print *,'=== END OF CONS34 ========================= '
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
function main called 1 returned 100% blocks executed 100%
        1:  288:      end
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:  289:C ---------------------------------------------cons3401
        -:  290:C consistent arrays with 1 dimensions
        -:  291:C one consistent array and one distributed array
function cons3401_ called 1 returned 100% blocks executed 89%
        1:  292:      subroutine CONS3401
        -:  293:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  294:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -:  295:      character*8 tname
        -:  296:      INTEGER ERROR,IERR
        -:  297:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  298:!DVM$   CONSISTENT V
       1*:  299:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  300:      tname='CONS3401'
        9:  301:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  302:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  303:      ENDDO
        -:  304:!dvm$ region
        -:  305:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  306:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  307:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  308:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  309:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  310:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  311:      ENDDO
        -:  312:      ENDDO
        -:  313:      ENDDO
        -:  314:      ENDDO
        -:  315:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9:  316:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  317:            V(I) = B(I,1,1,1)
        -:  318:      ENDDO
        -:  319:!dvm$ end region
        -:  320:!dvm$ get_actual (V)
        9:  321:      IERR = ER
        9:  322:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9:  323:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  324:                  IERR = C(I)
        -:  325:                  EXIT
        -:  326:            ENDIF
        -:  327:      ENDDO
        1:  328:      ERROR = ER
        -:  329:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  330:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  331:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  332:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  333:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  334:            ERROR = MIN(ERROR,IERR)
        -:  335:      ENDDO
        -:  336:      ENDDO
        -:  337:      ENDDO
        -:  338:      ENDDO
        1:  339:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  340:            call ansyes(tname)
call    0 returned 100%
        -:  341:      ELSE
    #####:  342:            call ansno(tname)
call    0 never executed
        -:  343:      ENDIF
       1*:  344:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  345:      END
        -:  346:C ---------------------------------------------cons3402
        -:  347:C consistent arrays with 1 dimensions
        -:  348:C two consistent arrays and one distributed array
function cons3402_ called 1 returned 100% blocks executed 88%
        1:  349:      subroutine CONS3402
        -:  350:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  351:      integer,allocatable:: B(:,:,:,:),V(:),W(:),C(:)
        -:  352:      character*8 tname
        -:  353:      INTEGER ERROR,IERR
        -:  354:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  355:!DVM$   CONSISTENT V
        -:  356:!DVM$   CONSISTENT W
       1*:  357:      allocate (B(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1:  358:      tname='CONS3402'
        9:  359:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  360:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  361:      ENDDO
        -:  362:!dvm$ region
        -:  363:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  364:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  365:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  366:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  367:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  368:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  369:      ENDDO
        -:  370:      ENDDO
        -:  371:      ENDDO
        -:  372:      ENDDO
        -:  373:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9:  374:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  375:            V(I) = B(I,1,1,1)
        -:  376:      ENDDO
        -:  377:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(W(I))
        9:  378:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  379:            W(I) = B(I,1,1,1)
        -:  380:      ENDDO
        -:  381:!dvm$ end region
        -:  382:!dvm$ get_actual (V, W)
        9:  383:      IERR = ER
        9:  384:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9:  385:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  386:                  IERR = C(I)
        -:  387:                  EXIT
        -:  388:            ENDIF
        -:  389:      ENDDO
        9:  390:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9:  391:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  392:                  IERR = C(I)
        -:  393:                  EXIT
        -:  394:            ENDIF
        -:  395:      ENDDO
        1:  396:      ERROR = ER
        -:  397:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  398:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  399:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  400:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  401:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  402:            ERROR = MIN(ERROR,IERR)
        -:  403:      ENDDO
        -:  404:      ENDDO
        -:  405:      ENDDO
        -:  406:      ENDDO
        1:  407:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  408:            call ansyes(tname)
call    0 returned 100%
        -:  409:      ELSE
    #####:  410:            call ansno(tname)
call    0 never executed
        -:  411:      ENDIF
       1*:  412:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1:  413:      END
        -:  414:C ---------------------------------------------cons3403
        -:  415:C consistent arrays with 1 dimensions
        -:  416:C two consistent arrays and two distributed arrays
function cons3403_ called 1 returned 100% blocks executed 88%
        1:  417:      subroutine CONS3403
        -:  418:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  419:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:),W(:)
        1:  420:     *,C(:)
        -:  421:      character*8 tname
        -:  422:      INTEGER ERROR,IERR
        -:  423:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  424:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   A
        -:  425:!DVM$   CONSISTENT V
        -:  426:!DVM$   CONSISTENT W
       1*:  427:      allocate (B(N,N,N,N),A(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1:  428:      tname='CONS3403'
        9:  429:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  430:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  431:      ENDDO
        -:  432:!dvm$ region
        -:  433:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  434:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  435:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  436:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  437:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  438:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  439:      ENDDO
        -:  440:      ENDDO
        -:  441:      ENDDO
        -:  442:      ENDDO
        -:  443:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9:  444:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  445:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  446:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  447:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  448:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  449:      ENDDO
        -:  450:      ENDDO
        -:  451:      ENDDO
        -:  452:      ENDDO
        -:  453:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9:  454:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  455:            V(I) = B(I,1,1,1)
        -:  456:      ENDDO
        -:  457:!DVM$   PARALLEL  (I)   ON  A(I,1,1,1), CONSISTENT(W(I))
        9:  458:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9:  459:            W(I) = A(I,1,1,1)
        -:  460:      ENDDO
        -:  461:!dvm$ end region
        -:  462:!dvm$ get_actual (V, W)
        9:  463:      IERR = ER
        9:  464:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9:  465:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  466:                  IERR = C(I)
        -:  467:                  EXIT
        -:  468:            ENDIF
        -:  469:      ENDDO
        9:  470:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9:  471:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  472:                  IERR = C(I)
        -:  473:                  EXIT
        -:  474:            ENDIF
        -:  475:      ENDDO
        1:  476:      ERROR = ER
        -:  477:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  478:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  479:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  480:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  481:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  482:            ERROR = MIN(ERROR,IERR)
        -:  483:      ENDDO
        -:  484:      ENDDO
        -:  485:      ENDDO
        -:  486:      ENDDO
        1:  487:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  488:            call ansyes(tname)
call    0 returned 100%
        -:  489:      ELSE
    #####:  490:            call ansno(tname)
call    0 never executed
        -:  491:      ENDIF
       1*:  492:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1:  493:      END
        -:  494:C ---------------------------------------------cons3404
        -:  495:C consistent arrays with 1 dimensions
        -:  496:C one consistent array and one distributed array
        -:  497:C big data
function cons3404_ called 1 returned 100% blocks executed 89%
        1:  498:      subroutine CONS3404
        -:  499:      INTEGER,PARAMETER:: N=16, ER=1000000
        1:  500:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -:  501:      character*8 tname
        -:  502:      INTEGER ERROR,IERR
        -:  503:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  504:!DVM$   CONSISTENT V
       1*:  505:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  506:      tname='CONS3404'
       17:  507:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  508:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  509:      ENDDO
        -:  510:!dvm$ region
        -:  511:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17:  512:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  513:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368:  514:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888:  515:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632:  516:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  517:      ENDDO
        -:  518:      ENDDO
        -:  519:      ENDDO
        -:  520:      ENDDO
        -:  521:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
       17:  522:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17:  523:            V(I) = B(I,1,1,1)
        -:  524:      ENDDO
        -:  525:!dvm$ end region
        -:  526:!dvm$ get_actual (V)
       17:  527:      IERR = ER
       17:  528:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
       17:  529:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  530:                  IERR = C(I)
        -:  531:                  EXIT
        -:  532:            ENDIF
        -:  533:      ENDDO
        1:  534:      ERROR = ER
        -:  535:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17:  536:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  537:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368:  538:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888:  539:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632:  540:            ERROR = MIN(ERROR,IERR)
        -:  541:      ENDDO
        -:  542:      ENDDO
        -:  543:      ENDDO
        -:  544:      ENDDO
        1:  545:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  546:            call ansyes(tname)
call    0 returned 100%
        -:  547:      ELSE
    #####:  548:            call ansno(tname)
call    0 never executed
        -:  549:      ENDIF
       1*:  550:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  551:      END
        -:  552:C ---------------------------------------------cons3405
        -:  553:C consistent arrays with 2 dimensions
        -:  554:C one consistent array and one distributed array
function cons3405_ called 1 returned 100% blocks executed 90%
        1:  555:      subroutine CONS3405
        -:  556:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  557:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -:  558:      character*8 tname
        -:  559:      INTEGER ERROR,IERR
        -:  560:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  561:!DVM$   CONSISTENT V
       1*:  562:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  563:      tname='CONS3405'
        9:  564:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  565:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  566:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  567:      ENDDO
        -:  568:      ENDDO
        -:  569:!dvm$ region
        -:  570:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  571:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  572:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  573:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  574:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  575:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  576:      ENDDO
        -:  577:      ENDDO
        -:  578:      ENDDO
        -:  579:      ENDDO
        -:  580:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9:  581:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  582:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  583:            V(I,J) = B(I,J,1,1)
        -:  584:      ENDDO
        -:  585:      ENDDO
        -:  586:!dvm$ end region
        -:  587:!dvm$ get_actual (V)
        -:  588:      IERR = ER
        9:  589:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  590:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  591:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  592:                  IERR = C(I,J)
        -:  593:                  EXIT
        -:  594:            ENDIF
        -:  595:      ENDDO
        -:  596:      ENDDO
        -:  597:      ERROR = ER
        -:  598:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  599:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  600:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  601:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  602:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  603:            ERROR = MIN(ERROR,IERR)
        -:  604:      ENDDO
        -:  605:      ENDDO
        -:  606:      ENDDO
        -:  607:      ENDDO
        1:  608:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  609:            call ansyes(tname)
call    0 returned 100%
        -:  610:      ELSE
    #####:  611:            call ansno(tname)
call    0 never executed
        -:  612:      ENDIF
       1*:  613:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  614:      END
        -:  615:C ---------------------------------------------cons3406
        -:  616:C consistent arrays with 2 dimensions
        -:  617:C two consistent arrays and one distributed array
function cons3406_ called 1 returned 100% blocks executed 90%
        1:  618:      subroutine CONS3406
        -:  619:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  620:      integer,allocatable:: B(:,:,:,:),V(:,:),W(:,:),C(:,:)
        -:  621:      character*8 tname
        -:  622:      INTEGER ERROR,IERR
        -:  623:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  624:!DVM$   CONSISTENT V
        -:  625:!DVM$   CONSISTENT W
       1*:  626:      allocate (B(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1:  627:      tname='CONS3406'
        9:  628:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  629:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  630:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  631:      ENDDO
        -:  632:      ENDDO
        -:  633:!dvm$ region
        -:  634:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  635:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  636:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  637:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  638:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  639:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  640:      ENDDO
        -:  641:      ENDDO
        -:  642:      ENDDO
        -:  643:      ENDDO
        -:  644:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9:  645:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  646:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  647:            V(I,J) = B(I,J,1,1)
        -:  648:      ENDDO
        -:  649:      ENDDO
        -:  650:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(W(I,J))
        9:  651:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  652:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  653:            W(I,J) = B(I,J,1,1)
        -:  654:      ENDDO
        -:  655:      ENDDO
        -:  656:!dvm$ end region
        -:  657:!dvm$ get_actual (V, W)
        -:  658:      IERR = ER
        9:  659:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  660:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  661:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  662:                  IERR = C(I,J)
        -:  663:                  EXIT
        -:  664:            ENDIF
        -:  665:      ENDDO
        -:  666:      ENDDO
        9:  667:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  668:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  669:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  670:                  IERR = C(I,J)
        -:  671:                  EXIT
        -:  672:            ENDIF
        -:  673:      ENDDO
        -:  674:      ENDDO
        -:  675:      ERROR = ER
        -:  676:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  677:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  678:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  679:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  680:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  681:            ERROR = MIN(ERROR,IERR)
        -:  682:      ENDDO
        -:  683:      ENDDO
        -:  684:      ENDDO
        -:  685:      ENDDO
        1:  686:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  687:            call ansyes(tname)
call    0 returned 100%
        -:  688:      ELSE
    #####:  689:            call ansno(tname)
call    0 never executed
        -:  690:      ENDIF
       1*:  691:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1:  692:      END
        -:  693:C ---------------------------------------------cons3407
        -:  694:C consistent arrays with 2 dimensions
        -:  695:C two consistent arrays and two distributed arrays
function cons3407_ called 1 returned 100% blocks executed 90%
        1:  696:      subroutine CONS3407
        -:  697:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  698:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:),W(:,:)
        1:  699:     *,C(:,:)
        -:  700:      character*8 tname
        -:  701:      INTEGER ERROR,IERR
        -:  702:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  703:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   A
        -:  704:!DVM$   CONSISTENT V
        -:  705:!DVM$   CONSISTENT W
       1*:  706:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1:  707:      tname='CONS3407'
        9:  708:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  709:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  710:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  711:      ENDDO
        -:  712:      ENDDO
        -:  713:!dvm$ region
        -:  714:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  715:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  716:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  717:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  718:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  719:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  720:      ENDDO
        -:  721:      ENDDO
        -:  722:      ENDDO
        -:  723:      ENDDO
        -:  724:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9:  725:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  726:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  727:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  728:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  729:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  730:      ENDDO
        -:  731:      ENDDO
        -:  732:      ENDDO
        -:  733:      ENDDO
        -:  734:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9:  735:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  736:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  737:            V(I,J) = B(I,J,1,1)
        -:  738:      ENDDO
        -:  739:      ENDDO
        -:  740:!DVM$   PARALLEL  (J,I)   ON  A(I,J,1,1), CONSISTENT(W(I,J))
        9:  741:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  742:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  743:            W(I,J) = A(I,J,1,1)
        -:  744:      ENDDO
        -:  745:      ENDDO
        -:  746:!dvm$ end region
        -:  747:!dvm$ get_actual (V, W)
        -:  748:      IERR = ER
        9:  749:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  750:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  751:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  752:                  IERR = C(I,J)
        -:  753:                  EXIT
        -:  754:            ENDIF
        -:  755:      ENDDO
        -:  756:      ENDDO
        9:  757:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  758:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72:  759:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  760:                  IERR = C(I,J)
        -:  761:                  EXIT
        -:  762:            ENDIF
        -:  763:      ENDDO
        -:  764:      ENDDO
        -:  765:      ERROR = ER
        -:  766:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  767:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  768:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  769:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  770:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  771:            ERROR = MIN(ERROR,IERR)
        -:  772:      ENDDO
        -:  773:      ENDDO
        -:  774:      ENDDO
        -:  775:      ENDDO
        1:  776:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  777:            call ansyes(tname)
call    0 returned 100%
        -:  778:      ELSE
    #####:  779:            call ansno(tname)
call    0 never executed
        -:  780:      ENDIF
       1*:  781:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1:  782:      END
        -:  783:C ---------------------------------------------cons3408
        -:  784:C consistent arrays with 2 dimensions
        -:  785:C one consistent array and one distributed array
        -:  786:C big data
function cons3408_ called 1 returned 100% blocks executed 90%
        1:  787:      subroutine CONS3408
        -:  788:      INTEGER,PARAMETER:: N=16, ER=1000000
        1:  789:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -:  790:      character*8 tname
        -:  791:      INTEGER ERROR,IERR
        -:  792:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  793:!DVM$   CONSISTENT V
       1*:  794:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  795:      tname='CONS3408'
       17:  796:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  797:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272:  798:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -:  799:      ENDDO
        -:  800:      ENDDO
        -:  801:!dvm$ region
        -:  802:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17:  803:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  804:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368:  805:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888:  806:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632:  807:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  808:      ENDDO
        -:  809:      ENDDO
        -:  810:      ENDDO
        -:  811:      ENDDO
        -:  812:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
       17:  813:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  814:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272:  815:            V(I,J) = B(I,J,1,1)
        -:  816:      ENDDO
        -:  817:      ENDDO
        -:  818:!dvm$ end region
        -:  819:!dvm$ get_actual (V)
        -:  820:      IERR = ER
       17:  821:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  822:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272:  823:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  824:                  IERR = C(I,J)
        -:  825:                  EXIT
        -:  826:            ENDIF
        -:  827:      ENDDO
        -:  828:      ENDDO
        -:  829:      ERROR = ER
        -:  830:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17:  831:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273:  832:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368:  833:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888:  834:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632:  835:            ERROR = MIN(ERROR,IERR)
        -:  836:      ENDDO
        -:  837:      ENDDO
        -:  838:      ENDDO
        -:  839:      ENDDO
        1:  840:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  841:            call ansyes(tname)
call    0 returned 100%
        -:  842:      ELSE
    #####:  843:            call ansno(tname)
call    0 never executed
        -:  844:      ENDIF
       1*:  845:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  846:      END
        -:  847:C ---------------------------------------------cons3409
        -:  848:C consistent arrays with 3 dimensions
        -:  849:C one consistent array and one distributed array
function cons3409_ called 1 returned 100% blocks executed 92%
        1:  850:      subroutine CONS3409
        -:  851:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  852:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -:  853:      character*8 tname
        -:  854:      INTEGER ERROR,IERR
        -:  855:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  856:!DVM$   CONSISTENT V
       1*:  857:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  858:      tname='CONS3409'
        9:  859:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  860:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  861:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  862:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -:  863:      ENDDO
        -:  864:      ENDDO
        -:  865:      ENDDO
        -:  866:!dvm$ region
        -:  867:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  868:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  869:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  870:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  871:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  872:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  873:      ENDDO
        -:  874:      ENDDO
        -:  875:      ENDDO
        -:  876:      ENDDO
        -:  877:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9:  878:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  879:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  880:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  881:            V(I,J,K) = B(I,J,K,1)
        -:  882:      ENDDO
        -:  883:      ENDDO
        -:  884:      ENDDO
        -:  885:!dvm$ end region
        -:  886:!dvm$ get_actual (V)
        -:  887:      IERR = ER
        9:  888:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  889:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  890:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  891:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  892:                  IERR = C(I,J,K)
        -:  893:                  EXIT
        -:  894:            ENDIF
        -:  895:      ENDDO
        -:  896:      ENDDO
        -:  897:      ENDDO
        -:  898:      ERROR = ER
        -:  899:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  900:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  901:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  902:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  903:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  904:            ERROR = MIN(ERROR,IERR)
        -:  905:      ENDDO
        -:  906:      ENDDO
        -:  907:      ENDDO
        -:  908:      ENDDO
        1:  909:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  910:            call ansyes(tname)
call    0 returned 100%
        -:  911:      ELSE
    #####:  912:            call ansno(tname)
call    0 never executed
        -:  913:      ENDIF
       1*:  914:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1:  915:      END
        -:  916:C ---------------------------------------------cons3410
        -:  917:C consistent arrays with 3 dimensions
        -:  918:C two consistent arrays and one distributed array
function cons3410_ called 1 returned 100% blocks executed 92%
        1:  919:      subroutine CONS3410
        -:  920:      INTEGER,PARAMETER:: N=8, ER=10000
        1:  921:      integer,allocatable:: B(:,:,:,:),V(:,:,:),W(:,:,:),C(:,:,:)
        -:  922:      character*8 tname
        -:  923:      INTEGER ERROR,IERR
        -:  924:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -:  925:!DVM$   CONSISTENT V
        -:  926:!DVM$   CONSISTENT W
       1*:  927:      allocate (B(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1:  928:      tname='CONS3410'
        9:  929:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  930:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  931:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  932:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -:  933:      ENDDO
        -:  934:      ENDDO
        -:  935:      ENDDO
        -:  936:!dvm$ region
        -:  937:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9:  938:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  939:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  940:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  941:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  942:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -:  943:      ENDDO
        -:  944:      ENDDO
        -:  945:      ENDDO
        -:  946:      ENDDO
        -:  947:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9:  948:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  949:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  950:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  951:            V(I,J,K) = B(I,J,K,1)
        -:  952:      ENDDO
        -:  953:      ENDDO
        -:  954:      ENDDO
        -:  955:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(W(I,J,K))
        9:  956:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  957:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  958:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  959:            W(I,J,K) = B(I,J,K,1)
        -:  960:      ENDDO
        -:  961:      ENDDO
        -:  962:      ENDDO
        -:  963:!dvm$ end region
        -:  964:!dvm$ get_actual (V, W)
        -:  965:      IERR = ER
        9:  966:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  967:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  968:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  969:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  970:                  IERR = C(I,J,K)
        -:  971:                  EXIT
        -:  972:            ENDIF
        -:  973:      ENDDO
        -:  974:      ENDDO
        -:  975:      ENDDO
        9:  976:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  977:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  978:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576:  979:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  980:                  IERR = C(I,J,K)
        -:  981:                  EXIT
        -:  982:            ENDIF
        -:  983:      ENDDO
        -:  984:      ENDDO
        -:  985:      ENDDO
        -:  986:      ERROR = ER
        -:  987:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9:  988:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73:  989:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584:  990:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672:  991:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608:  992:            ERROR = MIN(ERROR,IERR)
        -:  993:      ENDDO
        -:  994:      ENDDO
        -:  995:      ENDDO
        -:  996:      ENDDO
        1:  997:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  998:            call ansyes(tname)
call    0 returned 100%
        -:  999:      ELSE
    #####: 1000:            call ansno(tname)
call    0 never executed
        -: 1001:      ENDIF
       1*: 1002:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 1003:      END
        -: 1004:C ---------------------------------------------cons3411
        -: 1005:C consistent arrays with 3 dimensions
        -: 1006:C two consistent arrays and two distributed arrays
function cons3411_ called 1 returned 100% blocks executed 92%
        1: 1007:      subroutine CONS3411
        -: 1008:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1009:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:),W(:,:,:)
        1: 1010:     *,C(:,:,:)
        -: 1011:      character*8 tname
        -: 1012:      INTEGER ERROR,IERR
        -: 1013:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -: 1014:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   A
        -: 1015:!DVM$   CONSISTENT V
        -: 1016:!DVM$   CONSISTENT W
       1*: 1017:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 1018:      tname='CONS3411'
        9: 1019:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1020:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1021:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 1022:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 1023:      ENDDO
        -: 1024:      ENDDO
        -: 1025:      ENDDO
        -: 1026:!dvm$ region
        -: 1027:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1028:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1029:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1030:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1031:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1032:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1033:      ENDDO
        -: 1034:      ENDDO
        -: 1035:      ENDDO
        -: 1036:      ENDDO
        -: 1037:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 1038:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1039:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1040:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1041:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1042:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1043:      ENDDO
        -: 1044:      ENDDO
        -: 1045:      ENDDO
        -: 1046:      ENDDO
        -: 1047:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 1048:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1049:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1050:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 1051:            V(I,J,K) = B(I,J,K,1)
        -: 1052:      ENDDO
        -: 1053:      ENDDO
        -: 1054:      ENDDO
        -: 1055:!DVM$   PARALLEL  (K,J,I)   ON  A(I,J,K,1), CONSISTENT(W(I,J,K))
        9: 1056:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1057:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1058:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 1059:            W(I,J,K) = A(I,J,K,1)
        -: 1060:      ENDDO
        -: 1061:      ENDDO
        -: 1062:      ENDDO
        -: 1063:!dvm$ end region
        -: 1064:!dvm$ get_actual (V, W)
        -: 1065:      IERR = ER
        9: 1066:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1067:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1068:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 1069:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1070:                  IERR = C(I,J,K)
        -: 1071:                  EXIT
        -: 1072:            ENDIF
        -: 1073:      ENDDO
        -: 1074:      ENDDO
        -: 1075:      ENDDO
        9: 1076:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1077:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1078:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 1079:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1080:                  IERR = C(I,J,K)
        -: 1081:                  EXIT
        -: 1082:            ENDIF
        -: 1083:      ENDDO
        -: 1084:      ENDDO
        -: 1085:      ENDDO
        -: 1086:      ERROR = ER
        -: 1087:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1088:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1089:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1090:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1091:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1092:            ERROR = MIN(ERROR,IERR)
        -: 1093:      ENDDO
        -: 1094:      ENDDO
        -: 1095:      ENDDO
        -: 1096:      ENDDO
        1: 1097:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1098:            call ansyes(tname)
call    0 returned 100%
        -: 1099:      ELSE
    #####: 1100:            call ansno(tname)
call    0 never executed
        -: 1101:      ENDIF
       1*: 1102:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 1103:      END
        -: 1104:C ---------------------------------------------cons3412
        -: 1105:C consistent arrays with 3 dimensions
        -: 1106:C one consistent array and one distributed array
        -: 1107:C big data
function cons3412_ called 1 returned 100% blocks executed 92%
        1: 1108:      subroutine CONS3412
        -: 1109:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 1110:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -: 1111:      character*8 tname
        -: 1112:      INTEGER ERROR,IERR
        -: 1113:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -: 1114:!DVM$   CONSISTENT V
       1*: 1115:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1116:      tname='CONS3412'
       17: 1117:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1118:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1119:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 1120:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 1121:      ENDDO
        -: 1122:      ENDDO
        -: 1123:      ENDDO
        -: 1124:!dvm$ region
        -: 1125:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 1126:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1127:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1128:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1129:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1130:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1131:      ENDDO
        -: 1132:      ENDDO
        -: 1133:      ENDDO
        -: 1134:      ENDDO
        -: 1135:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
       17: 1136:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1137:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1138:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 1139:            V(I,J,K) = B(I,J,K,1)
        -: 1140:      ENDDO
        -: 1141:      ENDDO
        -: 1142:      ENDDO
        -: 1143:!dvm$ end region
        -: 1144:!dvm$ get_actual (V)
        -: 1145:      IERR = ER
       17: 1146:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1147:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1148:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 1149:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1150:                  IERR = C(I,J,K)
        -: 1151:                  EXIT
        -: 1152:            ENDIF
        -: 1153:      ENDDO
        -: 1154:      ENDDO
        -: 1155:      ENDDO
        -: 1156:      ERROR = ER
        -: 1157:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 1158:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1159:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1160:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1161:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1162:            ERROR = MIN(ERROR,IERR)
        -: 1163:      ENDDO
        -: 1164:      ENDDO
        -: 1165:      ENDDO
        -: 1166:      ENDDO
        1: 1167:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1168:            call ansyes(tname)
call    0 returned 100%
        -: 1169:      ELSE
    #####: 1170:            call ansno(tname)
call    0 never executed
        -: 1171:      ENDIF
       1*: 1172:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1173:      END
        -: 1174:C ---------------------------------------------cons3413
        -: 1175:C consistent arrays with 4 dimensions
        -: 1176:C one consistent array and one distributed array
function cons3413_ called 1 returned 100% blocks executed 93%
        1: 1177:      subroutine CONS3413
        -: 1178:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1179:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 1180:      character*8 tname
        -: 1181:      INTEGER ERROR,IERR
        -: 1182:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -: 1183:!DVM$   CONSISTENT V
       1*: 1184:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1185:      tname='CONS3413'
        9: 1186:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1187:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1188:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1189:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1190:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1191:      ENDDO
        -: 1192:      ENDDO
        -: 1193:      ENDDO
        -: 1194:      ENDDO
        -: 1195:!dvm$ region
        -: 1196:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1197:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1198:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1199:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1200:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1201:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1202:      ENDDO
        -: 1203:      ENDDO
        -: 1204:      ENDDO
        -: 1205:      ENDDO
        -: 1206:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 1207:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1208:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1209:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1210:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1211:            V(I,J,K,L)=B(I,J,K,L)
        -: 1212:      ENDDO
        -: 1213:      ENDDO
        -: 1214:      ENDDO
        -: 1215:      ENDDO
        -: 1216:!dvm$ end region
        -: 1217:!dvm$ get_actual (V)
        -: 1218:      IERR = ER
        9: 1219:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1220:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1221:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1222:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1223:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1224:                  IERR = C(I,J,K,L)
        -: 1225:                  EXIT
        -: 1226:            ENDIF
        -: 1227:      ENDDO
        -: 1228:      ENDDO
        -: 1229:      ENDDO
        -: 1230:      ENDDO
        -: 1231:      ERROR = ER
        -: 1232:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1233:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1234:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1235:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1236:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1237:            ERROR = MIN(ERROR,IERR)
        -: 1238:      ENDDO
        -: 1239:      ENDDO
        -: 1240:      ENDDO
        -: 1241:      ENDDO
        1: 1242:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1243:            call ansyes(tname)
call    0 returned 100%
        -: 1244:      ELSE
    #####: 1245:            call ansno(tname)
call    0 never executed
        -: 1246:      ENDIF
       1*: 1247:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1248:      END
        -: 1249:C ---------------------------------------------cons3414
        -: 1250:C consistent arrays with 4 dimensions
        -: 1251:C two consistent arrays and one distributed array
function cons3414_ called 1 returned 100% blocks executed 93%
        1: 1252:      subroutine CONS3414
        -: 1253:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1254:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),W(:,:,:,:),C(:,:,:,:)
        -: 1255:      character*8 tname
        -: 1256:      INTEGER ERROR,IERR
        -: 1257:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -: 1258:!DVM$   CONSISTENT V
        -: 1259:!DVM$   CONSISTENT W
       1*: 1260:      allocate (B(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 1261:      tname='CONS3414'
        9: 1262:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1263:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1264:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1265:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1266:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1267:      ENDDO
        -: 1268:      ENDDO
        -: 1269:      ENDDO
        -: 1270:      ENDDO
        -: 1271:!dvm$ region
        -: 1272:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1273:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1274:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1275:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1276:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1277:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1278:      ENDDO
        -: 1279:      ENDDO
        -: 1280:      ENDDO
        -: 1281:      ENDDO
        -: 1282:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 1283:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1284:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1285:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1286:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1287:            V(I,J,K,L)=B(I,J,K,L)
        -: 1288:      ENDDO
        -: 1289:      ENDDO
        -: 1290:      ENDDO
        -: 1291:      ENDDO
        -: 1292:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 1293:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1294:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1295:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1296:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1297:            W(I,J,K,L)=B(I,J,K,L)
        -: 1298:      ENDDO
        -: 1299:      ENDDO
        -: 1300:      ENDDO
        -: 1301:      ENDDO
        -: 1302:!dvm$ end region
        -: 1303:!dvm$ get_actual (V, W)
        -: 1304:      IERR = ER
        9: 1305:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1306:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1307:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1308:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1309:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1310:                  IERR = C(I,J,K,L)
        -: 1311:                  EXIT
        -: 1312:            ENDIF
        -: 1313:      ENDDO
        -: 1314:      ENDDO
        -: 1315:      ENDDO
        -: 1316:      ENDDO
        9: 1317:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1318:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1319:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1320:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1321:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1322:                  IERR = C(I,J,K,L)
        -: 1323:                  EXIT
        -: 1324:            ENDIF
        -: 1325:      ENDDO
        -: 1326:      ENDDO
        -: 1327:      ENDDO
        -: 1328:      ENDDO
        -: 1329:      ERROR = ER
        -: 1330:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1331:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1332:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1333:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1334:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1335:            ERROR = MIN(ERROR,IERR)
        -: 1336:      ENDDO
        -: 1337:      ENDDO
        -: 1338:      ENDDO
        -: 1339:      ENDDO
        1: 1340:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1341:            call ansyes(tname)
call    0 returned 100%
        -: 1342:      ELSE
    #####: 1343:            call ansno(tname)
call    0 never executed
        -: 1344:      ENDIF
       1*: 1345:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 1346:      END
        -: 1347:C ---------------------------------------------cons3415
        -: 1348:C consistent arrays with 4 dimensions
        -: 1349:C two consistent arrays and two distributed arrays
function cons3415_ called 1 returned 100% blocks executed 93%
        1: 1350:      subroutine CONS3415
        -: 1351:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1352:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:,:),W(:,:,:,:)
        1: 1353:     *,C(:,:,:,:)
        -: 1354:      character*8 tname
        -: 1355:      INTEGER ERROR,IERR
        -: 1356:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -: 1357:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   A
        -: 1358:!DVM$   CONSISTENT V
        -: 1359:!DVM$   CONSISTENT W
       1*: 1360:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 1361:      tname='CONS3415'
        9: 1362:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1363:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1364:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1365:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1366:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1367:      ENDDO
        -: 1368:      ENDDO
        -: 1369:      ENDDO
        -: 1370:      ENDDO
        -: 1371:!dvm$ region
        -: 1372:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1373:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1374:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1375:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1376:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1377:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1378:      ENDDO
        -: 1379:      ENDDO
        -: 1380:      ENDDO
        -: 1381:      ENDDO
        -: 1382:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 1383:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1384:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1385:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1386:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1387:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1388:      ENDDO
        -: 1389:      ENDDO
        -: 1390:      ENDDO
        -: 1391:      ENDDO
        -: 1392:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 1393:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1394:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1395:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1396:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1397:            V(I,J,K,L)=B(I,J,K,L)
        -: 1398:      ENDDO
        -: 1399:      ENDDO
        -: 1400:      ENDDO
        -: 1401:      ENDDO
        -: 1402:!DVM$   PARALLEL  (L,K,J,I)   ON  A(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 1403:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1404:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1405:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1406:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1407:            W(I,J,K,L)=A(I,J,K,L)
        -: 1408:      ENDDO
        -: 1409:      ENDDO
        -: 1410:      ENDDO
        -: 1411:      ENDDO
        -: 1412:!dvm$ end region
        -: 1413:!dvm$ get_actual (V, W)
        -: 1414:      IERR = ER
        9: 1415:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1416:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1417:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1418:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1419:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1420:                  IERR = C(I,J,K,L)
        -: 1421:                  EXIT
        -: 1422:            ENDIF
        -: 1423:      ENDDO
        -: 1424:      ENDDO
        -: 1425:      ENDDO
        -: 1426:      ENDDO
        9: 1427:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1428:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1429:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1430:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1431:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1432:                  IERR = C(I,J,K,L)
        -: 1433:                  EXIT
        -: 1434:            ENDIF
        -: 1435:      ENDDO
        -: 1436:      ENDDO
        -: 1437:      ENDDO
        -: 1438:      ENDDO
        -: 1439:      ERROR = ER
        -: 1440:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1441:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1442:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1443:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1444:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1445:            ERROR = MIN(ERROR,IERR)
        -: 1446:      ENDDO
        -: 1447:      ENDDO
        -: 1448:      ENDDO
        -: 1449:      ENDDO
        1: 1450:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1451:            call ansyes(tname)
call    0 returned 100%
        -: 1452:      ELSE
    #####: 1453:            call ansno(tname)
call    0 never executed
        -: 1454:      ENDIF
       1*: 1455:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 1456:      END
        -: 1457:C ---------------------------------------------cons3416
        -: 1458:C consistent arrays with 4 dimensions
        -: 1459:C one consistent array and one distributed array
        -: 1460:C big data
function cons3416_ called 1 returned 100% blocks executed 93%
        1: 1461:      subroutine CONS3416
        -: 1462:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 1463:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 1464:      character*8 tname
        -: 1465:      INTEGER ERROR,IERR
        -: 1466:!DVM$   DISTRIBUTE     ( *, BLOCK, BLOCK, BLOCK )   ::   B
        -: 1467:!DVM$   CONSISTENT V
       1*: 1468:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1469:      tname='CONS3416'
       17: 1470:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1471:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1472:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1473:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1474:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1475:      ENDDO
        -: 1476:      ENDDO
        -: 1477:      ENDDO
        -: 1478:      ENDDO
        -: 1479:!dvm$ region
        -: 1480:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 1481:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1482:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1483:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1484:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1485:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1486:      ENDDO
        -: 1487:      ENDDO
        -: 1488:      ENDDO
        -: 1489:      ENDDO
        -: 1490:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
       17: 1491:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1492:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1493:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1494:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1495:            V(I,J,K,L)=B(I,J,K,L)
        -: 1496:      ENDDO
        -: 1497:      ENDDO
        -: 1498:      ENDDO
        -: 1499:      ENDDO
        -: 1500:!dvm$ end region
        -: 1501:!dvm$ get_actual (V)
        -: 1502:      IERR = ER
       17: 1503:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1504:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1505:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1506:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1507:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1508:                  IERR = C(I,J,K,L)
        -: 1509:                  EXIT
        -: 1510:            ENDIF
        -: 1511:      ENDDO
        -: 1512:      ENDDO
        -: 1513:      ENDDO
        -: 1514:      ENDDO
        -: 1515:      ERROR = ER
        -: 1516:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 1517:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1518:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1519:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1520:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1521:            ERROR = MIN(ERROR,IERR)
        -: 1522:      ENDDO
        -: 1523:      ENDDO
        -: 1524:      ENDDO
        -: 1525:      ENDDO
        1: 1526:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1527:            call ansyes(tname)
call    0 returned 100%
        -: 1528:      ELSE
    #####: 1529:            call ansno(tname)
call    0 never executed
        -: 1530:      ENDIF
       1*: 1531:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1532:      END
        -: 1533:C ---------------------------------------------cons3417
        -: 1534:C consistent arrays with 1 dimensions
        -: 1535:C one consistent array and one distributed array
function cons3417_ called 1 returned 100% blocks executed 89%
        1: 1536:      subroutine CONS3417
        -: 1537:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1538:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -: 1539:      character*8 tname
        -: 1540:      INTEGER ERROR,IERR
        -: 1541:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 1542:!DVM$   CONSISTENT V
       1*: 1543:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1544:      tname='CONS3417'
        9: 1545:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1546:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 1547:      ENDDO
        -: 1548:!dvm$ region
        -: 1549:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1550:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1551:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1552:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1553:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1554:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1555:      ENDDO
        -: 1556:      ENDDO
        -: 1557:      ENDDO
        -: 1558:      ENDDO
        -: 1559:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 1560:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1561:            V(I) = B(I,1,1,1)
        -: 1562:      ENDDO
        -: 1563:!dvm$ end region
        -: 1564:!dvm$ get_actual (V)
        9: 1565:      IERR = ER
        9: 1566:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 1567:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1568:                  IERR = C(I)
        -: 1569:                  EXIT
        -: 1570:            ENDIF
        -: 1571:      ENDDO
        1: 1572:      ERROR = ER
        -: 1573:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1574:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1575:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1576:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1577:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1578:            ERROR = MIN(ERROR,IERR)
        -: 1579:      ENDDO
        -: 1580:      ENDDO
        -: 1581:      ENDDO
        -: 1582:      ENDDO
        1: 1583:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1584:            call ansyes(tname)
call    0 returned 100%
        -: 1585:      ELSE
    #####: 1586:            call ansno(tname)
call    0 never executed
        -: 1587:      ENDIF
       1*: 1588:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1589:      END
        -: 1590:C ---------------------------------------------cons3418
        -: 1591:C consistent arrays with 1 dimensions
        -: 1592:C two consistent arrays and one distributed array
function cons3418_ called 1 returned 100% blocks executed 88%
        1: 1593:      subroutine CONS3418
        -: 1594:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1595:      integer,allocatable:: B(:,:,:,:),V(:),W(:),C(:)
        -: 1596:      character*8 tname
        -: 1597:      INTEGER ERROR,IERR
        -: 1598:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 1599:!DVM$   CONSISTENT V
        -: 1600:!DVM$   CONSISTENT W
       1*: 1601:      allocate (B(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 1602:      tname='CONS3418'
        9: 1603:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1604:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 1605:      ENDDO
        -: 1606:!dvm$ region
        -: 1607:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1608:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1609:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1610:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1611:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1612:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1613:      ENDDO
        -: 1614:      ENDDO
        -: 1615:      ENDDO
        -: 1616:      ENDDO
        -: 1617:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 1618:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1619:            V(I) = B(I,1,1,1)
        -: 1620:      ENDDO
        -: 1621:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(W(I))
        9: 1622:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1623:            W(I) = B(I,1,1,1)
        -: 1624:      ENDDO
        -: 1625:!dvm$ end region
        -: 1626:!dvm$ get_actual (V, W)
        9: 1627:      IERR = ER
        9: 1628:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 1629:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1630:                  IERR = C(I)
        -: 1631:                  EXIT
        -: 1632:            ENDIF
        -: 1633:      ENDDO
        9: 1634:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 1635:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1636:                  IERR = C(I)
        -: 1637:                  EXIT
        -: 1638:            ENDIF
        -: 1639:      ENDDO
        1: 1640:      ERROR = ER
        -: 1641:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1642:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1643:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1644:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1645:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1646:            ERROR = MIN(ERROR,IERR)
        -: 1647:      ENDDO
        -: 1648:      ENDDO
        -: 1649:      ENDDO
        -: 1650:      ENDDO
        1: 1651:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1652:            call ansyes(tname)
call    0 returned 100%
        -: 1653:      ELSE
    #####: 1654:            call ansno(tname)
call    0 never executed
        -: 1655:      ENDIF
       1*: 1656:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 1657:      END
        -: 1658:C ---------------------------------------------cons3419
        -: 1659:C consistent arrays with 1 dimensions
        -: 1660:C two consistent arrays and two distributed arrays
function cons3419_ called 1 returned 100% blocks executed 88%
        1: 1661:      subroutine CONS3419
        -: 1662:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1663:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:),W(:)
        1: 1664:     *,C(:)
        -: 1665:      character*8 tname
        -: 1666:      INTEGER ERROR,IERR
        -: 1667:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 1668:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   A
        -: 1669:!DVM$   CONSISTENT V
        -: 1670:!DVM$   CONSISTENT W
       1*: 1671:      allocate (B(N,N,N,N),A(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 1672:      tname='CONS3419'
        9: 1673:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1674:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 1675:      ENDDO
        -: 1676:!dvm$ region
        -: 1677:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1678:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1679:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1680:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1681:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1682:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1683:      ENDDO
        -: 1684:      ENDDO
        -: 1685:      ENDDO
        -: 1686:      ENDDO
        -: 1687:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 1688:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1689:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1690:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1691:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1692:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1693:      ENDDO
        -: 1694:      ENDDO
        -: 1695:      ENDDO
        -: 1696:      ENDDO
        -: 1697:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 1698:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1699:            V(I) = B(I,1,1,1)
        -: 1700:      ENDDO
        -: 1701:!DVM$   PARALLEL  (I)   ON  A(I,1,1,1), CONSISTENT(W(I))
        9: 1702:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 1703:            W(I) = A(I,1,1,1)
        -: 1704:      ENDDO
        -: 1705:!dvm$ end region
        -: 1706:!dvm$ get_actual (V, W)
        9: 1707:      IERR = ER
        9: 1708:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 1709:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1710:                  IERR = C(I)
        -: 1711:                  EXIT
        -: 1712:            ENDIF
        -: 1713:      ENDDO
        9: 1714:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 1715:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1716:                  IERR = C(I)
        -: 1717:                  EXIT
        -: 1718:            ENDIF
        -: 1719:      ENDDO
        1: 1720:      ERROR = ER
        -: 1721:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1722:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1723:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1724:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1725:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1726:            ERROR = MIN(ERROR,IERR)
        -: 1727:      ENDDO
        -: 1728:      ENDDO
        -: 1729:      ENDDO
        -: 1730:      ENDDO
        1: 1731:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1732:            call ansyes(tname)
call    0 returned 100%
        -: 1733:      ELSE
    #####: 1734:            call ansno(tname)
call    0 never executed
        -: 1735:      ENDIF
       1*: 1736:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 1737:      END
        -: 1738:C ---------------------------------------------cons3420
        -: 1739:C consistent arrays with 1 dimensions
        -: 1740:C one consistent array and one distributed array
        -: 1741:C big data
function cons3420_ called 1 returned 100% blocks executed 89%
        1: 1742:      subroutine CONS3420
        -: 1743:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 1744:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -: 1745:      character*8 tname
        -: 1746:      INTEGER ERROR,IERR
        -: 1747:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 1748:!DVM$   CONSISTENT V
       1*: 1749:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1750:      tname='CONS3420'
       17: 1751:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17: 1752:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 1753:      ENDDO
        -: 1754:!dvm$ region
        -: 1755:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 1756:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1757:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1758:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1759:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1760:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1761:      ENDDO
        -: 1762:      ENDDO
        -: 1763:      ENDDO
        -: 1764:      ENDDO
        -: 1765:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
       17: 1766:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17: 1767:            V(I) = B(I,1,1,1)
        -: 1768:      ENDDO
        -: 1769:!dvm$ end region
        -: 1770:!dvm$ get_actual (V)
       17: 1771:      IERR = ER
       17: 1772:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
       17: 1773:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1774:                  IERR = C(I)
        -: 1775:                  EXIT
        -: 1776:            ENDIF
        -: 1777:      ENDDO
        1: 1778:      ERROR = ER
        -: 1779:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 1780:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 1781:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 1782:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 1783:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 1784:            ERROR = MIN(ERROR,IERR)
        -: 1785:      ENDDO
        -: 1786:      ENDDO
        -: 1787:      ENDDO
        -: 1788:      ENDDO
        1: 1789:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1790:            call ansyes(tname)
call    0 returned 100%
        -: 1791:      ELSE
    #####: 1792:            call ansno(tname)
call    0 never executed
        -: 1793:      ENDIF
       1*: 1794:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1795:      END
        -: 1796:C ---------------------------------------------cons3421
        -: 1797:C consistent arrays with 2 dimensions
        -: 1798:C one consistent array and one distributed array
function cons3421_ called 1 returned 100% blocks executed 90%
        1: 1799:      subroutine CONS3421
        -: 1800:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1801:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -: 1802:      character*8 tname
        -: 1803:      INTEGER ERROR,IERR
        -: 1804:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 1805:!DVM$   CONSISTENT V
       1*: 1806:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1807:      tname='CONS3421'
        9: 1808:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1809:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1810:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 1811:      ENDDO
        -: 1812:      ENDDO
        -: 1813:!dvm$ region
        -: 1814:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1815:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1816:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1817:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1818:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1819:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1820:      ENDDO
        -: 1821:      ENDDO
        -: 1822:      ENDDO
        -: 1823:      ENDDO
        -: 1824:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 1825:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1826:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1827:            V(I,J) = B(I,J,1,1)
        -: 1828:      ENDDO
        -: 1829:      ENDDO
        -: 1830:!dvm$ end region
        -: 1831:!dvm$ get_actual (V)
        -: 1832:      IERR = ER
        9: 1833:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1834:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1835:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1836:                  IERR = C(I,J)
        -: 1837:                  EXIT
        -: 1838:            ENDIF
        -: 1839:      ENDDO
        -: 1840:      ENDDO
        -: 1841:      ERROR = ER
        -: 1842:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1843:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1844:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1845:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1846:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1847:            ERROR = MIN(ERROR,IERR)
        -: 1848:      ENDDO
        -: 1849:      ENDDO
        -: 1850:      ENDDO
        -: 1851:      ENDDO
        1: 1852:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1853:            call ansyes(tname)
call    0 returned 100%
        -: 1854:      ELSE
    #####: 1855:            call ansno(tname)
call    0 never executed
        -: 1856:      ENDIF
       1*: 1857:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 1858:      END
        -: 1859:C ---------------------------------------------cons3422
        -: 1860:C consistent arrays with 2 dimensions
        -: 1861:C two consistent arrays and one distributed array
function cons3422_ called 1 returned 100% blocks executed 90%
        1: 1862:      subroutine CONS3422
        -: 1863:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1864:      integer,allocatable:: B(:,:,:,:),V(:,:),W(:,:),C(:,:)
        -: 1865:      character*8 tname
        -: 1866:      INTEGER ERROR,IERR
        -: 1867:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 1868:!DVM$   CONSISTENT V
        -: 1869:!DVM$   CONSISTENT W
       1*: 1870:      allocate (B(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 1871:      tname='CONS3422'
        9: 1872:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1873:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1874:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 1875:      ENDDO
        -: 1876:      ENDDO
        -: 1877:!dvm$ region
        -: 1878:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1879:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1880:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1881:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1882:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1883:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1884:      ENDDO
        -: 1885:      ENDDO
        -: 1886:      ENDDO
        -: 1887:      ENDDO
        -: 1888:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 1889:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1890:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1891:            V(I,J) = B(I,J,1,1)
        -: 1892:      ENDDO
        -: 1893:      ENDDO
        -: 1894:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(W(I,J))
        9: 1895:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1896:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1897:            W(I,J) = B(I,J,1,1)
        -: 1898:      ENDDO
        -: 1899:      ENDDO
        -: 1900:!dvm$ end region
        -: 1901:!dvm$ get_actual (V, W)
        -: 1902:      IERR = ER
        9: 1903:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1904:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1905:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1906:                  IERR = C(I,J)
        -: 1907:                  EXIT
        -: 1908:            ENDIF
        -: 1909:      ENDDO
        -: 1910:      ENDDO
        9: 1911:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1912:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1913:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1914:                  IERR = C(I,J)
        -: 1915:                  EXIT
        -: 1916:            ENDIF
        -: 1917:      ENDDO
        -: 1918:      ENDDO
        -: 1919:      ERROR = ER
        -: 1920:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 1921:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1922:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1923:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1924:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1925:            ERROR = MIN(ERROR,IERR)
        -: 1926:      ENDDO
        -: 1927:      ENDDO
        -: 1928:      ENDDO
        -: 1929:      ENDDO
        1: 1930:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 1931:            call ansyes(tname)
call    0 returned 100%
        -: 1932:      ELSE
    #####: 1933:            call ansno(tname)
call    0 never executed
        -: 1934:      ENDIF
       1*: 1935:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 1936:      END
        -: 1937:C ---------------------------------------------cons3423
        -: 1938:C consistent arrays with 2 dimensions
        -: 1939:C two consistent arrays and two distributed arrays
function cons3423_ called 1 returned 100% blocks executed 90%
        1: 1940:      subroutine CONS3423
        -: 1941:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 1942:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:),W(:,:)
        1: 1943:     *,C(:,:)
        -: 1944:      character*8 tname
        -: 1945:      INTEGER ERROR,IERR
        -: 1946:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 1947:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   A
        -: 1948:!DVM$   CONSISTENT V
        -: 1949:!DVM$   CONSISTENT W
       1*: 1950:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 1951:      tname='CONS3423'
        9: 1952:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1953:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1954:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 1955:      ENDDO
        -: 1956:      ENDDO
        -: 1957:!dvm$ region
        -: 1958:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 1959:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1960:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1961:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1962:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1963:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1964:      ENDDO
        -: 1965:      ENDDO
        -: 1966:      ENDDO
        -: 1967:      ENDDO
        -: 1968:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 1969:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1970:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 1971:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 1972:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 1973:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 1974:      ENDDO
        -: 1975:      ENDDO
        -: 1976:      ENDDO
        -: 1977:      ENDDO
        -: 1978:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 1979:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1980:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1981:            V(I,J) = B(I,J,1,1)
        -: 1982:      ENDDO
        -: 1983:      ENDDO
        -: 1984:!DVM$   PARALLEL  (J,I)   ON  A(I,J,1,1), CONSISTENT(W(I,J))
        9: 1985:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1986:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1987:            W(I,J) = A(I,J,1,1)
        -: 1988:      ENDDO
        -: 1989:      ENDDO
        -: 1990:!dvm$ end region
        -: 1991:!dvm$ get_actual (V, W)
        -: 1992:      IERR = ER
        9: 1993:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 1994:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 1995:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1996:                  IERR = C(I,J)
        -: 1997:                  EXIT
        -: 1998:            ENDIF
        -: 1999:      ENDDO
        -: 2000:      ENDDO
        9: 2001:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2002:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 2003:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2004:                  IERR = C(I,J)
        -: 2005:                  EXIT
        -: 2006:            ENDIF
        -: 2007:      ENDDO
        -: 2008:      ENDDO
        -: 2009:      ERROR = ER
        -: 2010:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2011:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2012:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2013:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2014:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2015:            ERROR = MIN(ERROR,IERR)
        -: 2016:      ENDDO
        -: 2017:      ENDDO
        -: 2018:      ENDDO
        -: 2019:      ENDDO
        1: 2020:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2021:            call ansyes(tname)
call    0 returned 100%
        -: 2022:      ELSE
    #####: 2023:            call ansno(tname)
call    0 never executed
        -: 2024:      ENDIF
       1*: 2025:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 2026:      END
        -: 2027:C ---------------------------------------------cons3424
        -: 2028:C consistent arrays with 2 dimensions
        -: 2029:C one consistent array and one distributed array
        -: 2030:C big data
function cons3424_ called 1 returned 100% blocks executed 90%
        1: 2031:      subroutine CONS3424
        -: 2032:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 2033:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -: 2034:      character*8 tname
        -: 2035:      INTEGER ERROR,IERR
        -: 2036:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2037:!DVM$   CONSISTENT V
       1*: 2038:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2039:      tname='CONS3424'
       17: 2040:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2041:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 2042:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 2043:      ENDDO
        -: 2044:      ENDDO
        -: 2045:!dvm$ region
        -: 2046:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 2047:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2048:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2049:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2050:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2051:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2052:      ENDDO
        -: 2053:      ENDDO
        -: 2054:      ENDDO
        -: 2055:      ENDDO
        -: 2056:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
       17: 2057:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2058:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 2059:            V(I,J) = B(I,J,1,1)
        -: 2060:      ENDDO
        -: 2061:      ENDDO
        -: 2062:!dvm$ end region
        -: 2063:!dvm$ get_actual (V)
        -: 2064:      IERR = ER
       17: 2065:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2066:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 2067:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2068:                  IERR = C(I,J)
        -: 2069:                  EXIT
        -: 2070:            ENDIF
        -: 2071:      ENDDO
        -: 2072:      ENDDO
        -: 2073:      ERROR = ER
        -: 2074:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 2075:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2076:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2077:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2078:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2079:            ERROR = MIN(ERROR,IERR)
        -: 2080:      ENDDO
        -: 2081:      ENDDO
        -: 2082:      ENDDO
        -: 2083:      ENDDO
        1: 2084:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2085:            call ansyes(tname)
call    0 returned 100%
        -: 2086:      ELSE
    #####: 2087:            call ansno(tname)
call    0 never executed
        -: 2088:      ENDIF
       1*: 2089:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2090:      END
        -: 2091:C ---------------------------------------------cons3425
        -: 2092:C consistent arrays with 3 dimensions
        -: 2093:C one consistent array and one distributed array
function cons3425_ called 1 returned 100% blocks executed 92%
        1: 2094:      subroutine CONS3425
        -: 2095:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2096:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -: 2097:      character*8 tname
        -: 2098:      INTEGER ERROR,IERR
        -: 2099:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2100:!DVM$   CONSISTENT V
       1*: 2101:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2102:      tname='CONS3425'
        9: 2103:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2104:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2105:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2106:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 2107:      ENDDO
        -: 2108:      ENDDO
        -: 2109:      ENDDO
        -: 2110:!dvm$ region
        -: 2111:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2112:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2113:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2114:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2115:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2116:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2117:      ENDDO
        -: 2118:      ENDDO
        -: 2119:      ENDDO
        -: 2120:      ENDDO
        -: 2121:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 2122:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2123:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2124:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2125:            V(I,J,K) = B(I,J,K,1)
        -: 2126:      ENDDO
        -: 2127:      ENDDO
        -: 2128:      ENDDO
        -: 2129:!dvm$ end region
        -: 2130:!dvm$ get_actual (V)
        -: 2131:      IERR = ER
        9: 2132:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2133:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2134:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2135:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2136:                  IERR = C(I,J,K)
        -: 2137:                  EXIT
        -: 2138:            ENDIF
        -: 2139:      ENDDO
        -: 2140:      ENDDO
        -: 2141:      ENDDO
        -: 2142:      ERROR = ER
        -: 2143:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2144:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2145:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2146:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2147:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2148:            ERROR = MIN(ERROR,IERR)
        -: 2149:      ENDDO
        -: 2150:      ENDDO
        -: 2151:      ENDDO
        -: 2152:      ENDDO
        1: 2153:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2154:            call ansyes(tname)
call    0 returned 100%
        -: 2155:      ELSE
    #####: 2156:            call ansno(tname)
call    0 never executed
        -: 2157:      ENDIF
       1*: 2158:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2159:      END
        -: 2160:C ---------------------------------------------cons3426
        -: 2161:C consistent arrays with 3 dimensions
        -: 2162:C two consistent arrays and one distributed array
function cons3426_ called 1 returned 100% blocks executed 92%
        1: 2163:      subroutine CONS3426
        -: 2164:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2165:      integer,allocatable:: B(:,:,:,:),V(:,:,:),W(:,:,:),C(:,:,:)
        -: 2166:      character*8 tname
        -: 2167:      INTEGER ERROR,IERR
        -: 2168:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2169:!DVM$   CONSISTENT V
        -: 2170:!DVM$   CONSISTENT W
       1*: 2171:      allocate (B(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 2172:      tname='CONS3426'
        9: 2173:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2174:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2175:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2176:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 2177:      ENDDO
        -: 2178:      ENDDO
        -: 2179:      ENDDO
        -: 2180:!dvm$ region
        -: 2181:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2182:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2183:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2184:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2185:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2186:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2187:      ENDDO
        -: 2188:      ENDDO
        -: 2189:      ENDDO
        -: 2190:      ENDDO
        -: 2191:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 2192:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2193:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2194:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2195:            V(I,J,K) = B(I,J,K,1)
        -: 2196:      ENDDO
        -: 2197:      ENDDO
        -: 2198:      ENDDO
        -: 2199:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(W(I,J,K))
        9: 2200:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2201:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2202:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2203:            W(I,J,K) = B(I,J,K,1)
        -: 2204:      ENDDO
        -: 2205:      ENDDO
        -: 2206:      ENDDO
        -: 2207:!dvm$ end region
        -: 2208:!dvm$ get_actual (V, W)
        -: 2209:      IERR = ER
        9: 2210:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2211:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2212:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2213:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2214:                  IERR = C(I,J,K)
        -: 2215:                  EXIT
        -: 2216:            ENDIF
        -: 2217:      ENDDO
        -: 2218:      ENDDO
        -: 2219:      ENDDO
        9: 2220:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2221:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2222:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2223:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2224:                  IERR = C(I,J,K)
        -: 2225:                  EXIT
        -: 2226:            ENDIF
        -: 2227:      ENDDO
        -: 2228:      ENDDO
        -: 2229:      ENDDO
        -: 2230:      ERROR = ER
        -: 2231:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2232:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2233:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2234:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2235:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2236:            ERROR = MIN(ERROR,IERR)
        -: 2237:      ENDDO
        -: 2238:      ENDDO
        -: 2239:      ENDDO
        -: 2240:      ENDDO
        1: 2241:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2242:            call ansyes(tname)
call    0 returned 100%
        -: 2243:      ELSE
    #####: 2244:            call ansno(tname)
call    0 never executed
        -: 2245:      ENDIF
       1*: 2246:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 2247:      END
        -: 2248:C ---------------------------------------------cons3427
        -: 2249:C consistent arrays with 3 dimensions
        -: 2250:C two consistent arrays and two distributed arrays
function cons3427_ called 1 returned 100% blocks executed 92%
        1: 2251:      subroutine CONS3427
        -: 2252:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2253:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:),W(:,:,:)
        1: 2254:     *,C(:,:,:)
        -: 2255:      character*8 tname
        -: 2256:      INTEGER ERROR,IERR
        -: 2257:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2258:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   A
        -: 2259:!DVM$   CONSISTENT V
        -: 2260:!DVM$   CONSISTENT W
       1*: 2261:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 2262:      tname='CONS3427'
        9: 2263:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2264:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2265:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2266:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 2267:      ENDDO
        -: 2268:      ENDDO
        -: 2269:      ENDDO
        -: 2270:!dvm$ region
        -: 2271:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2272:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2273:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2274:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2275:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2276:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2277:      ENDDO
        -: 2278:      ENDDO
        -: 2279:      ENDDO
        -: 2280:      ENDDO
        -: 2281:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 2282:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2283:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2284:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2285:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2286:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2287:      ENDDO
        -: 2288:      ENDDO
        -: 2289:      ENDDO
        -: 2290:      ENDDO
        -: 2291:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 2292:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2293:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2294:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2295:            V(I,J,K) = B(I,J,K,1)
        -: 2296:      ENDDO
        -: 2297:      ENDDO
        -: 2298:      ENDDO
        -: 2299:!DVM$   PARALLEL  (K,J,I)   ON  A(I,J,K,1), CONSISTENT(W(I,J,K))
        9: 2300:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2301:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2302:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2303:            W(I,J,K) = A(I,J,K,1)
        -: 2304:      ENDDO
        -: 2305:      ENDDO
        -: 2306:      ENDDO
        -: 2307:!dvm$ end region
        -: 2308:!dvm$ get_actual (V, W)
        -: 2309:      IERR = ER
        9: 2310:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2311:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2312:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2313:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2314:                  IERR = C(I,J,K)
        -: 2315:                  EXIT
        -: 2316:            ENDIF
        -: 2317:      ENDDO
        -: 2318:      ENDDO
        -: 2319:      ENDDO
        9: 2320:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2321:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2322:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 2323:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2324:                  IERR = C(I,J,K)
        -: 2325:                  EXIT
        -: 2326:            ENDIF
        -: 2327:      ENDDO
        -: 2328:      ENDDO
        -: 2329:      ENDDO
        -: 2330:      ERROR = ER
        -: 2331:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2332:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2333:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2334:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2335:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2336:            ERROR = MIN(ERROR,IERR)
        -: 2337:      ENDDO
        -: 2338:      ENDDO
        -: 2339:      ENDDO
        -: 2340:      ENDDO
        1: 2341:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2342:            call ansyes(tname)
call    0 returned 100%
        -: 2343:      ELSE
    #####: 2344:            call ansno(tname)
call    0 never executed
        -: 2345:      ENDIF
       1*: 2346:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 2347:      END
        -: 2348:C ---------------------------------------------cons3428
        -: 2349:C consistent arrays with 3 dimensions
        -: 2350:C one consistent array and one distributed array
        -: 2351:C big data
function cons3428_ called 1 returned 100% blocks executed 92%
        1: 2352:      subroutine CONS3428
        -: 2353:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 2354:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -: 2355:      character*8 tname
        -: 2356:      INTEGER ERROR,IERR
        -: 2357:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2358:!DVM$   CONSISTENT V
       1*: 2359:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2360:      tname='CONS3428'
       17: 2361:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2362:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2363:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 2364:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 2365:      ENDDO
        -: 2366:      ENDDO
        -: 2367:      ENDDO
        -: 2368:!dvm$ region
        -: 2369:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 2370:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2371:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2372:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2373:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2374:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2375:      ENDDO
        -: 2376:      ENDDO
        -: 2377:      ENDDO
        -: 2378:      ENDDO
        -: 2379:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
       17: 2380:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2381:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2382:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 2383:            V(I,J,K) = B(I,J,K,1)
        -: 2384:      ENDDO
        -: 2385:      ENDDO
        -: 2386:      ENDDO
        -: 2387:!dvm$ end region
        -: 2388:!dvm$ get_actual (V)
        -: 2389:      IERR = ER
       17: 2390:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2391:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2392:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 2393:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2394:                  IERR = C(I,J,K)
        -: 2395:                  EXIT
        -: 2396:            ENDIF
        -: 2397:      ENDDO
        -: 2398:      ENDDO
        -: 2399:      ENDDO
        -: 2400:      ERROR = ER
        -: 2401:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 2402:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2403:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2404:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2405:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2406:            ERROR = MIN(ERROR,IERR)
        -: 2407:      ENDDO
        -: 2408:      ENDDO
        -: 2409:      ENDDO
        -: 2410:      ENDDO
        1: 2411:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2412:            call ansyes(tname)
call    0 returned 100%
        -: 2413:      ELSE
    #####: 2414:            call ansno(tname)
call    0 never executed
        -: 2415:      ENDIF
       1*: 2416:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2417:      END
        -: 2418:C ---------------------------------------------cons3429
        -: 2419:C consistent arrays with 4 dimensions
        -: 2420:C one consistent array and one distributed array
function cons3429_ called 1 returned 100% blocks executed 93%
        1: 2421:      subroutine CONS3429
        -: 2422:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2423:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 2424:      character*8 tname
        -: 2425:      INTEGER ERROR,IERR
        -: 2426:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2427:!DVM$   CONSISTENT V
       1*: 2428:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2429:      tname='CONS3429'
        9: 2430:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2431:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2432:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2433:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2434:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2435:      ENDDO
        -: 2436:      ENDDO
        -: 2437:      ENDDO
        -: 2438:      ENDDO
        -: 2439:!dvm$ region
        -: 2440:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2441:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2442:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2443:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2444:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2445:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2446:      ENDDO
        -: 2447:      ENDDO
        -: 2448:      ENDDO
        -: 2449:      ENDDO
        -: 2450:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 2451:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2452:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2453:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2454:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2455:            V(I,J,K,L)=B(I,J,K,L)
        -: 2456:      ENDDO
        -: 2457:      ENDDO
        -: 2458:      ENDDO
        -: 2459:      ENDDO
        -: 2460:!dvm$ end region
        -: 2461:!dvm$ get_actual (V)
        -: 2462:      IERR = ER
        9: 2463:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2464:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2465:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2466:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2467:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2468:                  IERR = C(I,J,K,L)
        -: 2469:                  EXIT
        -: 2470:            ENDIF
        -: 2471:      ENDDO
        -: 2472:      ENDDO
        -: 2473:      ENDDO
        -: 2474:      ENDDO
        -: 2475:      ERROR = ER
        -: 2476:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2477:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2478:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2479:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2480:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2481:            ERROR = MIN(ERROR,IERR)
        -: 2482:      ENDDO
        -: 2483:      ENDDO
        -: 2484:      ENDDO
        -: 2485:      ENDDO
        1: 2486:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2487:            call ansyes(tname)
call    0 returned 100%
        -: 2488:      ELSE
    #####: 2489:            call ansno(tname)
call    0 never executed
        -: 2490:      ENDIF
       1*: 2491:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2492:      END
        -: 2493:C ---------------------------------------------cons3430
        -: 2494:C consistent arrays with 4 dimensions
        -: 2495:C two consistent arrays and one distributed array
function cons3430_ called 1 returned 100% blocks executed 93%
        1: 2496:      subroutine CONS3430
        -: 2497:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2498:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),W(:,:,:,:),C(:,:,:,:)
        -: 2499:      character*8 tname
        -: 2500:      INTEGER ERROR,IERR
        -: 2501:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2502:!DVM$   CONSISTENT V
        -: 2503:!DVM$   CONSISTENT W
       1*: 2504:      allocate (B(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 2505:      tname='CONS3430'
        9: 2506:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2507:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2508:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2509:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2510:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2511:      ENDDO
        -: 2512:      ENDDO
        -: 2513:      ENDDO
        -: 2514:      ENDDO
        -: 2515:!dvm$ region
        -: 2516:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2517:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2518:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2519:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2520:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2521:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2522:      ENDDO
        -: 2523:      ENDDO
        -: 2524:      ENDDO
        -: 2525:      ENDDO
        -: 2526:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 2527:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2528:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2529:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2530:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2531:            V(I,J,K,L)=B(I,J,K,L)
        -: 2532:      ENDDO
        -: 2533:      ENDDO
        -: 2534:      ENDDO
        -: 2535:      ENDDO
        -: 2536:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 2537:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2538:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2539:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2540:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2541:            W(I,J,K,L)=B(I,J,K,L)
        -: 2542:      ENDDO
        -: 2543:      ENDDO
        -: 2544:      ENDDO
        -: 2545:      ENDDO
        -: 2546:!dvm$ end region
        -: 2547:!dvm$ get_actual (V, W)
        -: 2548:      IERR = ER
        9: 2549:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2550:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2551:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2552:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2553:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2554:                  IERR = C(I,J,K,L)
        -: 2555:                  EXIT
        -: 2556:            ENDIF
        -: 2557:      ENDDO
        -: 2558:      ENDDO
        -: 2559:      ENDDO
        -: 2560:      ENDDO
        9: 2561:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2562:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2563:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2564:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2565:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2566:                  IERR = C(I,J,K,L)
        -: 2567:                  EXIT
        -: 2568:            ENDIF
        -: 2569:      ENDDO
        -: 2570:      ENDDO
        -: 2571:      ENDDO
        -: 2572:      ENDDO
        -: 2573:      ERROR = ER
        -: 2574:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2575:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2576:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2577:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2578:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2579:            ERROR = MIN(ERROR,IERR)
        -: 2580:      ENDDO
        -: 2581:      ENDDO
        -: 2582:      ENDDO
        -: 2583:      ENDDO
        1: 2584:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2585:            call ansyes(tname)
call    0 returned 100%
        -: 2586:      ELSE
    #####: 2587:            call ansno(tname)
call    0 never executed
        -: 2588:      ENDIF
       1*: 2589:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 2590:      END
        -: 2591:C ---------------------------------------------cons3431
        -: 2592:C consistent arrays with 4 dimensions
        -: 2593:C two consistent arrays and two distributed arrays
function cons3431_ called 1 returned 100% blocks executed 93%
        1: 2594:      subroutine CONS3431
        -: 2595:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2596:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:,:),W(:,:,:,:)
        1: 2597:     *,C(:,:,:,:)
        -: 2598:      character*8 tname
        -: 2599:      INTEGER ERROR,IERR
        -: 2600:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2601:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   A
        -: 2602:!DVM$   CONSISTENT V
        -: 2603:!DVM$   CONSISTENT W
       1*: 2604:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 2605:      tname='CONS3431'
        9: 2606:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2607:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2608:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2609:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2610:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2611:      ENDDO
        -: 2612:      ENDDO
        -: 2613:      ENDDO
        -: 2614:      ENDDO
        -: 2615:!dvm$ region
        -: 2616:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2617:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2618:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2619:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2620:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2621:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2622:      ENDDO
        -: 2623:      ENDDO
        -: 2624:      ENDDO
        -: 2625:      ENDDO
        -: 2626:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 2627:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2628:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2629:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2630:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2631:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2632:      ENDDO
        -: 2633:      ENDDO
        -: 2634:      ENDDO
        -: 2635:      ENDDO
        -: 2636:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 2637:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2638:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2639:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2640:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2641:            V(I,J,K,L)=B(I,J,K,L)
        -: 2642:      ENDDO
        -: 2643:      ENDDO
        -: 2644:      ENDDO
        -: 2645:      ENDDO
        -: 2646:!DVM$   PARALLEL  (L,K,J,I)   ON  A(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 2647:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2648:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2649:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2650:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2651:            W(I,J,K,L)=A(I,J,K,L)
        -: 2652:      ENDDO
        -: 2653:      ENDDO
        -: 2654:      ENDDO
        -: 2655:      ENDDO
        -: 2656:!dvm$ end region
        -: 2657:!dvm$ get_actual (V, W)
        -: 2658:      IERR = ER
        9: 2659:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2660:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2661:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2662:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2663:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2664:                  IERR = C(I,J,K,L)
        -: 2665:                  EXIT
        -: 2666:            ENDIF
        -: 2667:      ENDDO
        -: 2668:      ENDDO
        -: 2669:      ENDDO
        -: 2670:      ENDDO
        9: 2671:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2672:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2673:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2674:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2675:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2676:                  IERR = C(I,J,K,L)
        -: 2677:                  EXIT
        -: 2678:            ENDIF
        -: 2679:      ENDDO
        -: 2680:      ENDDO
        -: 2681:      ENDDO
        -: 2682:      ENDDO
        -: 2683:      ERROR = ER
        -: 2684:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2685:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2686:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2687:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2688:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2689:            ERROR = MIN(ERROR,IERR)
        -: 2690:      ENDDO
        -: 2691:      ENDDO
        -: 2692:      ENDDO
        -: 2693:      ENDDO
        1: 2694:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2695:            call ansyes(tname)
call    0 returned 100%
        -: 2696:      ELSE
    #####: 2697:            call ansno(tname)
call    0 never executed
        -: 2698:      ENDIF
       1*: 2699:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 2700:      END
        -: 2701:C ---------------------------------------------cons3432
        -: 2702:C consistent arrays with 4 dimensions
        -: 2703:C one consistent array and one distributed array
        -: 2704:C big data
function cons3432_ called 1 returned 100% blocks executed 93%
        1: 2705:      subroutine CONS3432
        -: 2706:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 2707:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 2708:      character*8 tname
        -: 2709:      INTEGER ERROR,IERR
        -: 2710:!DVM$   DISTRIBUTE     ( BLOCK, *, BLOCK, BLOCK )   ::   B
        -: 2711:!DVM$   CONSISTENT V
       1*: 2712:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2713:      tname='CONS3432'
       17: 2714:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2715:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2716:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2717:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2718:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2719:      ENDDO
        -: 2720:      ENDDO
        -: 2721:      ENDDO
        -: 2722:      ENDDO
        -: 2723:!dvm$ region
        -: 2724:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 2725:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2726:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2727:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2728:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2729:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2730:      ENDDO
        -: 2731:      ENDDO
        -: 2732:      ENDDO
        -: 2733:      ENDDO
        -: 2734:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
       17: 2735:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2736:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2737:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2738:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2739:            V(I,J,K,L)=B(I,J,K,L)
        -: 2740:      ENDDO
        -: 2741:      ENDDO
        -: 2742:      ENDDO
        -: 2743:      ENDDO
        -: 2744:!dvm$ end region
        -: 2745:!dvm$ get_actual (V)
        -: 2746:      IERR = ER
       17: 2747:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2748:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2749:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2750:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2751:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2752:                  IERR = C(I,J,K,L)
        -: 2753:                  EXIT
        -: 2754:            ENDIF
        -: 2755:      ENDDO
        -: 2756:      ENDDO
        -: 2757:      ENDDO
        -: 2758:      ENDDO
        -: 2759:      ERROR = ER
        -: 2760:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 2761:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 2762:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 2763:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 2764:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 2765:            ERROR = MIN(ERROR,IERR)
        -: 2766:      ENDDO
        -: 2767:      ENDDO
        -: 2768:      ENDDO
        -: 2769:      ENDDO
        1: 2770:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2771:            call ansyes(tname)
call    0 returned 100%
        -: 2772:      ELSE
    #####: 2773:            call ansno(tname)
call    0 never executed
        -: 2774:      ENDIF
       1*: 2775:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2776:      END
        -: 2777:C ---------------------------------------------cons3433
        -: 2778:C consistent arrays with 1 dimensions
        -: 2779:C one consistent array and one distributed array
function cons3433_ called 1 returned 100% blocks executed 89%
        1: 2780:      subroutine CONS3433
        -: 2781:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2782:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -: 2783:      character*8 tname
        -: 2784:      INTEGER ERROR,IERR
        -: 2785:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 2786:!DVM$   CONSISTENT V
       1*: 2787:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2788:      tname='CONS3433'
        9: 2789:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2790:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 2791:      ENDDO
        -: 2792:!dvm$ region
        -: 2793:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2794:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2795:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2796:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2797:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2798:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2799:      ENDDO
        -: 2800:      ENDDO
        -: 2801:      ENDDO
        -: 2802:      ENDDO
        -: 2803:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 2804:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2805:            V(I) = B(I,1,1,1)
        -: 2806:      ENDDO
        -: 2807:!dvm$ end region
        -: 2808:!dvm$ get_actual (V)
        9: 2809:      IERR = ER
        9: 2810:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 2811:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2812:                  IERR = C(I)
        -: 2813:                  EXIT
        -: 2814:            ENDIF
        -: 2815:      ENDDO
        1: 2816:      ERROR = ER
        -: 2817:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2818:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2819:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2820:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2821:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2822:            ERROR = MIN(ERROR,IERR)
        -: 2823:      ENDDO
        -: 2824:      ENDDO
        -: 2825:      ENDDO
        -: 2826:      ENDDO
        1: 2827:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2828:            call ansyes(tname)
call    0 returned 100%
        -: 2829:      ELSE
    #####: 2830:            call ansno(tname)
call    0 never executed
        -: 2831:      ENDIF
       1*: 2832:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2833:      END
        -: 2834:C ---------------------------------------------cons3434
        -: 2835:C consistent arrays with 1 dimensions
        -: 2836:C two consistent arrays and one distributed array
function cons3434_ called 1 returned 100% blocks executed 88%
        1: 2837:      subroutine CONS3434
        -: 2838:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2839:      integer,allocatable:: B(:,:,:,:),V(:),W(:),C(:)
        -: 2840:      character*8 tname
        -: 2841:      INTEGER ERROR,IERR
        -: 2842:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 2843:!DVM$   CONSISTENT V
        -: 2844:!DVM$   CONSISTENT W
       1*: 2845:      allocate (B(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 2846:      tname='CONS3434'
        9: 2847:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2848:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 2849:      ENDDO
        -: 2850:!dvm$ region
        -: 2851:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2852:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2853:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2854:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2855:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2856:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2857:      ENDDO
        -: 2858:      ENDDO
        -: 2859:      ENDDO
        -: 2860:      ENDDO
        -: 2861:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 2862:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2863:            V(I) = B(I,1,1,1)
        -: 2864:      ENDDO
        -: 2865:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(W(I))
        9: 2866:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2867:            W(I) = B(I,1,1,1)
        -: 2868:      ENDDO
        -: 2869:!dvm$ end region
        -: 2870:!dvm$ get_actual (V, W)
        9: 2871:      IERR = ER
        9: 2872:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 2873:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2874:                  IERR = C(I)
        -: 2875:                  EXIT
        -: 2876:            ENDIF
        -: 2877:      ENDDO
        9: 2878:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 2879:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2880:                  IERR = C(I)
        -: 2881:                  EXIT
        -: 2882:            ENDIF
        -: 2883:      ENDDO
        1: 2884:      ERROR = ER
        -: 2885:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2886:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2887:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2888:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2889:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2890:            ERROR = MIN(ERROR,IERR)
        -: 2891:      ENDDO
        -: 2892:      ENDDO
        -: 2893:      ENDDO
        -: 2894:      ENDDO
        1: 2895:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2896:            call ansyes(tname)
call    0 returned 100%
        -: 2897:      ELSE
    #####: 2898:            call ansno(tname)
call    0 never executed
        -: 2899:      ENDIF
       1*: 2900:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 2901:      END
        -: 2902:C ---------------------------------------------cons3435
        -: 2903:C consistent arrays with 1 dimensions
        -: 2904:C two consistent arrays and two distributed arrays
function cons3435_ called 1 returned 100% blocks executed 88%
        1: 2905:      subroutine CONS3435
        -: 2906:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 2907:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:),W(:)
        1: 2908:     *,C(:)
        -: 2909:      character*8 tname
        -: 2910:      INTEGER ERROR,IERR
        -: 2911:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 2912:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   A
        -: 2913:!DVM$   CONSISTENT V
        -: 2914:!DVM$   CONSISTENT W
       1*: 2915:      allocate (B(N,N,N,N),A(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 2916:      tname='CONS3435'
        9: 2917:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2918:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 2919:      ENDDO
        -: 2920:!dvm$ region
        -: 2921:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 2922:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2923:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2924:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2925:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2926:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2927:      ENDDO
        -: 2928:      ENDDO
        -: 2929:      ENDDO
        -: 2930:      ENDDO
        -: 2931:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 2932:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2933:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2934:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2935:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2936:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 2937:      ENDDO
        -: 2938:      ENDDO
        -: 2939:      ENDDO
        -: 2940:      ENDDO
        -: 2941:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 2942:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2943:            V(I) = B(I,1,1,1)
        -: 2944:      ENDDO
        -: 2945:!DVM$   PARALLEL  (I)   ON  A(I,1,1,1), CONSISTENT(W(I))
        9: 2946:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 2947:            W(I) = A(I,1,1,1)
        -: 2948:      ENDDO
        -: 2949:!dvm$ end region
        -: 2950:!dvm$ get_actual (V, W)
        9: 2951:      IERR = ER
        9: 2952:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 2953:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2954:                  IERR = C(I)
        -: 2955:                  EXIT
        -: 2956:            ENDIF
        -: 2957:      ENDDO
        9: 2958:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 2959:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 2960:                  IERR = C(I)
        -: 2961:                  EXIT
        -: 2962:            ENDIF
        -: 2963:      ENDDO
        1: 2964:      ERROR = ER
        -: 2965:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 2966:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 2967:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 2968:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 2969:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 2970:            ERROR = MIN(ERROR,IERR)
        -: 2971:      ENDDO
        -: 2972:      ENDDO
        -: 2973:      ENDDO
        -: 2974:      ENDDO
        1: 2975:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 2976:            call ansyes(tname)
call    0 returned 100%
        -: 2977:      ELSE
    #####: 2978:            call ansno(tname)
call    0 never executed
        -: 2979:      ENDIF
       1*: 2980:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 2981:      END
        -: 2982:C ---------------------------------------------cons3436
        -: 2983:C consistent arrays with 1 dimensions
        -: 2984:C one consistent array and one distributed array
        -: 2985:C big data
function cons3436_ called 1 returned 100% blocks executed 89%
        1: 2986:      subroutine CONS3436
        -: 2987:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 2988:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -: 2989:      character*8 tname
        -: 2990:      INTEGER ERROR,IERR
        -: 2991:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 2992:!DVM$   CONSISTENT V
       1*: 2993:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 2994:      tname='CONS3436'
       17: 2995:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17: 2996:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 2997:      ENDDO
        -: 2998:!dvm$ region
        -: 2999:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 3000:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3001:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3002:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3003:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3004:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3005:      ENDDO
        -: 3006:      ENDDO
        -: 3007:      ENDDO
        -: 3008:      ENDDO
        -: 3009:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
       17: 3010:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17: 3011:            V(I) = B(I,1,1,1)
        -: 3012:      ENDDO
        -: 3013:!dvm$ end region
        -: 3014:!dvm$ get_actual (V)
       17: 3015:      IERR = ER
       17: 3016:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
       17: 3017:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3018:                  IERR = C(I)
        -: 3019:                  EXIT
        -: 3020:            ENDIF
        -: 3021:      ENDDO
        1: 3022:      ERROR = ER
        -: 3023:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 3024:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3025:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3026:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3027:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3028:            ERROR = MIN(ERROR,IERR)
        -: 3029:      ENDDO
        -: 3030:      ENDDO
        -: 3031:      ENDDO
        -: 3032:      ENDDO
        1: 3033:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3034:            call ansyes(tname)
call    0 returned 100%
        -: 3035:      ELSE
    #####: 3036:            call ansno(tname)
call    0 never executed
        -: 3037:      ENDIF
       1*: 3038:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3039:      END
        -: 3040:C ---------------------------------------------cons3437
        -: 3041:C consistent arrays with 2 dimensions
        -: 3042:C one consistent array and one distributed array
function cons3437_ called 1 returned 100% blocks executed 90%
        1: 3043:      subroutine CONS3437
        -: 3044:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3045:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -: 3046:      character*8 tname
        -: 3047:      INTEGER ERROR,IERR
        -: 3048:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3049:!DVM$   CONSISTENT V
       1*: 3050:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3051:      tname='CONS3437'
        9: 3052:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3053:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3054:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 3055:      ENDDO
        -: 3056:      ENDDO
        -: 3057:!dvm$ region
        -: 3058:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3059:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3060:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3061:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3062:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3063:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3064:      ENDDO
        -: 3065:      ENDDO
        -: 3066:      ENDDO
        -: 3067:      ENDDO
        -: 3068:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 3069:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3070:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3071:            V(I,J) = B(I,J,1,1)
        -: 3072:      ENDDO
        -: 3073:      ENDDO
        -: 3074:!dvm$ end region
        -: 3075:!dvm$ get_actual (V)
        -: 3076:      IERR = ER
        9: 3077:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3078:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3079:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3080:                  IERR = C(I,J)
        -: 3081:                  EXIT
        -: 3082:            ENDIF
        -: 3083:      ENDDO
        -: 3084:      ENDDO
        -: 3085:      ERROR = ER
        -: 3086:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3087:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3088:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3089:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3090:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3091:            ERROR = MIN(ERROR,IERR)
        -: 3092:      ENDDO
        -: 3093:      ENDDO
        -: 3094:      ENDDO
        -: 3095:      ENDDO
        1: 3096:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3097:            call ansyes(tname)
call    0 returned 100%
        -: 3098:      ELSE
    #####: 3099:            call ansno(tname)
call    0 never executed
        -: 3100:      ENDIF
       1*: 3101:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3102:      END
        -: 3103:C ---------------------------------------------cons3438
        -: 3104:C consistent arrays with 2 dimensions
        -: 3105:C two consistent arrays and one distributed array
function cons3438_ called 1 returned 100% blocks executed 90%
        1: 3106:      subroutine CONS3438
        -: 3107:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3108:      integer,allocatable:: B(:,:,:,:),V(:,:),W(:,:),C(:,:)
        -: 3109:      character*8 tname
        -: 3110:      INTEGER ERROR,IERR
        -: 3111:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3112:!DVM$   CONSISTENT V
        -: 3113:!DVM$   CONSISTENT W
       1*: 3114:      allocate (B(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 3115:      tname='CONS3438'
        9: 3116:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3117:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3118:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 3119:      ENDDO
        -: 3120:      ENDDO
        -: 3121:!dvm$ region
        -: 3122:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3123:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3124:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3125:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3126:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3127:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3128:      ENDDO
        -: 3129:      ENDDO
        -: 3130:      ENDDO
        -: 3131:      ENDDO
        -: 3132:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 3133:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3134:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3135:            V(I,J) = B(I,J,1,1)
        -: 3136:      ENDDO
        -: 3137:      ENDDO
        -: 3138:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(W(I,J))
        9: 3139:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3140:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3141:            W(I,J) = B(I,J,1,1)
        -: 3142:      ENDDO
        -: 3143:      ENDDO
        -: 3144:!dvm$ end region
        -: 3145:!dvm$ get_actual (V, W)
        -: 3146:      IERR = ER
        9: 3147:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3148:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3149:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3150:                  IERR = C(I,J)
        -: 3151:                  EXIT
        -: 3152:            ENDIF
        -: 3153:      ENDDO
        -: 3154:      ENDDO
        9: 3155:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3156:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3157:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3158:                  IERR = C(I,J)
        -: 3159:                  EXIT
        -: 3160:            ENDIF
        -: 3161:      ENDDO
        -: 3162:      ENDDO
        -: 3163:      ERROR = ER
        -: 3164:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3165:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3166:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3167:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3168:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3169:            ERROR = MIN(ERROR,IERR)
        -: 3170:      ENDDO
        -: 3171:      ENDDO
        -: 3172:      ENDDO
        -: 3173:      ENDDO
        1: 3174:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3175:            call ansyes(tname)
call    0 returned 100%
        -: 3176:      ELSE
    #####: 3177:            call ansno(tname)
call    0 never executed
        -: 3178:      ENDIF
       1*: 3179:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 3180:      END
        -: 3181:C ---------------------------------------------cons3439
        -: 3182:C consistent arrays with 2 dimensions
        -: 3183:C two consistent arrays and two distributed arrays
function cons3439_ called 1 returned 100% blocks executed 90%
        1: 3184:      subroutine CONS3439
        -: 3185:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3186:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:),W(:,:)
        1: 3187:     *,C(:,:)
        -: 3188:      character*8 tname
        -: 3189:      INTEGER ERROR,IERR
        -: 3190:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3191:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   A
        -: 3192:!DVM$   CONSISTENT V
        -: 3193:!DVM$   CONSISTENT W
       1*: 3194:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 3195:      tname='CONS3439'
        9: 3196:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3197:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3198:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 3199:      ENDDO
        -: 3200:      ENDDO
        -: 3201:!dvm$ region
        -: 3202:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3203:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3204:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3205:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3206:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3207:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3208:      ENDDO
        -: 3209:      ENDDO
        -: 3210:      ENDDO
        -: 3211:      ENDDO
        -: 3212:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 3213:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3214:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3215:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3216:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3217:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3218:      ENDDO
        -: 3219:      ENDDO
        -: 3220:      ENDDO
        -: 3221:      ENDDO
        -: 3222:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 3223:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3224:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3225:            V(I,J) = B(I,J,1,1)
        -: 3226:      ENDDO
        -: 3227:      ENDDO
        -: 3228:!DVM$   PARALLEL  (J,I)   ON  A(I,J,1,1), CONSISTENT(W(I,J))
        9: 3229:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3230:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3231:            W(I,J) = A(I,J,1,1)
        -: 3232:      ENDDO
        -: 3233:      ENDDO
        -: 3234:!dvm$ end region
        -: 3235:!dvm$ get_actual (V, W)
        -: 3236:      IERR = ER
        9: 3237:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3238:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3239:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3240:                  IERR = C(I,J)
        -: 3241:                  EXIT
        -: 3242:            ENDIF
        -: 3243:      ENDDO
        -: 3244:      ENDDO
        9: 3245:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3246:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 3247:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3248:                  IERR = C(I,J)
        -: 3249:                  EXIT
        -: 3250:            ENDIF
        -: 3251:      ENDDO
        -: 3252:      ENDDO
        -: 3253:      ERROR = ER
        -: 3254:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3255:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3256:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3257:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3258:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3259:            ERROR = MIN(ERROR,IERR)
        -: 3260:      ENDDO
        -: 3261:      ENDDO
        -: 3262:      ENDDO
        -: 3263:      ENDDO
        1: 3264:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3265:            call ansyes(tname)
call    0 returned 100%
        -: 3266:      ELSE
    #####: 3267:            call ansno(tname)
call    0 never executed
        -: 3268:      ENDIF
       1*: 3269:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 3270:      END
        -: 3271:C ---------------------------------------------cons3440
        -: 3272:C consistent arrays with 2 dimensions
        -: 3273:C one consistent array and one distributed array
        -: 3274:C big data
function cons3440_ called 1 returned 100% blocks executed 90%
        1: 3275:      subroutine CONS3440
        -: 3276:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 3277:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -: 3278:      character*8 tname
        -: 3279:      INTEGER ERROR,IERR
        -: 3280:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3281:!DVM$   CONSISTENT V
       1*: 3282:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3283:      tname='CONS3440'
       17: 3284:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3285:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 3286:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 3287:      ENDDO
        -: 3288:      ENDDO
        -: 3289:!dvm$ region
        -: 3290:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 3291:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3292:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3293:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3294:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3295:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3296:      ENDDO
        -: 3297:      ENDDO
        -: 3298:      ENDDO
        -: 3299:      ENDDO
        -: 3300:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
       17: 3301:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3302:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 3303:            V(I,J) = B(I,J,1,1)
        -: 3304:      ENDDO
        -: 3305:      ENDDO
        -: 3306:!dvm$ end region
        -: 3307:!dvm$ get_actual (V)
        -: 3308:      IERR = ER
       17: 3309:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3310:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 3311:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3312:                  IERR = C(I,J)
        -: 3313:                  EXIT
        -: 3314:            ENDIF
        -: 3315:      ENDDO
        -: 3316:      ENDDO
        -: 3317:      ERROR = ER
        -: 3318:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 3319:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3320:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3321:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3322:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3323:            ERROR = MIN(ERROR,IERR)
        -: 3324:      ENDDO
        -: 3325:      ENDDO
        -: 3326:      ENDDO
        -: 3327:      ENDDO
        1: 3328:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3329:            call ansyes(tname)
call    0 returned 100%
        -: 3330:      ELSE
    #####: 3331:            call ansno(tname)
call    0 never executed
        -: 3332:      ENDIF
       1*: 3333:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3334:      END
        -: 3335:C ---------------------------------------------cons3441
        -: 3336:C consistent arrays with 3 dimensions
        -: 3337:C one consistent array and one distributed array
function cons3441_ called 1 returned 100% blocks executed 92%
        1: 3338:      subroutine CONS3441
        -: 3339:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3340:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -: 3341:      character*8 tname
        -: 3342:      INTEGER ERROR,IERR
        -: 3343:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3344:!DVM$   CONSISTENT V
       1*: 3345:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3346:      tname='CONS3441'
        9: 3347:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3348:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3349:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3350:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 3351:      ENDDO
        -: 3352:      ENDDO
        -: 3353:      ENDDO
        -: 3354:!dvm$ region
        -: 3355:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3356:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3357:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3358:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3359:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3360:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3361:      ENDDO
        -: 3362:      ENDDO
        -: 3363:      ENDDO
        -: 3364:      ENDDO
        -: 3365:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 3366:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3367:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3368:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3369:            V(I,J,K) = B(I,J,K,1)
        -: 3370:      ENDDO
        -: 3371:      ENDDO
        -: 3372:      ENDDO
        -: 3373:!dvm$ end region
        -: 3374:!dvm$ get_actual (V)
        -: 3375:      IERR = ER
        9: 3376:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3377:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3378:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3379:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3380:                  IERR = C(I,J,K)
        -: 3381:                  EXIT
        -: 3382:            ENDIF
        -: 3383:      ENDDO
        -: 3384:      ENDDO
        -: 3385:      ENDDO
        -: 3386:      ERROR = ER
        -: 3387:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3388:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3389:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3390:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3391:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3392:            ERROR = MIN(ERROR,IERR)
        -: 3393:      ENDDO
        -: 3394:      ENDDO
        -: 3395:      ENDDO
        -: 3396:      ENDDO
        1: 3397:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3398:            call ansyes(tname)
call    0 returned 100%
        -: 3399:      ELSE
    #####: 3400:            call ansno(tname)
call    0 never executed
        -: 3401:      ENDIF
       1*: 3402:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3403:      END
        -: 3404:C ---------------------------------------------cons3442
        -: 3405:C consistent arrays with 3 dimensions
        -: 3406:C two consistent arrays and one distributed array
function cons3442_ called 1 returned 100% blocks executed 92%
        1: 3407:      subroutine CONS3442
        -: 3408:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3409:      integer,allocatable:: B(:,:,:,:),V(:,:,:),W(:,:,:),C(:,:,:)
        -: 3410:      character*8 tname
        -: 3411:      INTEGER ERROR,IERR
        -: 3412:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3413:!DVM$   CONSISTENT V
        -: 3414:!DVM$   CONSISTENT W
       1*: 3415:      allocate (B(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 3416:      tname='CONS3442'
        9: 3417:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3418:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3419:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3420:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 3421:      ENDDO
        -: 3422:      ENDDO
        -: 3423:      ENDDO
        -: 3424:!dvm$ region
        -: 3425:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3426:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3427:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3428:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3429:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3430:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3431:      ENDDO
        -: 3432:      ENDDO
        -: 3433:      ENDDO
        -: 3434:      ENDDO
        -: 3435:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 3436:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3437:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3438:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3439:            V(I,J,K) = B(I,J,K,1)
        -: 3440:      ENDDO
        -: 3441:      ENDDO
        -: 3442:      ENDDO
        -: 3443:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(W(I,J,K))
        9: 3444:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3445:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3446:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3447:            W(I,J,K) = B(I,J,K,1)
        -: 3448:      ENDDO
        -: 3449:      ENDDO
        -: 3450:      ENDDO
        -: 3451:!dvm$ end region
        -: 3452:!dvm$ get_actual (V, W)
        -: 3453:      IERR = ER
        9: 3454:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3455:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3456:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3457:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3458:                  IERR = C(I,J,K)
        -: 3459:                  EXIT
        -: 3460:            ENDIF
        -: 3461:      ENDDO
        -: 3462:      ENDDO
        -: 3463:      ENDDO
        9: 3464:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3465:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3466:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3467:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3468:                  IERR = C(I,J,K)
        -: 3469:                  EXIT
        -: 3470:            ENDIF
        -: 3471:      ENDDO
        -: 3472:      ENDDO
        -: 3473:      ENDDO
        -: 3474:      ERROR = ER
        -: 3475:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3476:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3477:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3478:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3479:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3480:            ERROR = MIN(ERROR,IERR)
        -: 3481:      ENDDO
        -: 3482:      ENDDO
        -: 3483:      ENDDO
        -: 3484:      ENDDO
        1: 3485:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3486:            call ansyes(tname)
call    0 returned 100%
        -: 3487:      ELSE
    #####: 3488:            call ansno(tname)
call    0 never executed
        -: 3489:      ENDIF
       1*: 3490:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 3491:      END
        -: 3492:C ---------------------------------------------cons3443
        -: 3493:C consistent arrays with 3 dimensions
        -: 3494:C two consistent arrays and two distributed arrays
function cons3443_ called 1 returned 100% blocks executed 92%
        1: 3495:      subroutine CONS3443
        -: 3496:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3497:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:),W(:,:,:)
        1: 3498:     *,C(:,:,:)
        -: 3499:      character*8 tname
        -: 3500:      INTEGER ERROR,IERR
        -: 3501:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3502:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   A
        -: 3503:!DVM$   CONSISTENT V
        -: 3504:!DVM$   CONSISTENT W
       1*: 3505:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 3506:      tname='CONS3443'
        9: 3507:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3508:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3509:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3510:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 3511:      ENDDO
        -: 3512:      ENDDO
        -: 3513:      ENDDO
        -: 3514:!dvm$ region
        -: 3515:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3516:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3517:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3518:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3519:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3520:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3521:      ENDDO
        -: 3522:      ENDDO
        -: 3523:      ENDDO
        -: 3524:      ENDDO
        -: 3525:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 3526:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3527:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3528:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3529:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3530:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3531:      ENDDO
        -: 3532:      ENDDO
        -: 3533:      ENDDO
        -: 3534:      ENDDO
        -: 3535:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 3536:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3537:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3538:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3539:            V(I,J,K) = B(I,J,K,1)
        -: 3540:      ENDDO
        -: 3541:      ENDDO
        -: 3542:      ENDDO
        -: 3543:!DVM$   PARALLEL  (K,J,I)   ON  A(I,J,K,1), CONSISTENT(W(I,J,K))
        9: 3544:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3545:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3546:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3547:            W(I,J,K) = A(I,J,K,1)
        -: 3548:      ENDDO
        -: 3549:      ENDDO
        -: 3550:      ENDDO
        -: 3551:!dvm$ end region
        -: 3552:!dvm$ get_actual (V, W)
        -: 3553:      IERR = ER
        9: 3554:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3555:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3556:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3557:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3558:                  IERR = C(I,J,K)
        -: 3559:                  EXIT
        -: 3560:            ENDIF
        -: 3561:      ENDDO
        -: 3562:      ENDDO
        -: 3563:      ENDDO
        9: 3564:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3565:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3566:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 3567:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3568:                  IERR = C(I,J,K)
        -: 3569:                  EXIT
        -: 3570:            ENDIF
        -: 3571:      ENDDO
        -: 3572:      ENDDO
        -: 3573:      ENDDO
        -: 3574:      ERROR = ER
        -: 3575:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3576:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3577:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3578:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3579:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3580:            ERROR = MIN(ERROR,IERR)
        -: 3581:      ENDDO
        -: 3582:      ENDDO
        -: 3583:      ENDDO
        -: 3584:      ENDDO
        1: 3585:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3586:            call ansyes(tname)
call    0 returned 100%
        -: 3587:      ELSE
    #####: 3588:            call ansno(tname)
call    0 never executed
        -: 3589:      ENDIF
       1*: 3590:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 3591:      END
        -: 3592:C ---------------------------------------------cons3444
        -: 3593:C consistent arrays with 3 dimensions
        -: 3594:C one consistent array and one distributed array
        -: 3595:C big data
function cons3444_ called 1 returned 100% blocks executed 92%
        1: 3596:      subroutine CONS3444
        -: 3597:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 3598:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -: 3599:      character*8 tname
        -: 3600:      INTEGER ERROR,IERR
        -: 3601:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3602:!DVM$   CONSISTENT V
       1*: 3603:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3604:      tname='CONS3444'
       17: 3605:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3606:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3607:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 3608:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 3609:      ENDDO
        -: 3610:      ENDDO
        -: 3611:      ENDDO
        -: 3612:!dvm$ region
        -: 3613:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 3614:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3615:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3616:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3617:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3618:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3619:      ENDDO
        -: 3620:      ENDDO
        -: 3621:      ENDDO
        -: 3622:      ENDDO
        -: 3623:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
       17: 3624:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3625:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3626:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 3627:            V(I,J,K) = B(I,J,K,1)
        -: 3628:      ENDDO
        -: 3629:      ENDDO
        -: 3630:      ENDDO
        -: 3631:!dvm$ end region
        -: 3632:!dvm$ get_actual (V)
        -: 3633:      IERR = ER
       17: 3634:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3635:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3636:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 3637:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3638:                  IERR = C(I,J,K)
        -: 3639:                  EXIT
        -: 3640:            ENDIF
        -: 3641:      ENDDO
        -: 3642:      ENDDO
        -: 3643:      ENDDO
        -: 3644:      ERROR = ER
        -: 3645:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 3646:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3647:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3648:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3649:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3650:            ERROR = MIN(ERROR,IERR)
        -: 3651:      ENDDO
        -: 3652:      ENDDO
        -: 3653:      ENDDO
        -: 3654:      ENDDO
        1: 3655:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3656:            call ansyes(tname)
call    0 returned 100%
        -: 3657:      ELSE
    #####: 3658:            call ansno(tname)
call    0 never executed
        -: 3659:      ENDIF
       1*: 3660:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3661:      END
        -: 3662:C ---------------------------------------------cons3445
        -: 3663:C consistent arrays with 4 dimensions
        -: 3664:C one consistent array and one distributed array
function cons3445_ called 1 returned 100% blocks executed 93%
        1: 3665:      subroutine CONS3445
        -: 3666:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3667:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 3668:      character*8 tname
        -: 3669:      INTEGER ERROR,IERR
        -: 3670:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3671:!DVM$   CONSISTENT V
       1*: 3672:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3673:      tname='CONS3445'
        9: 3674:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3675:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3676:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3677:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3678:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3679:      ENDDO
        -: 3680:      ENDDO
        -: 3681:      ENDDO
        -: 3682:      ENDDO
        -: 3683:!dvm$ region
        -: 3684:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3685:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3686:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3687:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3688:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3689:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3690:      ENDDO
        -: 3691:      ENDDO
        -: 3692:      ENDDO
        -: 3693:      ENDDO
        -: 3694:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 3695:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3696:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3697:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3698:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3699:            V(I,J,K,L)=B(I,J,K,L)
        -: 3700:      ENDDO
        -: 3701:      ENDDO
        -: 3702:      ENDDO
        -: 3703:      ENDDO
        -: 3704:!dvm$ end region
        -: 3705:!dvm$ get_actual (V)
        -: 3706:      IERR = ER
        9: 3707:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3708:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3709:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3710:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3711:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3712:                  IERR = C(I,J,K,L)
        -: 3713:                  EXIT
        -: 3714:            ENDIF
        -: 3715:      ENDDO
        -: 3716:      ENDDO
        -: 3717:      ENDDO
        -: 3718:      ENDDO
        -: 3719:      ERROR = ER
        -: 3720:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3721:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3722:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3723:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3724:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3725:            ERROR = MIN(ERROR,IERR)
        -: 3726:      ENDDO
        -: 3727:      ENDDO
        -: 3728:      ENDDO
        -: 3729:      ENDDO
        1: 3730:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3731:            call ansyes(tname)
call    0 returned 100%
        -: 3732:      ELSE
    #####: 3733:            call ansno(tname)
call    0 never executed
        -: 3734:      ENDIF
       1*: 3735:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3736:      END
        -: 3737:C ---------------------------------------------cons3446
        -: 3738:C consistent arrays with 4 dimensions
        -: 3739:C two consistent arrays and one distributed array
function cons3446_ called 1 returned 100% blocks executed 93%
        1: 3740:      subroutine CONS3446
        -: 3741:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3742:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),W(:,:,:,:),C(:,:,:,:)
        -: 3743:      character*8 tname
        -: 3744:      INTEGER ERROR,IERR
        -: 3745:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3746:!DVM$   CONSISTENT V
        -: 3747:!DVM$   CONSISTENT W
       1*: 3748:      allocate (B(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 3749:      tname='CONS3446'
        9: 3750:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3751:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3752:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3753:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3754:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3755:      ENDDO
        -: 3756:      ENDDO
        -: 3757:      ENDDO
        -: 3758:      ENDDO
        -: 3759:!dvm$ region
        -: 3760:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3761:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3762:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3763:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3764:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3765:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3766:      ENDDO
        -: 3767:      ENDDO
        -: 3768:      ENDDO
        -: 3769:      ENDDO
        -: 3770:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 3771:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3772:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3773:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3774:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3775:            V(I,J,K,L)=B(I,J,K,L)
        -: 3776:      ENDDO
        -: 3777:      ENDDO
        -: 3778:      ENDDO
        -: 3779:      ENDDO
        -: 3780:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 3781:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3782:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3783:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3784:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3785:            W(I,J,K,L)=B(I,J,K,L)
        -: 3786:      ENDDO
        -: 3787:      ENDDO
        -: 3788:      ENDDO
        -: 3789:      ENDDO
        -: 3790:!dvm$ end region
        -: 3791:!dvm$ get_actual (V, W)
        -: 3792:      IERR = ER
        9: 3793:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3794:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3795:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3796:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3797:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3798:                  IERR = C(I,J,K,L)
        -: 3799:                  EXIT
        -: 3800:            ENDIF
        -: 3801:      ENDDO
        -: 3802:      ENDDO
        -: 3803:      ENDDO
        -: 3804:      ENDDO
        9: 3805:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3806:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3807:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3808:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3809:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3810:                  IERR = C(I,J,K,L)
        -: 3811:                  EXIT
        -: 3812:            ENDIF
        -: 3813:      ENDDO
        -: 3814:      ENDDO
        -: 3815:      ENDDO
        -: 3816:      ENDDO
        -: 3817:      ERROR = ER
        -: 3818:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3819:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3820:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3821:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3822:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3823:            ERROR = MIN(ERROR,IERR)
        -: 3824:      ENDDO
        -: 3825:      ENDDO
        -: 3826:      ENDDO
        -: 3827:      ENDDO
        1: 3828:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3829:            call ansyes(tname)
call    0 returned 100%
        -: 3830:      ELSE
    #####: 3831:            call ansno(tname)
call    0 never executed
        -: 3832:      ENDIF
       1*: 3833:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 3834:      END
        -: 3835:C ---------------------------------------------cons3447
        -: 3836:C consistent arrays with 4 dimensions
        -: 3837:C two consistent arrays and two distributed arrays
function cons3447_ called 1 returned 100% blocks executed 93%
        1: 3838:      subroutine CONS3447
        -: 3839:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 3840:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:,:),W(:,:,:,:)
        1: 3841:     *,C(:,:,:,:)
        -: 3842:      character*8 tname
        -: 3843:      INTEGER ERROR,IERR
        -: 3844:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3845:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   A
        -: 3846:!DVM$   CONSISTENT V
        -: 3847:!DVM$   CONSISTENT W
       1*: 3848:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 3849:      tname='CONS3447'
        9: 3850:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3851:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3852:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3853:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3854:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3855:      ENDDO
        -: 3856:      ENDDO
        -: 3857:      ENDDO
        -: 3858:      ENDDO
        -: 3859:!dvm$ region
        -: 3860:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 3861:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3862:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3863:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3864:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3865:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3866:      ENDDO
        -: 3867:      ENDDO
        -: 3868:      ENDDO
        -: 3869:      ENDDO
        -: 3870:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 3871:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3872:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3873:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3874:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3875:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3876:      ENDDO
        -: 3877:      ENDDO
        -: 3878:      ENDDO
        -: 3879:      ENDDO
        -: 3880:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 3881:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3882:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3883:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3884:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3885:            V(I,J,K,L)=B(I,J,K,L)
        -: 3886:      ENDDO
        -: 3887:      ENDDO
        -: 3888:      ENDDO
        -: 3889:      ENDDO
        -: 3890:!DVM$   PARALLEL  (L,K,J,I)   ON  A(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 3891:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3892:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3893:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3894:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3895:            W(I,J,K,L)=A(I,J,K,L)
        -: 3896:      ENDDO
        -: 3897:      ENDDO
        -: 3898:      ENDDO
        -: 3899:      ENDDO
        -: 3900:!dvm$ end region
        -: 3901:!dvm$ get_actual (V, W)
        -: 3902:      IERR = ER
        9: 3903:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3904:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3905:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3906:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3907:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3908:                  IERR = C(I,J,K,L)
        -: 3909:                  EXIT
        -: 3910:            ENDIF
        -: 3911:      ENDDO
        -: 3912:      ENDDO
        -: 3913:      ENDDO
        -: 3914:      ENDDO
        9: 3915:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3916:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3917:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3918:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3919:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3920:                  IERR = C(I,J,K,L)
        -: 3921:                  EXIT
        -: 3922:            ENDIF
        -: 3923:      ENDDO
        -: 3924:      ENDDO
        -: 3925:      ENDDO
        -: 3926:      ENDDO
        -: 3927:      ERROR = ER
        -: 3928:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 3929:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 3930:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 3931:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 3932:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 3933:            ERROR = MIN(ERROR,IERR)
        -: 3934:      ENDDO
        -: 3935:      ENDDO
        -: 3936:      ENDDO
        -: 3937:      ENDDO
        1: 3938:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 3939:            call ansyes(tname)
call    0 returned 100%
        -: 3940:      ELSE
    #####: 3941:            call ansno(tname)
call    0 never executed
        -: 3942:      ENDIF
       1*: 3943:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 3944:      END
        -: 3945:C ---------------------------------------------cons3448
        -: 3946:C consistent arrays with 4 dimensions
        -: 3947:C one consistent array and one distributed array
        -: 3948:C big data
function cons3448_ called 1 returned 100% blocks executed 93%
        1: 3949:      subroutine CONS3448
        -: 3950:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 3951:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 3952:      character*8 tname
        -: 3953:      INTEGER ERROR,IERR
        -: 3954:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, *, BLOCK )   ::   B
        -: 3955:!DVM$   CONSISTENT V
       1*: 3956:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 3957:      tname='CONS3448'
       17: 3958:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3959:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3960:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3961:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3962:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3963:      ENDDO
        -: 3964:      ENDDO
        -: 3965:      ENDDO
        -: 3966:      ENDDO
        -: 3967:!dvm$ region
        -: 3968:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 3969:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3970:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3971:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3972:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3973:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 3974:      ENDDO
        -: 3975:      ENDDO
        -: 3976:      ENDDO
        -: 3977:      ENDDO
        -: 3978:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
       17: 3979:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3980:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3981:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3982:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3983:            V(I,J,K,L)=B(I,J,K,L)
        -: 3984:      ENDDO
        -: 3985:      ENDDO
        -: 3986:      ENDDO
        -: 3987:      ENDDO
        -: 3988:!dvm$ end region
        -: 3989:!dvm$ get_actual (V)
        -: 3990:      IERR = ER
       17: 3991:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 3992:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 3993:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 3994:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 3995:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 3996:                  IERR = C(I,J,K,L)
        -: 3997:                  EXIT
        -: 3998:            ENDIF
        -: 3999:      ENDDO
        -: 4000:      ENDDO
        -: 4001:      ENDDO
        -: 4002:      ENDDO
        -: 4003:      ERROR = ER
        -: 4004:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 4005:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4006:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4007:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 4008:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 4009:            ERROR = MIN(ERROR,IERR)
        -: 4010:      ENDDO
        -: 4011:      ENDDO
        -: 4012:      ENDDO
        -: 4013:      ENDDO
        1: 4014:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4015:            call ansyes(tname)
call    0 returned 100%
        -: 4016:      ELSE
    #####: 4017:            call ansno(tname)
call    0 never executed
        -: 4018:      ENDIF
       1*: 4019:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4020:      END
        -: 4021:C ---------------------------------------------cons3449
        -: 4022:C consistent arrays with 1 dimensions
        -: 4023:C one consistent array and one distributed array
function cons3449_ called 1 returned 100% blocks executed 89%
        1: 4024:      subroutine CONS3449
        -: 4025:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4026:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -: 4027:      character*8 tname
        -: 4028:      INTEGER ERROR,IERR
        -: 4029:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4030:!DVM$   CONSISTENT V
       1*: 4031:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4032:      tname='CONS3449'
        9: 4033:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4034:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4035:      ENDDO
        -: 4036:!dvm$ region
        -: 4037:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4038:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4039:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4040:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4041:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4042:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4043:      ENDDO
        -: 4044:      ENDDO
        -: 4045:      ENDDO
        -: 4046:      ENDDO
        -: 4047:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 4048:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4049:            V(I) = B(I,1,1,1)
        -: 4050:      ENDDO
        -: 4051:!dvm$ end region
        -: 4052:!dvm$ get_actual (V)
        9: 4053:      IERR = ER
        9: 4054:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 4055:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4056:                  IERR = C(I)
        -: 4057:                  EXIT
        -: 4058:            ENDIF
        -: 4059:      ENDDO
        1: 4060:      ERROR = ER
        -: 4061:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4062:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4063:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4064:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4065:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4066:            ERROR = MIN(ERROR,IERR)
        -: 4067:      ENDDO
        -: 4068:      ENDDO
        -: 4069:      ENDDO
        -: 4070:      ENDDO
        1: 4071:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4072:            call ansyes(tname)
call    0 returned 100%
        -: 4073:      ELSE
    #####: 4074:            call ansno(tname)
call    0 never executed
        -: 4075:      ENDIF
       1*: 4076:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4077:      END
        -: 4078:C ---------------------------------------------cons3450
        -: 4079:C consistent arrays with 1 dimensions
        -: 4080:C two consistent arrays and one distributed array
function cons3450_ called 1 returned 100% blocks executed 88%
        1: 4081:      subroutine CONS3450
        -: 4082:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4083:      integer,allocatable:: B(:,:,:,:),V(:),W(:),C(:)
        -: 4084:      character*8 tname
        -: 4085:      INTEGER ERROR,IERR
        -: 4086:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4087:!DVM$   CONSISTENT V
        -: 4088:!DVM$   CONSISTENT W
       1*: 4089:      allocate (B(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 4090:      tname='CONS3450'
        9: 4091:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4092:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4093:      ENDDO
        -: 4094:!dvm$ region
        -: 4095:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4096:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4097:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4098:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4099:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4100:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4101:      ENDDO
        -: 4102:      ENDDO
        -: 4103:      ENDDO
        -: 4104:      ENDDO
        -: 4105:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 4106:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4107:            V(I) = B(I,1,1,1)
        -: 4108:      ENDDO
        -: 4109:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(W(I))
        9: 4110:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4111:            W(I) = B(I,1,1,1)
        -: 4112:      ENDDO
        -: 4113:!dvm$ end region
        -: 4114:!dvm$ get_actual (V, W)
        9: 4115:      IERR = ER
        9: 4116:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 4117:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4118:                  IERR = C(I)
        -: 4119:                  EXIT
        -: 4120:            ENDIF
        -: 4121:      ENDDO
        9: 4122:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 4123:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4124:                  IERR = C(I)
        -: 4125:                  EXIT
        -: 4126:            ENDIF
        -: 4127:      ENDDO
        1: 4128:      ERROR = ER
        -: 4129:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4130:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4131:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4132:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4133:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4134:            ERROR = MIN(ERROR,IERR)
        -: 4135:      ENDDO
        -: 4136:      ENDDO
        -: 4137:      ENDDO
        -: 4138:      ENDDO
        1: 4139:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4140:            call ansyes(tname)
call    0 returned 100%
        -: 4141:      ELSE
    #####: 4142:            call ansno(tname)
call    0 never executed
        -: 4143:      ENDIF
       1*: 4144:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 4145:      END
        -: 4146:C ---------------------------------------------cons3451
        -: 4147:C consistent arrays with 1 dimensions
        -: 4148:C two consistent arrays and two distributed arrays
function cons3451_ called 1 returned 100% blocks executed 88%
        1: 4149:      subroutine CONS3451
        -: 4150:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4151:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:),W(:)
        1: 4152:     *,C(:)
        -: 4153:      character*8 tname
        -: 4154:      INTEGER ERROR,IERR
        -: 4155:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4156:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   A
        -: 4157:!DVM$   CONSISTENT V
        -: 4158:!DVM$   CONSISTENT W
       1*: 4159:      allocate (B(N,N,N,N),A(N,N,N,N),V(N),W(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 4160:      tname='CONS3451'
        9: 4161:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4162:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4163:      ENDDO
        -: 4164:!dvm$ region
        -: 4165:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4166:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4167:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4168:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4169:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4170:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4171:      ENDDO
        -: 4172:      ENDDO
        -: 4173:      ENDDO
        -: 4174:      ENDDO
        -: 4175:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 4176:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4177:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4178:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4179:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4180:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4181:      ENDDO
        -: 4182:      ENDDO
        -: 4183:      ENDDO
        -: 4184:      ENDDO
        -: 4185:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
        9: 4186:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4187:            V(I) = B(I,1,1,1)
        -: 4188:      ENDDO
        -: 4189:!DVM$   PARALLEL  (I)   ON  A(I,1,1,1), CONSISTENT(W(I))
        9: 4190:      DO I = 1, N
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
        9: 4191:            W(I) = A(I,1,1,1)
        -: 4192:      ENDDO
        -: 4193:!dvm$ end region
        -: 4194:!dvm$ get_actual (V, W)
        9: 4195:      IERR = ER
        9: 4196:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 4197:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4198:                  IERR = C(I)
        -: 4199:                  EXIT
        -: 4200:            ENDIF
        -: 4201:      ENDDO
        9: 4202:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
        9: 4203:            IF(W(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4204:                  IERR = C(I)
        -: 4205:                  EXIT
        -: 4206:            ENDIF
        -: 4207:      ENDDO
        1: 4208:      ERROR = ER
        -: 4209:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4210:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4211:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4212:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4213:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4214:            ERROR = MIN(ERROR,IERR)
        -: 4215:      ENDDO
        -: 4216:      ENDDO
        -: 4217:      ENDDO
        -: 4218:      ENDDO
        1: 4219:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4220:            call ansyes(tname)
call    0 returned 100%
        -: 4221:      ELSE
    #####: 4222:            call ansno(tname)
call    0 never executed
        -: 4223:      ENDIF
       1*: 4224:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 4225:      END
        -: 4226:C ---------------------------------------------cons3452
        -: 4227:C consistent arrays with 1 dimensions
        -: 4228:C one consistent array and one distributed array
        -: 4229:C big data
function cons3452_ called 1 returned 100% blocks executed 89%
        1: 4230:      subroutine CONS3452
        -: 4231:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 4232:      integer,allocatable:: B(:,:,:,:),V(:),C(:)
        -: 4233:      character*8 tname
        -: 4234:      INTEGER ERROR,IERR
        -: 4235:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4236:!DVM$   CONSISTENT V
       1*: 4237:      allocate (B(N,N,N,N),V(N),C(N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4238:      tname='CONS3452'
       17: 4239:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17: 4240:            C(I)=I+(N-1)+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4241:      ENDDO
        -: 4242:!dvm$ region
        -: 4243:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 4244:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4245:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4246:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 4247:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 4248:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4249:      ENDDO
        -: 4250:      ENDDO
        -: 4251:      ENDDO
        -: 4252:      ENDDO
        -: 4253:!DVM$   PARALLEL  (I)   ON  B(I,1,1,1), CONSISTENT(V(I))
       17: 4254:      DO I = 1, N
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
       17: 4255:            V(I) = B(I,1,1,1)
        -: 4256:      ENDDO
        -: 4257:!dvm$ end region
        -: 4258:!dvm$ get_actual (V)
       17: 4259:      IERR = ER
       17: 4260:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
       17: 4261:            IF(V(I) .NE. C(I)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4262:                  IERR = C(I)
        -: 4263:                  EXIT
        -: 4264:            ENDIF
        -: 4265:      ENDDO
        1: 4266:      ERROR = ER
        -: 4267:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 4268:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4269:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4270:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 4271:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 4272:            ERROR = MIN(ERROR,IERR)
        -: 4273:      ENDDO
        -: 4274:      ENDDO
        -: 4275:      ENDDO
        -: 4276:      ENDDO
        1: 4277:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4278:            call ansyes(tname)
call    0 returned 100%
        -: 4279:      ELSE
    #####: 4280:            call ansno(tname)
call    0 never executed
        -: 4281:      ENDIF
       1*: 4282:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4283:      END
        -: 4284:C ---------------------------------------------cons3453
        -: 4285:C consistent arrays with 2 dimensions
        -: 4286:C one consistent array and one distributed array
function cons3453_ called 1 returned 100% blocks executed 90%
        1: 4287:      subroutine CONS3453
        -: 4288:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4289:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -: 4290:      character*8 tname
        -: 4291:      INTEGER ERROR,IERR
        -: 4292:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4293:!DVM$   CONSISTENT V
       1*: 4294:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4295:      tname='CONS3453'
        9: 4296:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4297:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4298:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4299:      ENDDO
        -: 4300:      ENDDO
        -: 4301:!dvm$ region
        -: 4302:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4303:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4304:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4305:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4306:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4307:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4308:      ENDDO
        -: 4309:      ENDDO
        -: 4310:      ENDDO
        -: 4311:      ENDDO
        -: 4312:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 4313:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4314:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4315:            V(I,J) = B(I,J,1,1)
        -: 4316:      ENDDO
        -: 4317:      ENDDO
        -: 4318:!dvm$ end region
        -: 4319:!dvm$ get_actual (V)
        -: 4320:      IERR = ER
        9: 4321:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4322:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4323:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4324:                  IERR = C(I,J)
        -: 4325:                  EXIT
        -: 4326:            ENDIF
        -: 4327:      ENDDO
        -: 4328:      ENDDO
        -: 4329:      ERROR = ER
        -: 4330:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4331:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4332:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4333:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4334:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4335:            ERROR = MIN(ERROR,IERR)
        -: 4336:      ENDDO
        -: 4337:      ENDDO
        -: 4338:      ENDDO
        -: 4339:      ENDDO
        1: 4340:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4341:            call ansyes(tname)
call    0 returned 100%
        -: 4342:      ELSE
    #####: 4343:            call ansno(tname)
call    0 never executed
        -: 4344:      ENDIF
       1*: 4345:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4346:      END
        -: 4347:C ---------------------------------------------cons3454
        -: 4348:C consistent arrays with 2 dimensions
        -: 4349:C two consistent arrays and one distributed array
function cons3454_ called 1 returned 100% blocks executed 90%
        1: 4350:      subroutine CONS3454
        -: 4351:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4352:      integer,allocatable:: B(:,:,:,:),V(:,:),W(:,:),C(:,:)
        -: 4353:      character*8 tname
        -: 4354:      INTEGER ERROR,IERR
        -: 4355:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4356:!DVM$   CONSISTENT V
        -: 4357:!DVM$   CONSISTENT W
       1*: 4358:      allocate (B(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 4359:      tname='CONS3454'
        9: 4360:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4361:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4362:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4363:      ENDDO
        -: 4364:      ENDDO
        -: 4365:!dvm$ region
        -: 4366:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4367:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4368:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4369:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4370:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4371:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4372:      ENDDO
        -: 4373:      ENDDO
        -: 4374:      ENDDO
        -: 4375:      ENDDO
        -: 4376:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 4377:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4378:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4379:            V(I,J) = B(I,J,1,1)
        -: 4380:      ENDDO
        -: 4381:      ENDDO
        -: 4382:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(W(I,J))
        9: 4383:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4384:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4385:            W(I,J) = B(I,J,1,1)
        -: 4386:      ENDDO
        -: 4387:      ENDDO
        -: 4388:!dvm$ end region
        -: 4389:!dvm$ get_actual (V, W)
        -: 4390:      IERR = ER
        9: 4391:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4392:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4393:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4394:                  IERR = C(I,J)
        -: 4395:                  EXIT
        -: 4396:            ENDIF
        -: 4397:      ENDDO
        -: 4398:      ENDDO
        9: 4399:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4400:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4401:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4402:                  IERR = C(I,J)
        -: 4403:                  EXIT
        -: 4404:            ENDIF
        -: 4405:      ENDDO
        -: 4406:      ENDDO
        -: 4407:      ERROR = ER
        -: 4408:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4409:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4410:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4411:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4412:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4413:            ERROR = MIN(ERROR,IERR)
        -: 4414:      ENDDO
        -: 4415:      ENDDO
        -: 4416:      ENDDO
        -: 4417:      ENDDO
        1: 4418:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4419:            call ansyes(tname)
call    0 returned 100%
        -: 4420:      ELSE
    #####: 4421:            call ansno(tname)
call    0 never executed
        -: 4422:      ENDIF
       1*: 4423:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 4424:      END
        -: 4425:C ---------------------------------------------cons3455
        -: 4426:C consistent arrays with 2 dimensions
        -: 4427:C two consistent arrays and two distributed arrays
function cons3455_ called 1 returned 100% blocks executed 90%
        1: 4428:      subroutine CONS3455
        -: 4429:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4430:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:),W(:,:)
        1: 4431:     *,C(:,:)
        -: 4432:      character*8 tname
        -: 4433:      INTEGER ERROR,IERR
        -: 4434:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4435:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   A
        -: 4436:!DVM$   CONSISTENT V
        -: 4437:!DVM$   CONSISTENT W
       1*: 4438:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N),W(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 4439:      tname='CONS3455'
        9: 4440:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4441:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4442:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4443:      ENDDO
        -: 4444:      ENDDO
        -: 4445:!dvm$ region
        -: 4446:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4447:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4448:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4449:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4450:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4451:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4452:      ENDDO
        -: 4453:      ENDDO
        -: 4454:      ENDDO
        -: 4455:      ENDDO
        -: 4456:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 4457:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4458:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4459:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4460:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4461:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4462:      ENDDO
        -: 4463:      ENDDO
        -: 4464:      ENDDO
        -: 4465:      ENDDO
        -: 4466:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
        9: 4467:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4468:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4469:            V(I,J) = B(I,J,1,1)
        -: 4470:      ENDDO
        -: 4471:      ENDDO
        -: 4472:!DVM$   PARALLEL  (J,I)   ON  A(I,J,1,1), CONSISTENT(W(I,J))
        9: 4473:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4474:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4475:            W(I,J) = A(I,J,1,1)
        -: 4476:      ENDDO
        -: 4477:      ENDDO
        -: 4478:!dvm$ end region
        -: 4479:!dvm$ get_actual (V, W)
        -: 4480:      IERR = ER
        9: 4481:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4482:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4483:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4484:                  IERR = C(I,J)
        -: 4485:                  EXIT
        -: 4486:            ENDIF
        -: 4487:      ENDDO
        -: 4488:      ENDDO
        9: 4489:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4490:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       72: 4491:            IF(W(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4492:                  IERR = C(I,J)
        -: 4493:                  EXIT
        -: 4494:            ENDIF
        -: 4495:      ENDDO
        -: 4496:      ENDDO
        -: 4497:      ERROR = ER
        -: 4498:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4499:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4500:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4501:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4502:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4503:            ERROR = MIN(ERROR,IERR)
        -: 4504:      ENDDO
        -: 4505:      ENDDO
        -: 4506:      ENDDO
        -: 4507:      ENDDO
        1: 4508:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4509:            call ansyes(tname)
call    0 returned 100%
        -: 4510:      ELSE
    #####: 4511:            call ansno(tname)
call    0 never executed
        -: 4512:      ENDIF
       1*: 4513:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 4514:      END
        -: 4515:C ---------------------------------------------cons3456
        -: 4516:C consistent arrays with 2 dimensions
        -: 4517:C one consistent array and one distributed array
        -: 4518:C big data
function cons3456_ called 1 returned 100% blocks executed 90%
        1: 4519:      subroutine CONS3456
        -: 4520:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 4521:      integer,allocatable:: B(:,:,:,:),V(:,:),C(:,:)
        -: 4522:      character*8 tname
        -: 4523:      INTEGER ERROR,IERR
        -: 4524:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4525:!DVM$   CONSISTENT V
       1*: 4526:      allocate (B(N,N,N,N),V(N,N),C(N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4527:      tname='CONS3456'
       17: 4528:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4529:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 4530:            C(I,J)=I+(N-1)*J+(N-1)*(N-1)+(N-1)*(N-1)*(N-1)
        -: 4531:      ENDDO
        -: 4532:      ENDDO
        -: 4533:!dvm$ region
        -: 4534:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 4535:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4536:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4537:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 4538:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 4539:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4540:      ENDDO
        -: 4541:      ENDDO
        -: 4542:      ENDDO
        -: 4543:      ENDDO
        -: 4544:!DVM$   PARALLEL  (J,I)   ON  B(I,J,1,1), CONSISTENT(V(I,J))
       17: 4545:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4546:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 4547:            V(I,J) = B(I,J,1,1)
        -: 4548:      ENDDO
        -: 4549:      ENDDO
        -: 4550:!dvm$ end region
        -: 4551:!dvm$ get_actual (V)
        -: 4552:      IERR = ER
       17: 4553:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4554:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      272: 4555:            IF(V(I,J) .NE. C(I,J)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4556:                  IERR = C(I,J)
        -: 4557:                  EXIT
        -: 4558:            ENDIF
        -: 4559:      ENDDO
        -: 4560:      ENDDO
        -: 4561:      ERROR = ER
        -: 4562:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 4563:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4564:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4565:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 4566:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 4567:            ERROR = MIN(ERROR,IERR)
        -: 4568:      ENDDO
        -: 4569:      ENDDO
        -: 4570:      ENDDO
        -: 4571:      ENDDO
        1: 4572:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4573:            call ansyes(tname)
call    0 returned 100%
        -: 4574:      ELSE
    #####: 4575:            call ansno(tname)
call    0 never executed
        -: 4576:      ENDIF
       1*: 4577:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4578:      END
        -: 4579:C ---------------------------------------------cons3457
        -: 4580:C consistent arrays with 3 dimensions
        -: 4581:C one consistent array and one distributed array
function cons3457_ called 1 returned 100% blocks executed 92%
        1: 4582:      subroutine CONS3457
        -: 4583:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4584:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -: 4585:      character*8 tname
        -: 4586:      INTEGER ERROR,IERR
        -: 4587:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4588:!DVM$   CONSISTENT V
       1*: 4589:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4590:      tname='CONS3457'
        9: 4591:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4592:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4593:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4594:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 4595:      ENDDO
        -: 4596:      ENDDO
        -: 4597:      ENDDO
        -: 4598:!dvm$ region
        -: 4599:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4600:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4601:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4602:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4603:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4604:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4605:      ENDDO
        -: 4606:      ENDDO
        -: 4607:      ENDDO
        -: 4608:      ENDDO
        -: 4609:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 4610:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4611:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4612:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4613:            V(I,J,K) = B(I,J,K,1)
        -: 4614:      ENDDO
        -: 4615:      ENDDO
        -: 4616:      ENDDO
        -: 4617:!dvm$ end region
        -: 4618:!dvm$ get_actual (V)
        -: 4619:      IERR = ER
        9: 4620:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4621:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4622:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4623:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4624:                  IERR = C(I,J,K)
        -: 4625:                  EXIT
        -: 4626:            ENDIF
        -: 4627:      ENDDO
        -: 4628:      ENDDO
        -: 4629:      ENDDO
        -: 4630:      ERROR = ER
        -: 4631:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4632:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4633:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4634:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4635:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4636:            ERROR = MIN(ERROR,IERR)
        -: 4637:      ENDDO
        -: 4638:      ENDDO
        -: 4639:      ENDDO
        -: 4640:      ENDDO
        1: 4641:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4642:            call ansyes(tname)
call    0 returned 100%
        -: 4643:      ELSE
    #####: 4644:            call ansno(tname)
call    0 never executed
        -: 4645:      ENDIF
       1*: 4646:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4647:      END
        -: 4648:C ---------------------------------------------cons3458
        -: 4649:C consistent arrays with 3 dimensions
        -: 4650:C two consistent arrays and one distributed array
function cons3458_ called 1 returned 100% blocks executed 92%
        1: 4651:      subroutine CONS3458
        -: 4652:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4653:      integer,allocatable:: B(:,:,:,:),V(:,:,:),W(:,:,:),C(:,:,:)
        -: 4654:      character*8 tname
        -: 4655:      INTEGER ERROR,IERR
        -: 4656:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4657:!DVM$   CONSISTENT V
        -: 4658:!DVM$   CONSISTENT W
       1*: 4659:      allocate (B(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 4660:      tname='CONS3458'
        9: 4661:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4662:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4663:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4664:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 4665:      ENDDO
        -: 4666:      ENDDO
        -: 4667:      ENDDO
        -: 4668:!dvm$ region
        -: 4669:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4670:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4671:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4672:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4673:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4674:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4675:      ENDDO
        -: 4676:      ENDDO
        -: 4677:      ENDDO
        -: 4678:      ENDDO
        -: 4679:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 4680:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4681:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4682:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4683:            V(I,J,K) = B(I,J,K,1)
        -: 4684:      ENDDO
        -: 4685:      ENDDO
        -: 4686:      ENDDO
        -: 4687:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(W(I,J,K))
        9: 4688:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4689:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4690:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4691:            W(I,J,K) = B(I,J,K,1)
        -: 4692:      ENDDO
        -: 4693:      ENDDO
        -: 4694:      ENDDO
        -: 4695:!dvm$ end region
        -: 4696:!dvm$ get_actual (V, W)
        -: 4697:      IERR = ER
        9: 4698:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4699:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4700:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4701:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4702:                  IERR = C(I,J,K)
        -: 4703:                  EXIT
        -: 4704:            ENDIF
        -: 4705:      ENDDO
        -: 4706:      ENDDO
        -: 4707:      ENDDO
        9: 4708:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4709:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4710:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4711:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4712:                  IERR = C(I,J,K)
        -: 4713:                  EXIT
        -: 4714:            ENDIF
        -: 4715:      ENDDO
        -: 4716:      ENDDO
        -: 4717:      ENDDO
        -: 4718:      ERROR = ER
        -: 4719:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4720:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4721:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4722:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4723:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4724:            ERROR = MIN(ERROR,IERR)
        -: 4725:      ENDDO
        -: 4726:      ENDDO
        -: 4727:      ENDDO
        -: 4728:      ENDDO
        1: 4729:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4730:            call ansyes(tname)
call    0 returned 100%
        -: 4731:      ELSE
    #####: 4732:            call ansno(tname)
call    0 never executed
        -: 4733:      ENDIF
       1*: 4734:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 4735:      END
        -: 4736:C ---------------------------------------------cons3459
        -: 4737:C consistent arrays with 3 dimensions
        -: 4738:C two consistent arrays and two distributed arrays
function cons3459_ called 1 returned 100% blocks executed 92%
        1: 4739:      subroutine CONS3459
        -: 4740:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4741:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:),W(:,:,:)
        1: 4742:     *,C(:,:,:)
        -: 4743:      character*8 tname
        -: 4744:      INTEGER ERROR,IERR
        -: 4745:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4746:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   A
        -: 4747:!DVM$   CONSISTENT V
        -: 4748:!DVM$   CONSISTENT W
       1*: 4749:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N),W(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 4750:      tname='CONS3459'
        9: 4751:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4752:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4753:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4754:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 4755:      ENDDO
        -: 4756:      ENDDO
        -: 4757:      ENDDO
        -: 4758:!dvm$ region
        -: 4759:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4760:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4761:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4762:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4763:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4764:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4765:      ENDDO
        -: 4766:      ENDDO
        -: 4767:      ENDDO
        -: 4768:      ENDDO
        -: 4769:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 4770:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4771:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4772:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4773:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4774:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4775:      ENDDO
        -: 4776:      ENDDO
        -: 4777:      ENDDO
        -: 4778:      ENDDO
        -: 4779:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
        9: 4780:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4781:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4782:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4783:            V(I,J,K) = B(I,J,K,1)
        -: 4784:      ENDDO
        -: 4785:      ENDDO
        -: 4786:      ENDDO
        -: 4787:!DVM$   PARALLEL  (K,J,I)   ON  A(I,J,K,1), CONSISTENT(W(I,J,K))
        9: 4788:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4789:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4790:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4791:            W(I,J,K) = A(I,J,K,1)
        -: 4792:      ENDDO
        -: 4793:      ENDDO
        -: 4794:      ENDDO
        -: 4795:!dvm$ end region
        -: 4796:!dvm$ get_actual (V, W)
        -: 4797:      IERR = ER
        9: 4798:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4799:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4800:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4801:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4802:                  IERR = C(I,J,K)
        -: 4803:                  EXIT
        -: 4804:            ENDIF
        -: 4805:      ENDDO
        -: 4806:      ENDDO
        -: 4807:      ENDDO
        9: 4808:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4809:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4810:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      576: 4811:            IF(W(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4812:                  IERR = C(I,J,K)
        -: 4813:                  EXIT
        -: 4814:            ENDIF
        -: 4815:      ENDDO
        -: 4816:      ENDDO
        -: 4817:      ENDDO
        -: 4818:      ERROR = ER
        -: 4819:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4820:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4821:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4822:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4823:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4824:            ERROR = MIN(ERROR,IERR)
        -: 4825:      ENDDO
        -: 4826:      ENDDO
        -: 4827:      ENDDO
        -: 4828:      ENDDO
        1: 4829:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4830:            call ansyes(tname)
call    0 returned 100%
        -: 4831:      ELSE
    #####: 4832:            call ansno(tname)
call    0 never executed
        -: 4833:      ENDIF
       1*: 4834:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 4835:      END
        -: 4836:C ---------------------------------------------cons3460
        -: 4837:C consistent arrays with 3 dimensions
        -: 4838:C one consistent array and one distributed array
        -: 4839:C big data
function cons3460_ called 1 returned 100% blocks executed 92%
        1: 4840:      subroutine CONS3460
        -: 4841:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 4842:      integer,allocatable:: B(:,:,:,:),V(:,:,:),C(:,:,:)
        -: 4843:      character*8 tname
        -: 4844:      INTEGER ERROR,IERR
        -: 4845:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4846:!DVM$   CONSISTENT V
       1*: 4847:      allocate (B(N,N,N,N),V(N,N,N),C(N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4848:      tname='CONS3460'
       17: 4849:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4850:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4851:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 4852:            C(I,J,K)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)
        -: 4853:      ENDDO
        -: 4854:      ENDDO
        -: 4855:      ENDDO
        -: 4856:!dvm$ region
        -: 4857:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 4858:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4859:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4860:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 4861:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 4862:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4863:      ENDDO
        -: 4864:      ENDDO
        -: 4865:      ENDDO
        -: 4866:      ENDDO
        -: 4867:!DVM$   PARALLEL  (K,J,I)   ON  B(I,J,K,1), CONSISTENT(V(I,J,K))
       17: 4868:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4869:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4870:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 4871:            V(I,J,K) = B(I,J,K,1)
        -: 4872:      ENDDO
        -: 4873:      ENDDO
        -: 4874:      ENDDO
        -: 4875:!dvm$ end region
        -: 4876:!dvm$ get_actual (V)
        -: 4877:      IERR = ER
       17: 4878:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4879:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4880:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4352: 4881:            IF(V(I,J,K) .NE. C(I,J,K)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4882:                  IERR = C(I,J,K)
        -: 4883:                  EXIT
        -: 4884:            ENDIF
        -: 4885:      ENDDO
        -: 4886:      ENDDO
        -: 4887:      ENDDO
        -: 4888:      ERROR = ER
        -: 4889:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 4890:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 4891:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 4892:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 4893:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 4894:            ERROR = MIN(ERROR,IERR)
        -: 4895:      ENDDO
        -: 4896:      ENDDO
        -: 4897:      ENDDO
        -: 4898:      ENDDO
        1: 4899:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4900:            call ansyes(tname)
call    0 returned 100%
        -: 4901:      ELSE
    #####: 4902:            call ansno(tname)
call    0 never executed
        -: 4903:      ENDIF
       1*: 4904:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4905:      END
        -: 4906:C ---------------------------------------------cons3461
        -: 4907:C consistent arrays with 4 dimensions
        -: 4908:C one consistent array and one distributed array
function cons3461_ called 1 returned 100% blocks executed 93%
        1: 4909:      subroutine CONS3461
        -: 4910:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4911:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 4912:      character*8 tname
        -: 4913:      INTEGER ERROR,IERR
        -: 4914:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4915:!DVM$   CONSISTENT V
       1*: 4916:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4917:      tname='CONS3461'
        9: 4918:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4919:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4920:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4921:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4922:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4923:      ENDDO
        -: 4924:      ENDDO
        -: 4925:      ENDDO
        -: 4926:      ENDDO
        -: 4927:!dvm$ region
        -: 4928:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 4929:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4930:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4931:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4932:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4933:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4934:      ENDDO
        -: 4935:      ENDDO
        -: 4936:      ENDDO
        -: 4937:      ENDDO
        -: 4938:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 4939:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4940:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4941:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4942:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4943:            V(I,J,K,L)=B(I,J,K,L)
        -: 4944:      ENDDO
        -: 4945:      ENDDO
        -: 4946:      ENDDO
        -: 4947:      ENDDO
        -: 4948:!dvm$ end region
        -: 4949:!dvm$ get_actual (V)
        -: 4950:      IERR = ER
        9: 4951:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4952:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4953:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4954:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4955:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 4956:                  IERR = C(I,J,K,L)
        -: 4957:                  EXIT
        -: 4958:            ENDIF
        -: 4959:      ENDDO
        -: 4960:      ENDDO
        -: 4961:      ENDDO
        -: 4962:      ENDDO
        -: 4963:      ERROR = ER
        -: 4964:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 4965:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4966:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4967:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4968:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4969:            ERROR = MIN(ERROR,IERR)
        -: 4970:      ENDDO
        -: 4971:      ENDDO
        -: 4972:      ENDDO
        -: 4973:      ENDDO
        1: 4974:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 4975:            call ansyes(tname)
call    0 returned 100%
        -: 4976:      ELSE
    #####: 4977:            call ansno(tname)
call    0 never executed
        -: 4978:      ENDIF
       1*: 4979:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 4980:      END
        -: 4981:C ---------------------------------------------cons3462
        -: 4982:C consistent arrays with 4 dimensions
        -: 4983:C two consistent arrays and one distributed array
function cons3462_ called 1 returned 100% blocks executed 93%
        1: 4984:      subroutine CONS3462
        -: 4985:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 4986:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),W(:,:,:,:),C(:,:,:,:)
        -: 4987:      character*8 tname
        -: 4988:      INTEGER ERROR,IERR
        -: 4989:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 4990:!DVM$   CONSISTENT V
        -: 4991:!DVM$   CONSISTENT W
       1*: 4992:      allocate (B(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 4993:      tname='CONS3462'
        9: 4994:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 4995:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 4996:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 4997:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 4998:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 4999:      ENDDO
        -: 5000:      ENDDO
        -: 5001:      ENDDO
        -: 5002:      ENDDO
        -: 5003:!dvm$ region
        -: 5004:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 5005:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5006:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5007:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5008:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5009:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 5010:      ENDDO
        -: 5011:      ENDDO
        -: 5012:      ENDDO
        -: 5013:      ENDDO
        -: 5014:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 5015:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5016:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5017:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5018:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5019:            V(I,J,K,L)=B(I,J,K,L)
        -: 5020:      ENDDO
        -: 5021:      ENDDO
        -: 5022:      ENDDO
        -: 5023:      ENDDO
        -: 5024:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 5025:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5026:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5027:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5028:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5029:            W(I,J,K,L)=B(I,J,K,L)
        -: 5030:      ENDDO
        -: 5031:      ENDDO
        -: 5032:      ENDDO
        -: 5033:      ENDDO
        -: 5034:!dvm$ end region
        -: 5035:!dvm$ get_actual (V, W)
        -: 5036:      IERR = ER
        9: 5037:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5038:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5039:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5040:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5041:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 5042:                  IERR = C(I,J,K,L)
        -: 5043:                  EXIT
        -: 5044:            ENDIF
        -: 5045:      ENDDO
        -: 5046:      ENDDO
        -: 5047:      ENDDO
        -: 5048:      ENDDO
        9: 5049:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5050:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5051:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5052:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5053:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 5054:                  IERR = C(I,J,K,L)
        -: 5055:                  EXIT
        -: 5056:            ENDIF
        -: 5057:      ENDDO
        -: 5058:      ENDDO
        -: 5059:      ENDDO
        -: 5060:      ENDDO
        -: 5061:      ERROR = ER
        -: 5062:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 5063:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5064:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5065:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5066:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5067:            ERROR = MIN(ERROR,IERR)
        -: 5068:      ENDDO
        -: 5069:      ENDDO
        -: 5070:      ENDDO
        -: 5071:      ENDDO
        1: 5072:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 5073:            call ansyes(tname)
call    0 returned 100%
        -: 5074:      ELSE
    #####: 5075:            call ansno(tname)
call    0 never executed
        -: 5076:      ENDIF
       1*: 5077:      deallocate (B, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
        1: 5078:      END
        -: 5079:C ---------------------------------------------cons3463
        -: 5080:C consistent arrays with 4 dimensions
        -: 5081:C two consistent arrays and two distributed arrays
function cons3463_ called 1 returned 100% blocks executed 93%
        1: 5082:      subroutine CONS3463
        -: 5083:      INTEGER,PARAMETER:: N=8, ER=10000
        1: 5084:      integer,allocatable::B(:,:,:,:),A(:,:,:,:),V(:,:,:,:),W(:,:,:,:)
        1: 5085:     *,C(:,:,:,:)
        -: 5086:      character*8 tname
        -: 5087:      INTEGER ERROR,IERR
        -: 5088:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 5089:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   A
        -: 5090:!DVM$   CONSISTENT V
        -: 5091:!DVM$   CONSISTENT W
       1*: 5092:      allocate (B(N,N,N,N),A(N,N,N,N),V(N,N,N,N),W(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 5093:      tname='CONS3463'
        9: 5094:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5095:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5096:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5097:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5098:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 5099:      ENDDO
        -: 5100:      ENDDO
        -: 5101:      ENDDO
        -: 5102:      ENDDO
        -: 5103:!dvm$ region
        -: 5104:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
        9: 5105:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5106:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5107:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5108:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5109:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 5110:      ENDDO
        -: 5111:      ENDDO
        -: 5112:      ENDDO
        -: 5113:      ENDDO
        -: 5114:!DVM$   PARALLEL    (L,K,J,I)   ON   A(I,J,K,L)
        9: 5115:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5116:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5117:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5118:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5119:            A(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 5120:      ENDDO
        -: 5121:      ENDDO
        -: 5122:      ENDDO
        -: 5123:      ENDDO
        -: 5124:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
        9: 5125:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5126:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5127:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5128:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5129:            V(I,J,K,L)=B(I,J,K,L)
        -: 5130:      ENDDO
        -: 5131:      ENDDO
        -: 5132:      ENDDO
        -: 5133:      ENDDO
        -: 5134:!DVM$   PARALLEL  (L,K,J,I)   ON  A(I,J,K,L), CONSISTENT(W(I,J,K,L))
        9: 5135:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5136:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5137:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5138:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5139:            W(I,J,K,L)=A(I,J,K,L)
        -: 5140:      ENDDO
        -: 5141:      ENDDO
        -: 5142:      ENDDO
        -: 5143:      ENDDO
        -: 5144:!dvm$ end region
        -: 5145:!dvm$ get_actual (V, W)
        -: 5146:      IERR = ER
        9: 5147:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5148:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5149:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5150:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5151:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 5152:                  IERR = C(I,J,K,L)
        -: 5153:                  EXIT
        -: 5154:            ENDIF
        -: 5155:      ENDDO
        -: 5156:      ENDDO
        -: 5157:      ENDDO
        -: 5158:      ENDDO
        9: 5159:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5160:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5161:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5162:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5163:            IF(W(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 5164:                  IERR = C(I,J,K,L)
        -: 5165:                  EXIT
        -: 5166:            ENDIF
        -: 5167:      ENDDO
        -: 5168:      ENDDO
        -: 5169:      ENDDO
        -: 5170:      ENDDO
        -: 5171:      ERROR = ER
        -: 5172:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
        9: 5173:      DO L = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
       73: 5174:      DO K = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
      584: 5175:      DO J = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4672: 5176:      DO I = 1, N
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
     4608: 5177:            ERROR = MIN(ERROR,IERR)
        -: 5178:      ENDDO
        -: 5179:      ENDDO
        -: 5180:      ENDDO
        -: 5181:      ENDDO
        1: 5182:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 5183:            call ansyes(tname)
call    0 returned 100%
        -: 5184:      ELSE
    #####: 5185:            call ansno(tname)
call    0 never executed
        -: 5186:      ENDIF
       1*: 5187:      deallocate (B, A, V, W, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 taken 0% (fallthrough)
branch 13 taken 100%
call   14 never executed
        1: 5188:      END
        -: 5189:C ---------------------------------------------cons3464
        -: 5190:C consistent arrays with 4 dimensions
        -: 5191:C one consistent array and one distributed array
        -: 5192:C big data
function cons3464_ called 1 returned 100% blocks executed 93%
        1: 5193:      subroutine CONS3464
        -: 5194:      INTEGER,PARAMETER:: N=16, ER=1000000
        1: 5195:      integer,allocatable:: B(:,:,:,:),V(:,:,:,:),C(:,:,:,:)
        -: 5196:      character*8 tname
        -: 5197:      INTEGER ERROR,IERR
        -: 5198:!DVM$   DISTRIBUTE     ( BLOCK, BLOCK, BLOCK, * )   ::   B
        -: 5199:!DVM$   CONSISTENT V
       1*: 5200:      allocate (B(N,N,N,N),V(N,N,N,N),C(N,N,N,N))
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 5201:      tname='CONS3464'
       17: 5202:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 5203:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 5204:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 5205:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 5206:            C(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 5207:      ENDDO
        -: 5208:      ENDDO
        -: 5209:      ENDDO
        -: 5210:      ENDDO
        -: 5211:!dvm$ region
        -: 5212:!DVM$   PARALLEL    (L,K,J,I)   ON   B(I,J,K,L)
       17: 5213:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 5214:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 5215:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 5216:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 5217:            B(I,J,K,L)=I+(N-1)*J+(N-1)*(N-1)*K+(N-1)*(N-1)*(N-1)*L
        -: 5218:      ENDDO
        -: 5219:      ENDDO
        -: 5220:      ENDDO
        -: 5221:      ENDDO
        -: 5222:!DVM$   PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), CONSISTENT(V(I,J,K,L))
       17: 5223:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 5224:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 5225:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 5226:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 5227:            V(I,J,K,L)=B(I,J,K,L)
        -: 5228:      ENDDO
        -: 5229:      ENDDO
        -: 5230:      ENDDO
        -: 5231:      ENDDO
        -: 5232:!dvm$ end region
        -: 5233:!dvm$ get_actual (V)
        -: 5234:      IERR = ER
       17: 5235:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 5236:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 5237:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 5238:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 5239:            IF(V(I,J,K,L) .NE. C(I,J,K,L)) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 5240:                  IERR = C(I,J,K,L)
        -: 5241:                  EXIT
        -: 5242:            ENDIF
        -: 5243:      ENDDO
        -: 5244:      ENDDO
        -: 5245:      ENDDO
        -: 5246:      ENDDO
        -: 5247:      ERROR = ER
        -: 5248:!DVM$  PARALLEL  (L,K,J,I)   ON  B(I,J,K,L), REDUCTION(MIN(ERROR))
       17: 5249:      DO L = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
      273: 5250:      DO K = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
     4368: 5251:      DO J = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69888: 5252:      DO I = 1, N
branch  0 taken 94% (fallthrough)
branch  1 taken 6%
    69632: 5253:            ERROR = MIN(ERROR,IERR)
        -: 5254:      ENDDO
        -: 5255:      ENDDO
        -: 5256:      ENDDO
        -: 5257:      ENDDO
        1: 5258:      IF(ERROR .EQ. ER) THEN
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1: 5259:            call ansyes(tname)
call    0 returned 100%
        -: 5260:      ELSE
    #####: 5261:            call ansno(tname)
call    0 never executed
        -: 5262:      ENDIF
       1*: 5263:      deallocate (B, V, C)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
        1: 5264:      END
        -: 5265:
        -: 5266:C --------------------------------------------------
function ansyes_ called 64 returned 100% blocks executed 100%
       64: 5267:      subroutine ansyes(name)
        -: 5268:      character*8 name
       64: 5269:      print *,name,'  -  complete'
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
       64: 5270:      end
function ansno_ called 0 returned 0% blocks executed 0%
    #####: 5271:      subroutine ansno(name)
        -: 5272:      character*8 name
    #####: 5273:      print *,name,'  -  ***error'
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 5274:      end
